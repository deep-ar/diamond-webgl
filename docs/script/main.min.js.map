{"version":3,"sources":["webpack://diamond-webgl/./src/ts/drawer.ts","webpack://diamond-webgl/./src/ts/fps-indicator.ts","webpack://diamond-webgl/./src/ts/gemstone.ts","webpack://diamond-webgl/./src/ts/geometry.ts","webpack://diamond-webgl/./src/ts/gl-utils/gl-canvas.ts","webpack://diamond-webgl/./src/ts/gl-utils/gl-resource.ts","webpack://diamond-webgl/./src/ts/gl-utils/shader-manager.ts","webpack://diamond-webgl/./src/ts/gl-utils/shader-sources.ts","webpack://diamond-webgl/./src/ts/gl-utils/shader.ts","webpack://diamond-webgl/./src/ts/gl-utils/vbo.ts","webpack://diamond-webgl/./src/ts/gl-utils/viewport.ts","webpack://diamond-webgl/./src/ts/lazy-shader.ts","webpack://diamond-webgl/./src/ts/main.ts","webpack://diamond-webgl/./src/ts/orbital-camera.ts","webpack://diamond-webgl/./src/ts/parameters.ts","webpack://diamond-webgl/./src/ts/post-processing.ts","webpack://diamond-webgl/./src/ts/utils.ts","webpack://diamond-webgl/webpack/bootstrap","webpack://diamond-webgl/webpack/startup"],"names":[],"mappings":"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","file":"main.min.js","sourcesContent":["import { VBO } from \"./gl-utils/vbo\";\r\nimport { Shader } from \"./gl-utils/shader\";\r\n\r\nimport { Gemstone } from \"./gemstone\";\r\nimport { OrbitalCamera } from \"./orbital-camera\";\r\nimport { ELightDirection, ELightType, EProjection, Parameters } from \"./parameters\";\r\nimport { LazyShader } from \"./lazy-shader\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\n\r\ndeclare const mat4: any;\r\n\r\n\r\nconst UNIT_CUBE = new Float32Array([\r\n    -.5, -.5, -.5,\r\n    -.5, -.5, +.5,\r\n    +.5, -.5, -.5,\r\n    +.5, -.5, -.5,\r\n    -.5, -.5, +.5,\r\n    +.5, -.5, +.5,\r\n\r\n    +.5, -.5, -.5,\r\n    +.5, -.5, +.5,\r\n    +.5, +.5, -.5,\r\n    +.5, +.5, -.5,\r\n    +.5, -.5, +.5,\r\n    +.5, +.5, +.5,\r\n\r\n    -.5, -.5, +.5,\r\n    -.5, +.5, +.5,\r\n    +.5, -.5, +.5,\r\n    +.5, -.5, +.5,\r\n    -.5, +.5, +.5,\r\n    +.5, +.5, +.5,\r\n\r\n    -.5, +.5, -.5,\r\n    +.5, +.5, -.5,\r\n    -.5, +.5, +.5,\r\n    +.5, +.5, -.5,\r\n    +.5, +.5, +.5,\r\n    -.5, +.5, +.5,\r\n\r\n    -.5, -.5, -.5,\r\n    -.5, +.5, -.5,\r\n    -.5, -.5, +.5,\r\n    -.5, +.5, -.5,\r\n    -.5, +.5, +.5,\r\n    -.5, -.5, +.5,\r\n\r\n    -.5, -.5, -.5,\r\n    +.5, -.5, -.5,\r\n    -.5, +.5, -.5,\r\n    +.5, -.5, -.5,\r\n    +.5, +.5, -.5,\r\n    -.5, +.5, -.5,\r\n]);\r\n\r\nclass Drawer {\r\n    private readonly gl: WebGLRenderingContext;\r\n    private readonly cubeVBO: VBO;\r\n    private readonly pMatrix: number[];\r\n    private readonly mvpMatrix: number[];\r\n\r\n    private readonly camera: OrbitalCamera;\r\n\r\n    private readonly shader: LazyShader;\r\n    private readonly shaderMulticolor: LazyShader;\r\n    private readonly raytracedVolumeShader: LazyShader;\r\n    private readonly normalsShader: LazyShader;\r\n    private readonly shadersSkybox: LazyShader;\r\n\r\n    private readonly geometryVBO: WebGLBuffer;\r\n\r\n    private gemstone: Gemstone;\r\n\r\n    public constructor(gl: WebGLRenderingContext) {\r\n        Page.Canvas.showLoader(true);\r\n\r\n        this.gl = gl;\r\n        this.cubeVBO = new VBO(gl, UNIT_CUBE, 3, gl.FLOAT, true);\r\n\r\n        this.geometryVBO = gl.createBuffer();\r\n\r\n        this.shader = new LazyShader(\"shader.frag\", \"shader.vert\", \"default shader\");\r\n        this.shaderMulticolor = new LazyShader(\"shader-multicolor.frag\", \"shader.vert\", \"shader with dispersion\");\r\n        this.raytracedVolumeShader = new LazyShader(\"raytracedVolume.frag\", \"raytracedVolume.vert\", \"debug raytraced shader\");\r\n        this.normalsShader = new LazyShader(\"normals.frag\", \"shader.vert\", \"normals shader\");\r\n        this.shadersSkybox = new LazyShader(\"skybox.frag\", \"skybox.vert\", \"skybox shader\");\r\n\r\n        this.pMatrix = mat4.create();\r\n        this.mvpMatrix = mat4.create();\r\n        this.camera = new OrbitalCamera([0, 0, 0], 1.5);\r\n        this.camera.phi = 1;\r\n        this.camera.theta = 2;\r\n\r\n        const EPSILON = 0.0001;\r\n        const minPhi = EPSILON;\r\n        const maxPhi = Math.PI - EPSILON;\r\n        Page.Canvas.Observers.mouseDrag.push((dX: number, dY: number) => {\r\n            this.camera.theta -= 0.5 * 2 * 3.14159 * dX;\r\n            this.camera.phi -= 0.5 * 2 * 3 * dY;\r\n            this.camera.phi = Math.min(maxPhi, Math.max(minPhi, this.camera.phi));\r\n            this.updateMVPMatrix();\r\n        });\r\n\r\n        const minDist = 0.8;\r\n        const maxDist = 8;\r\n        Page.Canvas.Observers.mouseWheel.push((delta: number) => {\r\n            let d = this.camera.distance + 0.2 * delta;\r\n            d = Math.min(maxDist, Math.max(minDist, d));\r\n            this.camera.distance = d;\r\n            this.updateMVPMatrix();\r\n        });\r\n\r\n        Page.Canvas.Observers.canvasResize.push(() => {\r\n            this.updateMVPMatrix();\r\n        });\r\n\r\n        Parameters.addCameraChangeObservers(() => {\r\n            this.updateMVPMatrix();\r\n        });\r\n\r\n        this.updateMVPMatrix();\r\n\r\n        gl.enable(gl.CULL_FACE);\r\n        gl.frontFace(gl.CCW);\r\n        gl.cullFace(gl.BACK);\r\n        gl.disable(gl.DEPTH_TEST);\r\n        gl.disable(gl.BLEND);\r\n\r\n        function updateBackgroundColor(): void {\r\n            const backgroundColor = Parameters.backgroundColor;\r\n            gl.clearColor(backgroundColor.r / 255, backgroundColor.g / 255, backgroundColor.b / 255, 0.1);\r\n        }\r\n        Parameters.addBackgroundColorObserver(updateBackgroundColor);\r\n        updateBackgroundColor();\r\n\r\n        const recomputeShader = () => {\r\n            const injectedForGemstone = this.computeInjectedInstructions();\r\n            this.shader.reset(injectedForGemstone);\r\n        };\r\n        Parameters.addRecomputeShaderObservers(recomputeShader);\r\n    }\r\n\r\n    public setGemstone(gemstone: Gemstone): void {\r\n        if (this.gemstone !== gemstone) {\r\n            this.gemstone = gemstone;\r\n\r\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.geometryVBO);\r\n            this.gl.bufferData(this.gl.ARRAY_BUFFER, gemstone.bufferData, this.gl.STATIC_DRAW);\r\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\r\n\r\n            const injectedForGemstone = this.computeInjectedInstructions();\r\n            this.shader.reset(injectedForGemstone);\r\n            this.shaderMulticolor.reset(injectedForGemstone);\r\n            this.raytracedVolumeShader.reset(injectedForGemstone);\r\n\r\n            Page.Canvas.setIndicatorText(\"triangles-count-indicator\", gemstone.nbTriangles.toString());\r\n            Page.Canvas.setIndicatorText(\"facets-count-indicator\", gemstone.facets.length.toString());\r\n\r\n            const CONVEXITY_ERROR_KEY = \"shape_not_convex\";\r\n            if (this.gemstone.isConvex) {\r\n                Page.Demopage.setErrorMessage(CONVEXITY_ERROR_KEY, \"\");\r\n            } else {\r\n                Page.Demopage.setErrorMessage(CONVEXITY_ERROR_KEY, \"The current geometry is not supported. The simulation will not look as expected.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    public rotate(deltaAngle: number): void {\r\n        this.camera.theta += deltaAngle;\r\n        this.updateMVPMatrix();\r\n    }\r\n\r\n    public draw(): void {\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\r\n\r\n        if (Parameters.displaySkybox) {\r\n            this.drawSkybox();\r\n        }\r\n\r\n        if (!this.gemstone) {\r\n            return; // nothing to draw\r\n        }\r\n\r\n        let shader: Shader;\r\n\r\n        if (Parameters.geometryOnly) {\r\n            shader = this.normalsShader.shader;\r\n            if (!shader) {\r\n                return; // not ready\r\n            }\r\n        } else {\r\n            const isASETSkybox = (Parameters.lightType === ELightType.ASET);\r\n\r\n            const baseRefractionIndex = Parameters.refractionIndex;\r\n            const wantedDispersion = Parameters.dispersion;\r\n            const dispersion = Math.min(wantedDispersion, baseRefractionIndex - 1);\r\n\r\n            const useSimpleShader = (dispersion <= 0) || isASETSkybox || Parameters.displayNormals;\r\n            if (useSimpleShader) {\r\n                shader = this.shader.shader;\r\n                if (!shader) {\r\n                    return; // not ready\r\n                }\r\n\r\n                shader.u[\"uRefractionIndex\"].value = Parameters.refractionIndex;\r\n                shader.u[\"uASETSkybox\"].value = isASETSkybox ? 1 : 0;\r\n                shader.u[\"uDisplayNormals\"].value = Parameters.displayNormals ? 1 : 0;\r\n            } else {\r\n                shader = this.shaderMulticolor.shader;\r\n                if (!shader) {\r\n                    return; // not ready\r\n                }\r\n\r\n                shader.u[\"uRefractionIndices\"].value = [\r\n                    baseRefractionIndex - 0.5 * dispersion,\r\n                    baseRefractionIndex,\r\n                    baseRefractionIndex + 0.5 * dispersion,\r\n                ];\r\n            }\r\n\r\n            shader.u[\"uEyePosition\"].value = this.camera.eyePos;\r\n            shader.u[\"uOrthographic\"].value = (Parameters.projection === EProjection.ORTHOGRAPHIC) ? 1 : 0;\r\n            shader.u[\"uLightDirection\"].value = (Parameters.lightDirection === ELightDirection.DOWNWARD) ? 1 : -1;\r\n            shader.u[\"uDisplayReflection\"].value = Parameters.displayReflection ? 1 : 0;\r\n\r\n            if (typeof shader.u[\"uAbsorption\"] !== \"undefined\") {\r\n                // when ray depth = 0, this uniform is unused and some drivers delete it, so protect this access\r\n                const gemAbsorption = Parameters.absorption;\r\n                const gemColor = isASETSkybox ? { r: 250, g: 250, b: 250 } : Parameters.gemColor;\r\n                shader.u[\"uAbsorption\"].value = [\r\n                    gemAbsorption * (1 - gemColor.r / 255),\r\n                    gemAbsorption * (1 - gemColor.g / 255),\r\n                    gemAbsorption * (1 - gemColor.b / 255),\r\n                ];\r\n            }\r\n        }\r\n\r\n        Page.Canvas.showLoader(false);\r\n\r\n        shader.u[\"uMVPMatrix\"].value = this.mvpMatrix;\r\n        shader.use();\r\n\r\n        const BYTES_PER_FLOAT = 4;\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.geometryVBO);\r\n        const aPositionLoc = shader.a[\"aPosition\"].loc;\r\n        this.gl.enableVertexAttribArray(aPositionLoc);\r\n        this.gl.vertexAttribPointer(aPositionLoc, 3, this.gl.FLOAT, false, 2 * 3 * BYTES_PER_FLOAT, 0);\r\n\r\n        const aNormalLoc = shader.a[\"aNormal\"].loc;\r\n        this.gl.enableVertexAttribArray(aNormalLoc);\r\n        this.gl.vertexAttribPointer(aNormalLoc, 3, this.gl.FLOAT, false, 2 * 3 * BYTES_PER_FLOAT, 3 * BYTES_PER_FLOAT);\r\n\r\n        shader.bindUniformsAndAttributes();\r\n        this.gl.drawArrays(this.gl.TRIANGLES, 0, 3 * this.gemstone.nbTriangles);\r\n    }\r\n\r\n    public drawDebugVolume(): void {\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\r\n\r\n        if (this.gemstone) {\r\n            const shader = this.raytracedVolumeShader.shader;\r\n\r\n            if (shader) {\r\n                Page.Canvas.showLoader(false);\r\n\r\n                shader.a[\"aPosition\"].VBO = this.cubeVBO;\r\n                shader.u[\"uMVPMatrix\"].value = this.mvpMatrix;\r\n                shader.u[\"uEyePosition\"].value = this.camera.eyePos;\r\n                shader.u[\"uOrthographic\"].value = (Parameters.projection === EProjection.ORTHOGRAPHIC) ? 1 : 0;\r\n                shader.use();\r\n                shader.bindUniformsAndAttributes();\r\n                this.gl.drawArrays(this.gl.TRIANGLES, 0, 3 * 2 * 6);\r\n            }\r\n        }\r\n    }\r\n\r\n    private drawSkybox(): void {\r\n        const skyboxShader = this.shadersSkybox.shader;\r\n        if (skyboxShader) {\r\n            skyboxShader.a[\"aPosition\"].VBO = this.cubeVBO;\r\n            skyboxShader.u[\"uMVPMatrix\"].value = this.mvpMatrix;\r\n            skyboxShader.u[\"uEyePosition\"].value = this.camera.eyePos;\r\n            skyboxShader.u[\"uOrthographic\"].value = (Parameters.projection === EProjection.ORTHOGRAPHIC) ? 1 : 0;\r\n            skyboxShader.u[\"uASETSkybox\"].value = (Parameters.lightType === ELightType.ASET) ? 1 : 0;\r\n            skyboxShader.u[\"uLightDirection\"].value = (Parameters.lightDirection === ELightDirection.DOWNWARD) ? 1 : -1;\r\n            skyboxShader.use();\r\n            skyboxShader.bindUniformsAndAttributes();\r\n            this.gl.drawArrays(this.gl.TRIANGLES, 0, 3 * 2 * 6);\r\n        }\r\n    }\r\n\r\n    private updateMVPMatrix(): void {\r\n        const zNear = 0.1;\r\n        const zFar = 50.0;\r\n        const aspectRatio = Page.Canvas.getAspectRatio();\r\n\r\n        if (Parameters.projection === EProjection.PERSPECTIVE) {\r\n            mat4.perspective(this.pMatrix, 45, aspectRatio, zNear, zFar);\r\n        } else {\r\n            const distance = 0.5 * this.camera.distance;\r\n            mat4.ortho(this.pMatrix, -distance * aspectRatio, distance * aspectRatio, -distance, distance, zNear, zFar);\r\n        }\r\n\r\n        mat4.multiply(this.mvpMatrix, this.pMatrix, this.camera.viewMatrix);\r\n    }\r\n\r\n    private computeInjectedInstructions(): { [name: string]: string } {\r\n        const facetsDefinitionInstructions: string[] = [];\r\n        const computeEntryPointInstructions: string[] = [];\r\n        const checkIfInsideInstructions: string[] = [];\r\n        const computeInternalIntersectionInstructions: string[] = [];\r\n        for (let i = 0; i < this.gemstone.facets.length; i++) {\r\n            const facet = this.gemstone.facets[i];\r\n            const facetPointName = `FACET_${i}_POINT`;\r\n            const facetNormalName = `FACET_${i}_NORMAL`;\r\n\r\n            facetsDefinitionInstructions.push(`const vec3 ${facetPointName} = vec3(${facet.point.x},${facet.point.y},${facet.point.z});`);\r\n            facetsDefinitionInstructions.push(`const vec3 ${facetNormalName} = vec3(${facet.normal.x},${facet.normal.y},${facet.normal.z});`);\r\n\r\n            computeEntryPointInstructions.push(`computeIntersectionWithPlane(${facetPointName}, ${facetNormalName}, eyePosition, fromEyeNormalized, theta, facetNormal);`);\r\n            checkIfInsideInstructions.push(`isInside(${facetPointName}, ${facetNormalName}, entryPoint)`);\r\n\r\n            computeInternalIntersectionInstructions.push(`checkNextInternalIntersection(${facetPointName}, ${facetNormalName}, position, direction, theta, facetNormal);`);\r\n        }\r\n\r\n        return {\r\n            FACETS_DEFINITION: facetsDefinitionInstructions.join(\"\\n\"),\r\n            COMPUTE_ENTRY_POINT: computeEntryPointInstructions.join(\"\\n\\t\"),\r\n            CHECK_IF_INSIDE: checkIfInsideInstructions.join(\" && \"),\r\n            COMPUTE_INTERNAL_INTERSECTION: computeInternalIntersectionInstructions.join(\"\\n\\t\"),\r\n            RAY_DEPTH: Parameters.rayDepth.toString(),\r\n        };\r\n    }\r\n}\r\n\r\nexport { Drawer };\r\n","import \"./page-interface-generated\";\r\n\r\n\r\nlet framesSinceLastFPSUpdate = 0;\r\nlet timeOfLastFPSUpdate = performance.now();\r\n\r\nsetInterval(() => {\r\n    const now = performance.now();\r\n    const fps = 1000 * framesSinceLastFPSUpdate / (now - timeOfLastFPSUpdate);\r\n    timeOfLastFPSUpdate = now;\r\n    framesSinceLastFPSUpdate = 0;\r\n\r\n    Page.Canvas.setIndicatorText(\"fps-indicator\", Math.round(fps).toString());\r\n}, 500);\r\n\r\nfunction registerFrame(): void {\r\n    framesSinceLastFPSUpdate++;\r\n}\r\n\r\nexport { registerFrame };\r\n","import { computeIntersection, computePlaneFromTriangle, computeTriangleNormal, cylindric, IOrientedPlane, IPoint, isInPlane, isInsideVolume, ITriangle, rotateZ } from \"./geometry\";\r\nimport { Parameters } from \"./parameters\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\n\r\nfunction logParsingInfo(message: string): void {\r\n    if (Parameters.verbose) {\r\n        console.log(`OBJ parsing:  ${message}`);\r\n    }\r\n}\r\n\r\nconst knownGemstones: {\r\n    [name: string]: Gemstone | null; // null when requested but not loaded yet\r\n} = {};\r\n\r\nclass Gemstone {\r\n    public static loadGemstone(name: string, callback: (gemstone: Gemstone | null) => unknown): void {\r\n        if (name === \"CUSTOM CUT\") {\r\n            callback(Gemstone.customCut());\r\n        } else if (typeof knownGemstones[name] !== \"undefined\") {\r\n            callback(knownGemstones[name]);\r\n        } else {\r\n            const request = new XMLHttpRequest();\r\n            request.addEventListener(\"load\", () => {\r\n                if (request.status === 200) {\r\n                    if (typeof knownGemstones[name] === \"undefined\") { // maybe it was loaded in the meantime\r\n                        knownGemstones[name] = Gemstone.fromObj(request.responseText);\r\n                    }\r\n                    callback(knownGemstones[name]);\r\n                } else {\r\n                    callback(null);\r\n                }\r\n            });\r\n            request.open(\"GET\", `models/${name}?v=${Page.version}`);\r\n            request.send();\r\n        }\r\n    }\r\n\r\n    public static fromObj(input: string): Gemstone {\r\n        const lines = input.split(\"\\n\");\r\n\r\n        const vertices: IPoint[] = [];\r\n        const triangles: ITriangle[] = [];\r\n\r\n        for (let i = 0; i < lines.length; i++) {\r\n            const line = lines[i].trim();\r\n            const lineItems = line.split(/\\s+/);\r\n            const command = lineItems[0];\r\n\r\n            if (command === \"v\") { // declare vertex\r\n                if (lineItems.length >= 4) {\r\n                    vertices.push({\r\n                        x: parseFloat(lineItems[1]),\r\n                        y: parseFloat(lineItems[2]),\r\n                        z: parseFloat(lineItems[3]),\r\n                    });\r\n                } else {\r\n                    logParsingInfo(`Ignoring line ${i} because it does not have enough items: '${line}'.`);\r\n                    continue;\r\n                }\r\n            } else if (command === \"f\") { // declare face\r\n                if (lineItems.length >= 4) {\r\n                    // faces with more that 3 vertices are interpreted as TRIANGLE_FAN\r\n                    for (let iV = 3; iV < lineItems.length; iV++) {\r\n                        const indices: number[] = [\r\n                            +(lineItems[1].split(\"/\")[0]),\r\n                            +(lineItems[iV - 1].split(\"/\")[0]),\r\n                            +(lineItems[iV].split(\"/\")[0]),\r\n                        ];\r\n\r\n                        for (const indice of indices) {\r\n                            if (indice < 1 || indice >= vertices.length) {\r\n                                logParsingInfo(`Ignoring line ${i} because vertex index ${indice} is out of range: '${line}'.`);\r\n                                continue;\r\n                            }\r\n                        }\r\n\r\n                        triangles.push({\r\n                            p1: vertices[indices[0] - 1],\r\n                            p2: vertices[indices[1] - 1],\r\n                            p3: vertices[indices[2] - 1],\r\n                        });\r\n                    }\r\n                } else {\r\n                    logParsingInfo(`Ignoring line ${i} because only triangular faces are supported: '${line}'.`);\r\n                    continue;\r\n                }\r\n            } else {\r\n                logParsingInfo(`Ignoring line ${i}: '${line}'.`);\r\n                continue;\r\n            }\r\n        }\r\n\r\n        return new Gemstone(triangles);\r\n    }\r\n\r\n    public static customCut(): Gemstone {\r\n        const triangles = Gemstone.computeBrilliantCut();\r\n        return new Gemstone(triangles);\r\n    }\r\n\r\n    public readonly facets: IOrientedPlane[];\r\n    public readonly bufferData: Float32Array;\r\n    public readonly nbTriangles: number;\r\n    public readonly isConvex: boolean;\r\n\r\n    private constructor(triangles: ITriangle[]) {\r\n        Gemstone.mutualizeTrianglesVertices(triangles);\r\n\r\n        this.nbTriangles = triangles.length;\r\n        this.bufferData = Gemstone.buildBufferFromTriangles(triangles);\r\n        this.facets = Gemstone.buildFacetsFromTriangles(triangles);\r\n\r\n        const vertices: IPoint[] = [];\r\n        for (const triangle of triangles) {\r\n            vertices.push(triangle.p1);\r\n            vertices.push(triangle.p2);\r\n            vertices.push(triangle.p3);\r\n        }\r\n        this.isConvex = Gemstone.checkConvexity(vertices, this.facets);\r\n\r\n        if (!this.isConvex) {\r\n            console.log(\"This shape is not convex :(.\");\r\n        }\r\n    }\r\n\r\n    // private static exportAsObj(triangles: ITriangle[]): string {\r\n    //     const verticesDeclarations: string[] = [];\r\n    //     const facesDeclarations: string[] = [];\r\n\r\n    //     const verticesOrdered: IPoint[] = [];\r\n    //     for (const triangle of triangles) {\r\n    //         let indexOf1 = verticesOrdered.indexOf(triangle.p1);\r\n    //         let indexOf2 = verticesOrdered.indexOf(triangle.p2);\r\n    //         let indexOf3 = verticesOrdered.indexOf(triangle.p3);\r\n\r\n    //         if (indexOf1 < 0) {\r\n    //             indexOf1 = verticesOrdered.length;\r\n    //             verticesOrdered.push(triangle.p1);\r\n    //         }\r\n    //         if (indexOf2 < 0) {\r\n    //             indexOf2 = verticesOrdered.length;\r\n    //             verticesOrdered.push(triangle.p2);\r\n    //         }\r\n    //         if (indexOf3 < 0) {\r\n    //             indexOf3 = verticesOrdered.length;\r\n    //             verticesOrdered.push(triangle.p3);\r\n    //         }\r\n\r\n    //         facesDeclarations.push(`f ${indexOf1 + 1} ${indexOf2 + 1} ${indexOf3 + 1}`);\r\n    //     }\r\n\r\n    //     for (const vertice of verticesOrdered) {\r\n    //         verticesDeclarations.push(`v ${vertice.x} ${vertice.y} ${vertice.z}`);\r\n    //     }\r\n\r\n    //     return `${verticesDeclarations.join(\"\\n\")}\\n\\n${facesDeclarations.join(\"\\n\")}`;\r\n    // }\r\n\r\n    private static buildBufferFromTriangles(triangles: ITriangle[]): Float32Array {\r\n        const nbFloatsPerTriangle = (3 + 3) * 3;\r\n        const bufferData = new Float32Array(nbFloatsPerTriangle * triangles.length);\r\n        let i = 0;\r\n        for (const triangle of triangles) {\r\n            const normal = computeTriangleNormal(triangle);\r\n\r\n            bufferData[i++] = triangle.p1.x;\r\n            bufferData[i++] = triangle.p1.y;\r\n            bufferData[i++] = triangle.p1.z;\r\n            bufferData[i++] = normal.x;\r\n            bufferData[i++] = normal.y;\r\n            bufferData[i++] = normal.z;\r\n            bufferData[i++] = triangle.p2.x;\r\n            bufferData[i++] = triangle.p2.y;\r\n            bufferData[i++] = triangle.p2.z;\r\n            bufferData[i++] = normal.x;\r\n            bufferData[i++] = normal.y;\r\n            bufferData[i++] = normal.z;\r\n            bufferData[i++] = triangle.p3.x;\r\n            bufferData[i++] = triangle.p3.y;\r\n            bufferData[i++] = triangle.p3.z;\r\n            bufferData[i++] = normal.x;\r\n            bufferData[i++] = normal.y;\r\n            bufferData[i++] = normal.z;\r\n        }\r\n        return bufferData;\r\n    }\r\n\r\n    private static buildFacetsFromTriangles(triangles: ITriangle[]): IOrientedPlane[] {\r\n        const result: IOrientedPlane[] = [];\r\n        for (const triangle of triangles) {\r\n            let knownFacet = false;\r\n\r\n            for (const registeredPlane of result) {\r\n                if (isInPlane(registeredPlane, triangle.p1) && isInPlane(registeredPlane, triangle.p2) && isInPlane(registeredPlane, triangle.p3)) {\r\n                    knownFacet = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!knownFacet) {\r\n                result.push(computePlaneFromTriangle(triangle));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private static checkConvexity(vertices: IPoint[], facets: IOrientedPlane[]): boolean {\r\n        for (const vertice of vertices) {\r\n            if (!isInsideVolume(facets, vertice)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private static computeBrilliantCut(): ITriangle[] {\r\n        const CROWN_SIZE = 1;\r\n        const HALF_CROWN_SIZE = 0.5 * CROWN_SIZE;\r\n        const PAVILION_HEIGHT = Parameters.customCutPavillionHeight;\r\n        const PAVILION_STEP = Parameters.customCutPavillionRati;\r\n        const GIRDLE_THICKNESS = Parameters.customCutGirdleThickness;\r\n        const GIRDLE_ROUNDNESS = Parameters.customCutGirdleRoundess;\r\n        const CROWN_DEPTH = Parameters.customCutCrownHeight;\r\n        const CROWN_RATIO = Parameters.customCutCrownRatio;\r\n        const TABLE_SIZE = Parameters.customCutCrownTable;\r\n        const CROWN_HEIGHT = GIRDLE_THICKNESS + CROWN_DEPTH;\r\n\r\n        const vertex0: IPoint = { x: 0, y: 0, z: -PAVILION_HEIGHT };\r\n\r\n        const vertex1: IPoint = cylindric((1 - PAVILION_STEP) * HALF_CROWN_SIZE / Math.cos(2 * Math.PI / 16), 2 * Math.PI / 8, -PAVILION_HEIGHT * PAVILION_STEP);\r\n        const vertex2: IPoint = rotateZ(vertex1, -2 * Math.PI / 8);\r\n        const vertex3: IPoint = cylindric(HALF_CROWN_SIZE, 2 * 2 * Math.PI / 16, 0);\r\n        const vertex4: IPoint = cylindric(HALF_CROWN_SIZE, 1 * 2 * Math.PI / 16, 0);\r\n        const vertex5: IPoint = cylindric(HALF_CROWN_SIZE, 0 * 2 * Math.PI / 16, 0);\r\n\r\n        const vertex6: IPoint = { x: vertex3.x, y: vertex3.y, z: GIRDLE_THICKNESS };\r\n        const vertex7: IPoint = { x: vertex4.x, y: vertex4.y, z: GIRDLE_THICKNESS };\r\n        const vertex8: IPoint = { x: vertex5.x, y: vertex5.y, z: GIRDLE_THICKNESS };\r\n\r\n        const vertex9: IPoint = cylindric(0.5 * ((1 - CROWN_RATIO) * CROWN_SIZE + CROWN_RATIO * TABLE_SIZE) / Math.cos(2 * Math.PI / 16), 2 * Math.PI / 8, GIRDLE_THICKNESS + CROWN_RATIO * CROWN_DEPTH);\r\n        const vertex10: IPoint = rotateZ(vertex9, -2 * Math.PI / 8);\r\n        const vertex11: IPoint = cylindric(0.5 * TABLE_SIZE, 1 * 2 * Math.PI / 16, CROWN_HEIGHT);\r\n        const vertex12: IPoint = cylindric(0.5 * TABLE_SIZE, -1 * 2 * Math.PI / 16, CROWN_HEIGHT);\r\n        const vertex13: IPoint = { x: 0, y: 0, z: CROWN_HEIGHT };\r\n\r\n        const lowerFacet1 = computePlaneFromTriangle({ p1: vertex2, p3: vertex5, p2: vertex4 });\r\n        const lowerFacet2 = computePlaneFromTriangle({ p1: vertex1, p3: vertex4, p2: vertex3 });\r\n\r\n        const higherFacet1 = computePlaneFromTriangle({ p1: vertex7, p3: vertex8, p2: vertex10 });\r\n        const higherFacet2 = computePlaneFromTriangle({ p1: vertex6, p3: vertex7, p2: vertex9 });\r\n\r\n        // compute one eighth\r\n        const triangles: ITriangle[] = [];\r\n\r\n        for (let iSide = 0; iSide < 2; iSide++) {\r\n            const lowerFacet = (iSide === 0) ? lowerFacet1 : lowerFacet2;\r\n            const higherFacet = (iSide === 0) ? higherFacet1 : higherFacet2;\r\n            const lowerBaseVertex = (iSide === 0) ? vertex2 : vertex1;\r\n            const upperBaseVertex = (iSide === 0) ? vertex10 : vertex9;\r\n\r\n            const nbPoints = GIRDLE_ROUNDNESS + 2;\r\n            const deltaAngle = 2 * Math.PI / 16 / (nbPoints - 1);\r\n            const sideBaseAngle = iSide * 2 * Math.PI / 16;\r\n            for (let iP = 0; iP < nbPoints - 1; iP++) {\r\n                const angle = sideBaseAngle + iP * deltaAngle;\r\n\r\n                const lowerN = computeIntersection(cylindric(HALF_CROWN_SIZE, angle, 0), { x: 0, y: 0, z: 1 }, lowerFacet);\r\n                const lowerNplus = computeIntersection(cylindric(HALF_CROWN_SIZE, angle + deltaAngle, 0), { x: 0, y: 0, z: 1 }, lowerFacet);\r\n\r\n                const upperN = computeIntersection(cylindric(HALF_CROWN_SIZE, angle, 0), { x: 0, y: 0, z: 1 }, higherFacet);\r\n                const upperNplus = computeIntersection(cylindric(HALF_CROWN_SIZE, angle + deltaAngle, 0), { x: 0, y: 0, z: 1 }, higherFacet);\r\n\r\n                triangles.push({ p1: lowerBaseVertex, p3: lowerN, p2: lowerNplus });\r\n                triangles.push({ p1: lowerNplus, p3: lowerN, p2: upperN });\r\n                triangles.push({ p1: lowerNplus, p3: upperN, p2: upperNplus });\r\n                triangles.push({ p1: upperBaseVertex, p3: upperNplus, p2: upperN });\r\n            }\r\n        }\r\n\r\n\r\n        // PAVILION\r\n        triangles.push({ p1: vertex0, p3: vertex2, p2: vertex4 });\r\n        triangles.push({ p1: vertex0, p3: vertex4, p2: vertex1 });\r\n\r\n        // CROWN\r\n        triangles.push({ p1: vertex11, p3: vertex12, p2: vertex13 });\r\n        triangles.push({ p1: vertex11, p3: vertex10, p2: vertex12 });\r\n        triangles.push({ p1: vertex7, p3: vertex10, p2: vertex11 });\r\n        triangles.push({ p1: vertex7, p3: vertex11, p2: vertex9 });\r\n\r\n        // apply symetry\r\n        const nbTrianglesForOneEighth = triangles.length;\r\n        for (let i = 1; i < 8; i++) {\r\n            for (let iT = 0; iT < nbTrianglesForOneEighth; iT++) {\r\n                triangles.push({\r\n                    p1: rotateZ(triangles[iT].p1, i * 2 * Math.PI / 8),\r\n                    p2: rotateZ(triangles[iT].p2, i * 2 * Math.PI / 8),\r\n                    p3: rotateZ(triangles[iT].p3, i * 2 * Math.PI / 8),\r\n                });\r\n            }\r\n        }\r\n\r\n        return triangles;\r\n    }\r\n\r\n    private static mutualizeTrianglesVertices(triangles: ITriangle[]): void {\r\n        let nbPointsSaved = 0;\r\n\r\n        const knownVerticesStore: { [hash: string]: IPoint } = {};\r\n\r\n        const precision = Math.pow(10, 8);\r\n        function round(x: number): number {\r\n            return Math.round(precision * x);\r\n        }\r\n\r\n        function getSimilarVerticeFromStore(point: IPoint): IPoint {\r\n            const hash = `${round(point.x)}_${round(point.y)}_${round(point.z)}`;\r\n            if (typeof knownVerticesStore[hash] === \"undefined\") {\r\n                knownVerticesStore[hash] = point;\r\n            } else {\r\n                nbPointsSaved++;\r\n            }\r\n            return knownVerticesStore[hash];\r\n        }\r\n\r\n        for (const triangle of triangles) {\r\n            triangle.p1 = getSimilarVerticeFromStore(triangle.p1);\r\n            triangle.p2 = getSimilarVerticeFromStore(triangle.p2);\r\n            triangle.p3 = getSimilarVerticeFromStore(triangle.p3);\r\n        }\r\n\r\n        logParsingInfo(`After mutualization: ${Object.keys(knownVerticesStore).length} vertices (saved ${nbPointsSaved} vertices).`);\r\n    }\r\n}\r\n\r\nexport { Gemstone };\r\n","interface IPoint {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n}\r\n\r\ninterface IVector {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n}\r\n\r\ninterface IOrientedPlane {\r\n    point: IPoint;\r\n    normal: IVector;\r\n}\r\n\r\ninterface ITriangle {\r\n    p1: IPoint;\r\n    p2: IPoint;\r\n    p3: IPoint;\r\n}\r\n\r\nfunction computeTriangleNormal(triangle: ITriangle): IVector {\r\n    const v12 = substraction(triangle.p2, triangle.p1);\r\n    const v13 = substraction(triangle.p3, triangle.p1);\r\n    const normal = crossProduct(v12, v13);\r\n    normalize(normal);\r\n    return normal;\r\n}\r\n\r\nfunction dotProduct(v1: IVector, v2: IVector): number {\r\n    return v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;\r\n}\r\n\r\nfunction crossProduct(v1: IVector, v2: IVector): IVector {\r\n    return {\r\n        x: v1.y * v2.z - v1.z * v2.y,\r\n        y: v1.z * v2.x - v1.x * v2.z,\r\n        z: v1.x * v2.y - v1.y * v2.x,\r\n    };\r\n}\r\n\r\nfunction substraction(v1: IPoint, v2: IPoint): IVector {\r\n    return {\r\n        x: v1.x - v2.x,\r\n        y: v1.y - v2.y,\r\n        z: v1.z - v2.z,\r\n    };\r\n}\r\n\r\nfunction normalize(v: IVector): void {\r\n    const length = Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z);\r\n    if (length > 0) {\r\n        v.x /= length;\r\n        v.y /= length;\r\n        v.z /= length;\r\n    } else {\r\n        v.x = 1;\r\n        v.y = 0;\r\n        v.z = 0;\r\n    }\r\n}\r\n\r\nfunction averagePoint(...points: IPoint[]): IPoint {\r\n    const result: IPoint = { x: 0, y: 0, z: 0 };\r\n    for (const point of points) {\r\n        result.x += point.x;\r\n        result.y += point.y;\r\n        result.z += point.z;\r\n    }\r\n    const nbPoints = points.length;\r\n    result.x /= nbPoints;\r\n    result.y /= nbPoints;\r\n    result.z /= nbPoints;\r\n    return result;\r\n}\r\n\r\nfunction isInPlane(plane: IOrientedPlane, point: IPoint): boolean {\r\n    const localCoords = substraction(point, plane.point);\r\n    return Math.abs(dotProduct(plane.normal, localCoords)) < 0.001;\r\n}\r\n\r\nfunction isInsideVolume(planes: IOrientedPlane[], point: IPoint): boolean {\r\n    for (const plane of planes) {\r\n        const localCoords = substraction(point, plane.point);\r\n        if (dotProduct(plane.normal, localCoords) > 0.001) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction rotateZ(point: IPoint, angle: number): IPoint {\r\n    const cos = Math.cos(angle);\r\n    const sin = Math.sin(angle);\r\n    return {\r\n        x: cos * point.x - sin * point.y,\r\n        y: sin * point.x + cos * point.y,\r\n        z: point.z,\r\n    };\r\n}\r\n\r\nfunction cylindric(radius: number, angle: number, z: number): IPoint {\r\n    return {\r\n        x: radius * Math.cos(angle),\r\n        y: radius * Math.sin(angle),\r\n        z,\r\n    };\r\n}\r\n\r\nfunction computeIntersection(point: IPoint, direction: IVector, plane: IOrientedPlane): IPoint {\r\n    const b = dotProduct(direction, plane.normal);\r\n    if (b !== 0) {\r\n        const a = dotProduct(substraction(plane.point, point), plane.normal);\r\n        const theta = a / b;\r\n        return {\r\n            x: point.x + theta * direction.x,\r\n            y: point.y + theta * direction.y,\r\n            z: point.z + theta * direction.z,\r\n        };\r\n    } else {\r\n        return point;\r\n    }\r\n}\r\n\r\nfunction computePlaneFromTriangle(triangle: ITriangle): IOrientedPlane {\r\n    return {\r\n        point: averagePoint(triangle.p1, triangle.p2, triangle.p3),\r\n        normal: computeTriangleNormal(triangle),\r\n    };\r\n}\r\n\r\nexport {\r\n    averagePoint,\r\n    computeIntersection,\r\n    computePlaneFromTriangle,\r\n    computeTriangleNormal,\r\n    cylindric,\r\n    isInPlane,\r\n    isInsideVolume,\r\n    rotateZ,\r\n    IOrientedPlane,\r\n    IPoint,\r\n    IVector,\r\n    ITriangle,\r\n};\r\n","import \"../page-interface-generated\";\r\n\r\nlet gl: WebGLRenderingContext = null;\r\n\r\n/** Initializes a WebGL context */\r\nfunction initGL(flags?: object): boolean {\r\n    function setError(message: string): void {\r\n        Page.Demopage.setErrorMessage(\"webgl-support\", message);\r\n    }\r\n\r\n    const canvas = Page.Canvas.getCanvas();\r\n\r\n    gl = canvas.getContext(\"webgl\", flags) as WebGLRenderingContext;\r\n    if (gl == null) {\r\n        gl = canvas.getContext(\"experimental-webgl\", flags) as WebGLRenderingContext;\r\n        if (gl == null) {\r\n            setError(\"Your browser or device does not seem to support WebGL.\");\r\n            return false;\r\n        }\r\n\r\n        setError(`Your browser or device only supports experimental WebGL.\r\nThe simulation may not run as expected.`);\r\n    }\r\n\r\n    gl.disable(gl.CULL_FACE);\r\n    gl.disable(gl.DEPTH_TEST);\r\n    gl.disable(gl.BLEND);\r\n    gl.clearColor(0, 0, 0, 1);\r\n\r\n    return true;\r\n}\r\n\r\n/* Adjusts the GL canvas size to the actual canvas element size on the page */\r\nfunction adjustSize(hidpi: boolean = false): void {\r\n    const cssPixel: number = (hidpi) ? window.devicePixelRatio : 1;\r\n\r\n    const canvas = gl.canvas as HTMLCanvasElement;\r\n\r\n    const width: number = Math.floor(canvas.clientWidth * cssPixel);\r\n    const height: number = Math.floor(canvas.clientHeight * cssPixel);\r\n    if (canvas.width !== width || canvas.height !== height) {\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n    }\r\n}\r\n\r\nexport {\r\n    adjustSize,\r\n    initGL,\r\n    gl,\r\n};\r\n","abstract class GLResource {\r\n    private _gl: WebGLRenderingContext;\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this._gl = gl;\r\n    }\r\n\r\n    public gl(): WebGLRenderingContext {\r\n        return this._gl;\r\n    }\r\n\r\n    public abstract freeGLResources(): void;\r\n}\r\n\r\nexport { GLResource };\r\n","import { gl } from \"./gl-canvas\";\r\nimport { Shader } from \"./shader\";\r\nimport * as ShaderSources from \"./shader-sources\";\r\n\r\ntype RegisterCallback = (success: boolean, shader: Shader | null) => void;\r\n\r\ninterface IShaderInfos {\r\n    fragmentFilename: string;\r\n    vertexFilename: string;\r\n    injected: { [id: string]: string };\r\n}\r\n\r\ninterface ICachedShader {\r\n    shader: Shader | null;\r\n    infos: IShaderInfos;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: RegisterCallback[];\r\n}\r\n\r\nconst cachedShaders: { [id: string]: ICachedShader } = {};\r\n\r\nfunction getShader(name: string): Shader | null {\r\n    return cachedShaders[name].shader;\r\n}\r\n\r\ntype BuildCallback = (builtShader: Shader | null) => void;\r\n\r\nfunction buildShader(infos: IShaderInfos, callback: BuildCallback): void {\r\n    let sourcesPending = 2;\r\n    let sourcesFailed = 0;\r\n\r\n    function loadedSource(success: boolean): void {\r\n        function processSource(source: string): string {\r\n            return source.replace(/#INJECT\\(([^)]*)\\)/mg, (match: string, name: string) => {\r\n                if (infos.injected[name]) {\r\n                    return infos.injected[name];\r\n                }\r\n                return match;\r\n            });\r\n        }\r\n\r\n        sourcesPending--;\r\n        if (!success) {\r\n            sourcesFailed++;\r\n        }\r\n\r\n        if (sourcesPending === 0) {\r\n            let shader = null;\r\n\r\n            if (sourcesFailed === 0) {\r\n                const vert = ShaderSources.getSource(infos.vertexFilename);\r\n                const frag = ShaderSources.getSource(infos.fragmentFilename);\r\n\r\n                const processedVert = processSource(vert);\r\n                const processedFrag = processSource(frag);\r\n                shader = new Shader(gl, processedVert, processedFrag);\r\n            }\r\n\r\n            callback(shader);\r\n        }\r\n    }\r\n\r\n    ShaderSources.loadSource(infos.vertexFilename, loadedSource);\r\n    ShaderSources.loadSource(infos.fragmentFilename, loadedSource);\r\n}\r\n\r\nfunction registerShader(name: string, infos: IShaderInfos, callback: RegisterCallback): void {\r\n    function callAndClearCallbacks(cached: ICachedShader): void {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed, cached.shader);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedShaders[name] === \"undefined\") {\r\n        cachedShaders[name] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            infos,\r\n            pending: true,\r\n            shader: null,\r\n        };\r\n        const cached = cachedShaders[name];\r\n\r\n        buildShader(infos, (builtShader: Shader | null) => {\r\n            cached.pending = false;\r\n            cached.failed = builtShader === null;\r\n            cached.shader = builtShader;\r\n\r\n            callAndClearCallbacks(cached);\r\n        });\r\n    } else {\r\n        const cached = cachedShaders[name];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction deleteShader(name: string): void {\r\n    if (typeof cachedShaders[name] !== \"undefined\") {\r\n        if (cachedShaders[name].shader !== null) {\r\n            cachedShaders[name].shader.freeGLResources();\r\n        }\r\n        delete cachedShaders[name];\r\n    }\r\n}\r\n\r\nexport {\r\n    buildShader,\r\n    getShader,\r\n    IShaderInfos,\r\n    registerShader,\r\n    deleteShader,\r\n};\r\n","type LoadCallback = (success: boolean) => void;\r\n\r\ninterface ICachedSource {\r\n    text: string;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: LoadCallback[];\r\n}\r\n\r\nconst cachedSources: { [id: string]: ICachedSource } = {};\r\n\r\n/* Fetches asynchronously the shader source from server and stores it in cache. */\r\nfunction loadSource(filename: string, callback: LoadCallback): void {\r\n    function callAndClearCallbacks(cached: ICachedSource): void {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedSources[filename] === \"undefined\") {\r\n        cachedSources[filename] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            pending: true,\r\n            text: null,\r\n        };\r\n        const cached = cachedSources[filename];\r\n\r\n        let url = \"./shaders/\" + filename;\r\n        if (typeof Page.version !== \"undefined\") {\r\n            url += `?v=${Page.version}`;\r\n        }\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", url, true);\r\n        xhr.onload = () => {\r\n            if (xhr.readyState === 4) {\r\n                cached.pending = false;\r\n\r\n                if (xhr.status === 200) {\r\n                    cached.text = xhr.responseText;\r\n                    cached.failed = false;\r\n                } else {\r\n                    console.error(`Cannot load '${filename}' shader source: ${xhr.statusText}`);\r\n                    cached.failed = true;\r\n                }\r\n\r\n                callAndClearCallbacks(cached);\r\n            }\r\n        };\r\n        xhr.onerror = () => {\r\n            console.error(`Cannot load '${filename}' shader source: ${xhr.statusText}`);\r\n            cached.pending = false;\r\n            cached.failed = true;\r\n            callAndClearCallbacks(cached);\r\n        };\r\n\r\n        xhr.send(null);\r\n    } else {\r\n        const cached = cachedSources[filename];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            cached.callbacks = [callback];\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getSource(filename: string): string {\r\n    return cachedSources[filename].text;\r\n}\r\n\r\nexport {\r\n    getSource,\r\n    loadSource,\r\n};\r\n","import { GLResource } from \"./gl-resource\";\r\nimport { VBO } from \"./vbo\";\r\n\r\nfunction notImplemented(): void {\r\n    alert(\"NOT IMPLEMENTED YET\");\r\n}\r\n\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1fv(location, value);\r\n    } else {\r\n        gl.uniform1f(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformFloat2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4fv(location, value);\r\n}\r\n\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1iv(location, value);\r\n    } else {\r\n        gl.uniform1iv(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformInt2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: boolean | number): void {\r\n    gl.uniform1i(location, +value);\r\n}\r\n\r\nfunction bindUniformBool2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformFloatMat2(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix2fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat3(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix3fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat4(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix4fv(location, false, value);\r\n}\r\n\r\nfunction bindSampler2D(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n    value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture((gl as any)[\"TEXTURE\" + unitNb] as number);\r\n    gl.bindTexture(gl.TEXTURE_2D, value);\r\n}\r\n\r\nfunction bindSamplerCube(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n    value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture((gl as any)[\"TEXTURE\" + unitNb] as number);\r\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, value);\r\n}\r\n\r\n/* From WebGL spec:\r\n* http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14 */\r\ninterface IBindingType {\r\n    str: string;\r\n    binder: (...args: any[]) => unknown;\r\n}\r\nconst types: { [index: string]: IBindingType } = {\r\n    0x8B50: { str: \"FLOAT_VEC2\", binder: bindUniformFloat2v },\r\n    0x8B51: { str: \"FLOAT_VEC3\", binder: bindUniformFloat3v },\r\n    0x8B52: { str: \"FLOAT_VEC4\", binder: bindUniformFloat4v },\r\n    0x8B53: { str: \"INT_VEC2\", binder: bindUniformInt2v },\r\n    0x8B54: { str: \"INT_VEC3\", binder: bindUniformInt3v },\r\n    0x8B55: { str: \"INT_VEC4\", binder: bindUniformInt4v },\r\n    0x8B56: { str: \"BOOL\", binder: bindUniformBool },\r\n    0x8B57: { str: \"BOOL_VEC2\", binder: bindUniformBool2v },\r\n    0x8B58: { str: \"BOOL_VEC3\", binder: bindUniformBool3v },\r\n    0x8B59: { str: \"BOOL_VEC4\", binder: bindUniformBool4v },\r\n    0x8B5A: { str: \"FLOAT_MAT2\", binder: bindUniformFloatMat2 },\r\n    0x8B5B: { str: \"FLOAT_MAT3\", binder: bindUniformFloatMat3 },\r\n    0x8B5C: { str: \"FLOAT_MAT4\", binder: bindUniformFloatMat4 },\r\n    0x8B5E: { str: \"SAMPLER_2D\", binder: bindSampler2D },\r\n    0x8B60: { str: \"SAMPLER_CUBE\", binder: bindSamplerCube },\r\n    0x1400: { str: \"BYTE\", binder: notImplemented },\r\n    0x1401: { str: \"UNSIGNED_BYTE\", binder: notImplemented },\r\n    0x1402: { str: \"SHORT\", binder: notImplemented },\r\n    0x1403: { str: \"UNSIGNED_SHORT\", binder: notImplemented },\r\n    0x1404: { str: \"INT\", binder: bindUniformInt },\r\n    0x1405: { str: \"UNSIGNED_INT\", binder: notImplemented },\r\n    0x1406: { str: \"FLOAT\", binder: bindUniformFloat },\r\n};\r\n\r\ninterface IShaderUniform {\r\n    value: boolean | boolean[] | number | number[] | WebGLTexture | WebGLTexture[];\r\n    loc: WebGLUniformLocation;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\ninterface IShaderAttribute {\r\n    VBO: VBO;\r\n    loc: GLint;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\nclass ShaderProgram extends GLResource {\r\n    public u: { [name: string]: IShaderUniform };\r\n    public a: { [name: string]: IShaderAttribute };\r\n\r\n    private id: WebGLProgram;\r\n    private uCount: number;\r\n    private aCount: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string) {\r\n        function createShader(type: GLenum, source: string): WebGLShader {\r\n            const shader = gl.createShader(type);\r\n            gl.shaderSource(shader, source);\r\n            gl.compileShader(shader);\r\n\r\n            const compileSuccess = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n            if (!compileSuccess) {\r\n                console.error(gl.getShaderInfoLog(shader));\r\n                console.log(source);\r\n                gl.deleteShader(shader);\r\n                return null;\r\n            }\r\n\r\n            return shader;\r\n        }\r\n\r\n        super(gl);\r\n\r\n        this.id = null;\r\n        this.uCount = 0;\r\n        this.aCount = 0;\r\n\r\n        const vertexShader = createShader(gl.VERTEX_SHADER, vertexSource);\r\n        const fragmentShader = createShader(gl.FRAGMENT_SHADER, fragmentSource);\r\n\r\n        const id = gl.createProgram();\r\n        gl.attachShader(id, vertexShader);\r\n        gl.attachShader(id, fragmentShader);\r\n        gl.linkProgram(id);\r\n\r\n        const linkSuccess = gl.getProgramParameter(id, gl.LINK_STATUS);\r\n        if (!linkSuccess) {\r\n            console.error(gl.getProgramInfoLog(id));\r\n            gl.deleteProgram(id);\r\n        } else {\r\n            this.id = id;\r\n\r\n            this.introspection();\r\n        }\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        super.gl().deleteProgram(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public use(): void {\r\n        super.gl().useProgram(this.id);\r\n    }\r\n\r\n    public bindUniforms(): void {\r\n        const gl: WebGLRenderingContext = super.gl();\r\n        let currTextureUnitNb: number = 0;\r\n\r\n        Object.keys(this.u).forEach((uName: string) => {\r\n            const uniform = this.u[uName];\r\n            if (uniform.value !== null) {\r\n                if (uniform.type === 0x8B5E || uniform.type === 0x8B60) {\r\n                    const unitNb: number = currTextureUnitNb;\r\n                    types[uniform.type].binder(gl, uniform.loc, unitNb, uniform.value);\r\n                    currTextureUnitNb++;\r\n                } else {\r\n                    types[uniform.type].binder(gl, uniform.loc, uniform.value);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindAttributes(): void {\r\n        Object.keys(this.a).forEach((aName: string) => {\r\n            const attribute = this.a[aName];\r\n            if (attribute.VBO !== null) {\r\n                attribute.VBO.bind(attribute.loc);\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindUniformsAndAttributes(): void {\r\n        this.bindUniforms();\r\n        this.bindAttributes();\r\n    }\r\n\r\n    private introspection(): void {\r\n        const gl = super.gl();\r\n\r\n        this.uCount = gl.getProgramParameter(this.id, gl.ACTIVE_UNIFORMS);\r\n        this.u = {};\r\n        for (let i = 0; i < this.uCount; i++) {\r\n            const uniform = gl.getActiveUniform(this.id, i);\r\n            const name = uniform.name;\r\n\r\n            this.u[name] = {\r\n                loc: gl.getUniformLocation(this.id, name),\r\n                size: uniform.size,\r\n                type: uniform.type,\r\n                value: null,\r\n            };\r\n        }\r\n\r\n        this.aCount = gl.getProgramParameter(this.id, gl.ACTIVE_ATTRIBUTES);\r\n        this.a = {};\r\n        for (let i = 0; i < this.aCount; i++) {\r\n            const attribute = gl.getActiveAttrib(this.id, i);\r\n            const name = attribute.name;\r\n\r\n            this.a[name] = {\r\n                VBO: null,\r\n                loc: gl.getAttribLocation(this.id, name),\r\n                size: attribute.size,\r\n                type: attribute.type,\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport { ShaderProgram as Shader };\r\n","import { GLResource } from \"./gl-resource\";\r\n\r\nenum Usage {\r\n    DYNAMIC,\r\n    STATIC,\r\n}\r\n\r\nclass VBO extends GLResource {\r\n    public static createQuad(gl: WebGLRenderingContext, minX: number, minY: number, maxX: number, maxY: number): VBO {\r\n        const vert = [\r\n            minX, minY,\r\n            maxX, minY,\r\n            minX, maxY,\r\n            maxX, maxY,\r\n        ];\r\n\r\n        return new VBO(gl, new Float32Array(vert), 2, gl.FLOAT, true);\r\n    }\r\n\r\n    private id: WebGLBuffer;\r\n    private size: number;\r\n    private type: GLenum;\r\n    private normalize: GLboolean;\r\n    private stride: GLsizei;\r\n    private offset: GLintptr;\r\n    private usage: Usage;\r\n\r\n    constructor(gl: WebGLRenderingContext, array: any, size: number, type: GLenum, staticUsage: boolean = true) {\r\n        super(gl);\r\n\r\n        this.id = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (staticUsage) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n        this.size = size;\r\n        this.type = type;\r\n        this.normalize = false;\r\n        this.stride = 0;\r\n        this.offset = 0;\r\n        this.usage = (staticUsage) ? Usage.STATIC : Usage.DYNAMIC;\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        this.gl().deleteBuffer(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public bind(location: GLuint): void {\r\n        const gl = super.gl();\r\n        gl.enableVertexAttribArray(location);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        gl.vertexAttribPointer(location, this.size, this.type, this.normalize, this.stride, this.offset);\r\n    }\r\n\r\n    public setData(array: any): void {\r\n        const gl = super.gl();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (this.usage === Usage.STATIC) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    }\r\n}\r\n\r\nexport { VBO };\r\n","class Viewport {\r\n    public static setFullCanvas(gl: WebGLRenderingContext): void {\r\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n    }\r\n\r\n    public lower: number;\r\n    public left: number;\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(left: number, lower: number, width: number, height: number) {\r\n        this.left = left;\r\n        this.lower = lower;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    public set(gl: WebGLRenderingContext): void {\r\n        gl.viewport(this.lower, this.left, this.width, this.height);\r\n    }\r\n}\r\n\r\nexport { Viewport };\r\n","import { Shader } from \"./gl-utils/shader\";\r\nimport * as ShaderManager from \"./gl-utils/shader-manager\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\n\r\nenum ELoadingState {\r\n    NOT_LOADED,\r\n    LOADING,\r\n    LOADED,\r\n}\r\n\r\nlet shaderIndex = 0;\r\n\r\nclass LazyShader {\r\n    private readonly fragmentShaderName: string;\r\n    private readonly vertexShaderName: string;\r\n\r\n    private readonly errorKey: string;\r\n    private readonly errorMessage: string;\r\n\r\n    private _shader: Shader;\r\n    private loadingState: ELoadingState;\r\n\r\n    private injected: { [key: string]: string };\r\n\r\n    public constructor(fragmentShaderName: string, vertexShaderName: string, name: string) {\r\n        this.fragmentShaderName = fragmentShaderName;\r\n        this.vertexShaderName = vertexShaderName;\r\n        this.errorKey = `shader_fail_${shaderIndex++}`;\r\n        this.errorMessage = `Failed to load or build the shader '${name}'.`;\r\n\r\n        this.loadingState = ELoadingState.NOT_LOADED;\r\n        this.injected = {};\r\n    }\r\n\r\n    public get shader(): Shader | null {\r\n        if (this.loadingState === ELoadingState.NOT_LOADED) {\r\n            this.requestLoading();\r\n        }\r\n\r\n        if (this._shader) {\r\n            return this._shader;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public reset(newInjected: { [key: string]: string }): void {\r\n        this.loadingState = ELoadingState.NOT_LOADED;\r\n\r\n        this.injected = newInjected;\r\n\r\n        if (this._shader) {\r\n            this._shader.freeGLResources();\r\n            this._shader = null;\r\n        }\r\n    }\r\n\r\n    private requestLoading(): void {\r\n        this.loadingState = ELoadingState.LOADING;\r\n\r\n        ShaderManager.buildShader({\r\n            fragmentFilename: this.fragmentShaderName,\r\n            vertexFilename: this.vertexShaderName,\r\n            injected: this.injected,\r\n        }, (builtShader: Shader | null) => {\r\n            this.loadingState = ELoadingState.LOADED;\r\n\r\n            if (builtShader !== null) {\r\n                this._shader = builtShader;\r\n            } else {\r\n                Page.Demopage.setErrorMessage(this.errorKey, this.errorMessage);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    LazyShader,\r\n};\r\n","import * as GLCanvas from \"./gl-utils/gl-canvas\";\r\nimport { gl } from \"./gl-utils/gl-canvas\";\r\nimport { Viewport } from \"./gl-utils/viewport\";\r\n\r\nimport { Drawer } from \"./drawer\";\r\nimport * as FPSIndicator from \"./fps-indicator\";\r\nimport { Gemstone } from \"./gemstone\";\r\nimport { Parameters } from \"./parameters\";\r\nimport { registerPolyfills } from \"./utils\";\r\nimport { PostProcessing } from \"./post-processing\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\n\r\nfunction main(): void {\r\n    registerPolyfills();\r\n\r\n    const webglFlags = {\r\n        alpha: false,\r\n        antialias: false,\r\n        depth: false,\r\n        stencil: false,\r\n        preserveDrawingBuffer: false,\r\n    };\r\n    if (!GLCanvas.initGL(webglFlags)) {\r\n        return;\r\n    }\r\n\r\n    let needToAdjustCanvasSize = true;\r\n    Parameters.addCanvasResizeObservers(() => { needToAdjustCanvasSize = true; });\r\n\r\n    const drawer = new Drawer(gl);\r\n    const postProcessing = new PostProcessing(gl);\r\n\r\n    function loadGemstone(): void {\r\n        Gemstone.loadGemstone(Parameters.cut, (loadedGemstone: Gemstone) => {\r\n            drawer.setGemstone(loadedGemstone);\r\n        });\r\n    }\r\n    Parameters.addCutChangeObserver(loadGemstone);\r\n    loadGemstone();\r\n\r\n    let lastLoopUpdate = 0;\r\n    function mainLoop(): void {\r\n        const now = performance.now();\r\n        const dt = performance.now() - lastLoopUpdate;\r\n        lastLoopUpdate = now;\r\n\r\n        FPSIndicator.registerFrame();\r\n\r\n        if (needToAdjustCanvasSize) {\r\n            GLCanvas.adjustSize(Parameters.highDPI);\r\n            Viewport.setFullCanvas(gl);\r\n            needToAdjustCanvasSize = false;\r\n        }\r\n\r\n        if (Parameters.autoRotate && !Page.Canvas.isMouseDown()) {\r\n            drawer.rotate(dt * 0.0001);\r\n        }\r\n\r\n        if (Parameters.displayRaytracedVolume) {\r\n            drawer.drawDebugVolume();\r\n        } else {\r\n            if (Parameters.postProcessing && postProcessing.isReady()) {\r\n                postProcessing.prepare();\r\n                drawer.draw();\r\n                postProcessing.apply();\r\n            } else {\r\n                drawer.draw();\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(mainLoop);\r\n    }\r\n    mainLoop();\r\n}\r\n\r\nmain();\r\n","declare const mat4: any;\r\n\r\nclass OrbitalCamera {\r\n    private _focus: number[];\r\n    private _distance: number;\r\n    private _theta: number;\r\n    private _phi: number;\r\n\r\n    private _eyePos: number[];\r\n    private _viewMatrix: number[];\r\n\r\n    constructor(focusPoint: number[], distance: number) {\r\n        this._focus = focusPoint;\r\n        this._distance = distance;\r\n        this._theta = 0;\r\n        this._phi = 0.01;\r\n\r\n        this._eyePos = [0, 0, 0];\r\n        this._viewMatrix = mat4.create();\r\n        this.recompute();\r\n    }\r\n\r\n    public get focusPoint(): number[] {\r\n        return this._focus;\r\n    }\r\n    public set focusPoint(newFocus: number[]) {\r\n        this._focus = newFocus;\r\n        this.recompute();\r\n    }\r\n\r\n    public get distance(): number {\r\n        return this._distance;\r\n    }\r\n    public set distance(newDistance: number) {\r\n        this._distance = newDistance;\r\n        this.recompute();\r\n    }\r\n\r\n    public get theta(): number {\r\n        return this._theta;\r\n    }\r\n    public set theta(newTheta: number) {\r\n        this._theta = newTheta;\r\n        this.recompute();\r\n    }\r\n\r\n    public get phi(): number {\r\n        return this._phi;\r\n    }\r\n    public set phi(newPhi: number) {\r\n        this._phi = newPhi;\r\n        this.recompute();\r\n    }\r\n\r\n    public get eyePos(): number[] {\r\n        return this._eyePos;\r\n    }\r\n\r\n    public get viewMatrix(): number[] {\r\n        return this._viewMatrix;\r\n    }\r\n\r\n    private recompute(): void {\r\n        const sin = Math.sin;\r\n        const cos = Math.cos;\r\n\r\n        this._eyePos[0] = this.focusPoint[0] + this.distance * (sin(this.phi) * cos(this.theta));\r\n        this._eyePos[1] = this.focusPoint[1] + this.distance * (sin(this.phi) * sin(this.theta));\r\n        this._eyePos[2] = this.focusPoint[2] + this.distance * (cos(this.phi));\r\n\r\n        this._viewMatrix = mat4.lookAt(this._viewMatrix, this.eyePos, this.focusPoint, [0, 0, 1]);\r\n    }\r\n}\r\n\r\nexport { OrbitalCamera };\r\n","import \"./page-interface-generated\";\r\n\r\n\r\n/* === IDs ============================================================ */\r\nconst controlId = {\r\n    CUT_PICKER_ID: \"gem-cut-picker-id\",\r\n    REFRACTION_RANGE_ID: \"refraction-range-id\",\r\n    GEM_COLOR_PICKER: \"gem-color-picker-id\",\r\n    GEM_ABSOPTION_RANGE_ID: \"absorption-range-id\",\r\n    DISPERSION_RANGE_ID: \"dispersion-range-id\",\r\n    RAY_DEPTH_RANGE_ID: \"ray-depth-range-id\",\r\n    REFLECTION: \"reflection-checkbox-id\",\r\n\r\n    DISPLAY_SKYBOX_CHECKBOX_ID: \"display-skybox-checkbox-id\",\r\n    BACKGROUND_COLOR_PICKER: \"background-color-picker-id\",\r\n    PROJECTION_TABS_ID: \"projection-tabs-id\",\r\n    GEOMETRY_ONLY_CHECKBOX_ID: \"only-normals-checkbox-id\",\r\n    AUTO_ROTATE_CHECKBOX_ID: \"auto-rotate-checkbox-id\",\r\n    POST_PROCESSING_CHECKBOX_ID: \"post-processing-checkbox-id\",\r\n    HIGH_DPI_CHEKBOX_ID: \"high-dpi-checkbox-id\",\r\n\r\n    LIGHT_TYPE_TABS_ID: \"light-type-tabs-id\",\r\n    LIGHT_DIRECTION_TABS_ID: \"light-direction-tabs-id\",\r\n\r\n    DISPLAY_INDICATORS: \"display-indicators-checkbox-id\",\r\n    RAYTRACED_VOLUME: \"raytraced-volume-checkbox-id\",\r\n    DISPLAY_NORMALS: \"display-normals-checkbox-id\",\r\n    VERBOSE: \"verbose-checkbox-id\",\r\n\r\n    CUSTOM_CUT_CROWN_HEIGHT: \"custom-cut-crown-height-range-id\",\r\n    CUSTOM_CUT_CROWN_TABLE: \"custom-cut-crown-table-range-id\",\r\n    CUSTOM_CUT_CROWN_RATIO: \"custom-cut-crown-ratio-range-id\",\r\n    CUSTOM_CUT_GIRDLE_THICKNESS: \"custom-cut-girdle-thickness-range-id\",\r\n    CUSTOM_CUT_GIRDLE_ROUNDNESS: \"custom-cut-girdle-roundness-range-id\",\r\n    CUSTOM_CUT_PAVILLION_HEIGHT: \"custom-cut-pavillion-height-range-id\",\r\n    CUSTOM_CUT_PAVILLION_RATIO: \"custom-cut-pavillion-ratio-range-id\",\r\n};\r\n\r\nenum ELightType {\r\n    WHITE = \"white\",\r\n    ASET = \"aset\",\r\n}\r\n\r\nenum ELightDirection {\r\n    DOWNWARD = \"downward\",\r\n    UPWARD = \"upward\",\r\n}\r\n\r\nenum EProjection {\r\n    PERSPECTIVE = \"perspective\",\r\n    ORTHOGRAPHIC = \"orthographic\",\r\n}\r\n\r\ninterface IRGB {\r\n    r: number;\r\n    g: number;\r\n    b: number;\r\n}\r\n\r\ntype Observer = () => unknown;\r\n\r\nfunction callObservers(observers: Observer[]): void {\r\n    for (const observer of observers) {\r\n        observer();\r\n    }\r\n}\r\n\r\nconst cutChangeObservers: Observer[] = [];\r\nconst callCutChangeObservers = () => { callObservers(cutChangeObservers); };\r\nPage.Picker.addObserver(controlId.CUT_PICKER_ID, callCutChangeObservers);\r\nPage.Range.addLazyObserver(controlId.CUSTOM_CUT_CROWN_HEIGHT, callCutChangeObservers);\r\nPage.Range.addLazyObserver(controlId.CUSTOM_CUT_CROWN_TABLE, callCutChangeObservers);\r\nPage.Range.addLazyObserver(controlId.CUSTOM_CUT_CROWN_RATIO, callCutChangeObservers);\r\nPage.Range.addLazyObserver(controlId.CUSTOM_CUT_GIRDLE_THICKNESS, callCutChangeObservers);\r\nPage.Range.addLazyObserver(controlId.CUSTOM_CUT_GIRDLE_ROUNDNESS, callCutChangeObservers);\r\nPage.Range.addLazyObserver(controlId.CUSTOM_CUT_PAVILLION_HEIGHT, callCutChangeObservers);\r\nPage.Range.addLazyObserver(controlId.CUSTOM_CUT_PAVILLION_RATIO, callCutChangeObservers);\r\n\r\nconst recomputeShaderObservers: Observer[] = [];\r\nconst callRecomputeShaderObservers = () => { callObservers(recomputeShaderObservers); };\r\nPage.Range.addLazyObserver(controlId.RAY_DEPTH_RANGE_ID, callRecomputeShaderObservers);\r\n\r\nconst canvasResizeObservers: Observer[] = [];\r\nconst callCanvasResizeObservers = () => { callObservers(canvasResizeObservers); };\r\nPage.Canvas.Observers.canvasResize.push(callCanvasResizeObservers);\r\nPage.Checkbox.addObserver(controlId.HIGH_DPI_CHEKBOX_ID, callCanvasResizeObservers);\r\n\r\nconst cameraChangeObservers: Observer[] = [];\r\nconst callCameraChangeObservers = () => { callObservers(cameraChangeObservers); };\r\nPage.Tabs.addObserver(controlId.PROJECTION_TABS_ID, callCameraChangeObservers);\r\n\r\nconst backgroundColorChangeObservers: Observer[] = [];\r\nconst backgroundColor: IRGB = { r: 0, g: 0, b: 0 };\r\nfunction updateBackgroundColor(): void {\r\n    const rgb = Page.ColorPicker.getValue(controlId.BACKGROUND_COLOR_PICKER);\r\n    backgroundColor.r = rgb.r;\r\n    backgroundColor.g = rgb.g;\r\n    backgroundColor.b = rgb.b;\r\n\r\n    callObservers(backgroundColorChangeObservers);\r\n}\r\nPage.ColorPicker.addObserver(controlId.BACKGROUND_COLOR_PICKER, updateBackgroundColor);\r\nupdateBackgroundColor();\r\n\r\nconst gemColor: IRGB = { r: 0, g: 0, b: 0 };\r\nfunction updateGemColor(): void {\r\n    const rgb = Page.ColorPicker.getValue(controlId.GEM_COLOR_PICKER);\r\n    gemColor.r = rgb.r;\r\n    gemColor.g = rgb.g;\r\n    gemColor.b = rgb.b;\r\n}\r\nPage.ColorPicker.addObserver(controlId.GEM_COLOR_PICKER, updateGemColor);\r\nupdateGemColor();\r\n\r\nabstract class Parameters {\r\n    public static get cut(): string {\r\n        return Page.Picker.getValue(controlId.CUT_PICKER_ID);\r\n    }\r\n\r\n    public static get refractionIndex(): number {\r\n        return Page.Range.getValue(controlId.REFRACTION_RANGE_ID);\r\n    }\r\n\r\n    public static get displaySkybox(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.DISPLAY_SKYBOX_CHECKBOX_ID);\r\n    }\r\n\r\n    public static get backgroundColor(): IRGB {\r\n        return backgroundColor;\r\n    }\r\n\r\n    public static get gemColor(): IRGB {\r\n        return gemColor;\r\n    }\r\n\r\n    public static get absorption(): number {\r\n        return Page.Range.getValue(controlId.GEM_ABSOPTION_RANGE_ID);\r\n    }\r\n\r\n    public static get dispersion(): number {\r\n        return Page.Range.getValue(controlId.DISPERSION_RANGE_ID);\r\n    }\r\n\r\n    public static get rayDepth(): number {\r\n        return Math.ceil(Page.Range.getValue(controlId.RAY_DEPTH_RANGE_ID));\r\n    }\r\n\r\n    public static get displayReflection(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.REFLECTION);\r\n    }\r\n\r\n    public static get displayRaytracedVolume(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.RAYTRACED_VOLUME);\r\n    }\r\n\r\n    public static get displayNormals(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.DISPLAY_NORMALS);\r\n    }\r\n\r\n    public static get verbose(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.VERBOSE);\r\n    }\r\n\r\n    public static get projection(): EProjection {\r\n        return Page.Tabs.getValues(controlId.PROJECTION_TABS_ID)[0] as EProjection;\r\n    }\r\n\r\n    public static get geometryOnly(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.GEOMETRY_ONLY_CHECKBOX_ID);\r\n    }\r\n\r\n    public static get autoRotate(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.AUTO_ROTATE_CHECKBOX_ID);\r\n    }\r\n\r\n    public static get postProcessing(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.POST_PROCESSING_CHECKBOX_ID);\r\n    }\r\n\r\n    public static get highDPI(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.HIGH_DPI_CHEKBOX_ID);\r\n    }\r\n\r\n    public static get lightType(): ELightType {\r\n        return Page.Tabs.getValues(controlId.LIGHT_TYPE_TABS_ID)[0] as ELightType;\r\n    }\r\n    public static get lightDirection(): ELightDirection {\r\n        return Page.Tabs.getValues(controlId.LIGHT_DIRECTION_TABS_ID)[0] as ELightDirection;\r\n    }\r\n\r\n    public static get customCutCrownHeight(): number {\r\n        return Page.Range.getValue(controlId.CUSTOM_CUT_CROWN_HEIGHT);\r\n    }\r\n    public static get customCutCrownTable(): number {\r\n        return Page.Range.getValue(controlId.CUSTOM_CUT_CROWN_TABLE);\r\n    }\r\n    public static get customCutCrownRatio(): number {\r\n        return Page.Range.getValue(controlId.CUSTOM_CUT_CROWN_RATIO);\r\n    }\r\n    public static get customCutGirdleThickness(): number {\r\n        return Page.Range.getValue(controlId.CUSTOM_CUT_GIRDLE_THICKNESS);\r\n    }\r\n    public static get customCutGirdleRoundess(): number {\r\n        return Page.Range.getValue(controlId.CUSTOM_CUT_GIRDLE_ROUNDNESS);\r\n    }\r\n    public static get customCutPavillionHeight(): number {\r\n        return Page.Range.getValue(controlId.CUSTOM_CUT_PAVILLION_HEIGHT);\r\n    }\r\n    public static get customCutPavillionRati(): number {\r\n        return Page.Range.getValue(controlId.CUSTOM_CUT_PAVILLION_RATIO);\r\n    }\r\n\r\n    public static addCutChangeObserver(observer: Observer): void {\r\n        cutChangeObservers.push(observer);\r\n    }\r\n\r\n    public static addBackgroundColorObserver(observer: Observer): void {\r\n        backgroundColorChangeObservers.push(observer);\r\n    }\r\n\r\n    public static addRecomputeShaderObservers(observer: Observer): void {\r\n        recomputeShaderObservers.push(observer);\r\n    }\r\n\r\n    public static addCanvasResizeObservers(observer: Observer): void {\r\n        canvasResizeObservers.push(observer);\r\n    }\r\n\r\n    public static addCameraChangeObservers(observer: Observer): void {\r\n        cameraChangeObservers.push(observer);\r\n    }\r\n}\r\n\r\nfunction updateCustomCutSection(): void {\r\n    Page.Sections.setVisibility(\"custom-cut-section\", Parameters.cut === \"CUSTOM CUT\");\r\n}\r\nParameters.addCutChangeObserver(updateCustomCutSection);\r\nupdateCustomCutSection();\r\n\r\nPage.Controls.setVisibility(controlId.HIGH_DPI_CHEKBOX_ID, window.devicePixelRatio > 1);\r\n\r\nfunction updateIndicatorsVisibility(): void {\r\n    const visible = Page.Checkbox.isChecked(controlId.DISPLAY_INDICATORS);\r\n    Page.Canvas.setIndicatorsVisibility(visible);\r\n}\r\nPage.Checkbox.addObserver(controlId.DISPLAY_INDICATORS, updateIndicatorsVisibility);\r\nupdateIndicatorsVisibility();\r\n\r\nfunction updateBackgroundVisibility(): void {\r\n    Page.Controls.setVisibility(controlId.BACKGROUND_COLOR_PICKER, !Parameters.displaySkybox);\r\n}\r\nPage.Checkbox.addObserver(controlId.DISPLAY_SKYBOX_CHECKBOX_ID, updateBackgroundVisibility);\r\nupdateBackgroundVisibility();\r\n\r\n{\r\n    let isInDebug = false;\r\n    if (typeof URLSearchParams !== \"undefined\") {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        isInDebug = urlParams.get('debug') === \"1\";\r\n    }\r\n    Page.Sections.setVisibility(\"debug-section-id\", isInDebug);\r\n}\r\n\r\nexport {\r\n    ELightDirection,\r\n    ELightType,\r\n    EProjection,\r\n    Parameters,\r\n};\r\n","import { VBO } from \"./gl-utils/vbo\";\r\nimport { LazyShader } from \"./lazy-shader\";\r\nimport { Parameters } from \"./parameters\";\r\n\r\n\r\ninterface ITexture {\r\n    texture: WebGLTexture;\r\n    framebuffer: WebGLFramebuffer;\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nconst SQUARE = new Float32Array([\r\n    -1, -1,\r\n    +1, -1,\r\n    -1, +1,\r\n    +1, +1,\r\n]);\r\n\r\nclass PostProcessing {\r\n    private readonly gl: WebGLRenderingContext;\r\n    private readonly squareVBO: VBO;\r\n\r\n    private readonly downsizingShader: LazyShader;\r\n    private readonly downsizedTexture: ITexture;\r\n\r\n    private readonly blurShader: LazyShader;\r\n    private readonly downsizedBlurredTexture: ITexture;\r\n\r\n    private readonly compositingShader: LazyShader;\r\n    private readonly fullSizeTexture: ITexture;\r\n\r\n    public constructor(gl: WebGLRenderingContext) {\r\n        this.gl = gl;\r\n\r\n        this.squareVBO = new VBO(gl, SQUARE, 2, gl.FLOAT, true);\r\n\r\n        this.downsizingShader = new LazyShader(\"post-processing/downsizing.frag\", \"post-processing/fullscreen.vert\", \"post-processing downsizing\");\r\n        this.blurShader = new LazyShader(\"post-processing/blur.frag\", \"post-processing/fullscreen.vert\", \"post-processing blur\");\r\n        this.blurShader.reset({\r\n            BLUR_INSTRUCTIONS: PostProcessing.buildGlowInstructions1D(3), // || PostProcessing.buildGlowInstructions2D(10),\r\n        });\r\n        this.compositingShader = new LazyShader(\"post-processing/compositing.frag\", \"post-processing/fullscreen.vert\", \"post-processing downsizing\");\r\n\r\n        this.fullSizeTexture = this.createTexture();\r\n        this.downsizedTexture = this.createTexture();\r\n        this.downsizedBlurredTexture = this.createTexture();\r\n    }\r\n\r\n    public isReady(): boolean {\r\n        // avoid lazy evaluation to force shader loading asap\r\n        const downsizingIsReady = !!this.downsizingShader.shader;\r\n        const blurIsReady = !!this.blurShader.shader;\r\n        const compositingIsReady = !!this.compositingShader.shader;\r\n        return downsizingIsReady && blurIsReady && compositingIsReady;\r\n    }\r\n\r\n    public prepare(): void {\r\n        const dpiScaling = Parameters.highDPI ? window.devicePixelRatio : 1;\r\n        const smallerTextureScaling = 1 / (8 * dpiScaling);\r\n\r\n        this.initializeTexture(this.fullSizeTexture, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\r\n        this.initializeTexture(this.downsizedTexture, smallerTextureScaling * this.fullSizeTexture.width, smallerTextureScaling * this.fullSizeTexture.height);\r\n        this.initializeTexture(this.downsizedBlurredTexture, this.downsizedTexture.width, this.downsizedTexture.height);\r\n\r\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.fullSizeTexture.framebuffer);\r\n        this.gl.viewport(0, 0, this.fullSizeTexture.width, this.fullSizeTexture.height);\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\r\n    }\r\n\r\n    public apply(): void {\r\n        const downsizingShader = this.downsizingShader.shader;\r\n        const blurShader = this.blurShader.shader;\r\n        const compositingShader = this.compositingShader.shader;\r\n        if (downsizingShader && blurShader && compositingShader) {\r\n            // downsize\r\n            {\r\n                downsizingShader.a[\"aCorner\"].VBO = this.squareVBO;\r\n                downsizingShader.u[\"uTexture\"].value = this.fullSizeTexture.texture;\r\n\r\n                downsizingShader.use();\r\n                downsizingShader.bindUniformsAndAttributes();\r\n\r\n                this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.downsizedTexture.framebuffer);\r\n                this.gl.viewport(0, 0, this.downsizedTexture.width, this.downsizedTexture.height);\r\n                this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\r\n            }\r\n\r\n            // blur\r\n            {\r\n                blurShader.a[\"aCorner\"].VBO = this.squareVBO;\r\n                blurShader.u[\"uTexture\"].value = this.downsizedTexture.texture;\r\n                blurShader.u[\"uTexelSize\"].value = [1 / this.downsizedTexture.width, 1 / this.downsizedTexture.height];\r\n\r\n                blurShader.use();\r\n                blurShader.bindUniformsAndAttributes();\r\n\r\n                this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.downsizedBlurredTexture.framebuffer);\r\n                this.gl.viewport(0, 0, this.downsizedBlurredTexture.width, this.downsizedBlurredTexture.height);\r\n                this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\r\n            }\r\n\r\n            // compositing\r\n            {\r\n                compositingShader.a[\"aCorner\"].VBO = this.squareVBO;\r\n                compositingShader.u[\"uFullsizeTexture\"].value = this.fullSizeTexture.texture;\r\n                compositingShader.u[\"uFullsizeTextureTexelSize\"].value = [1 / this.fullSizeTexture.width, 1 / this.fullSizeTexture.height];\r\n                compositingShader.u[\"uBlurredTexture\"].value = this.downsizedBlurredTexture.texture;\r\n\r\n                compositingShader.use();\r\n                compositingShader.bindUniformsAndAttributes();\r\n\r\n                this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\r\n                this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\r\n                this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\r\n                this.gl.bindTexture(this.gl.TEXTURE_2D, null);\r\n            }\r\n        }\r\n    }\r\n\r\n    private initializeTexture(texture: ITexture, wantedWidth: number, wantedHeight: number): void {\r\n        wantedWidth = Math.ceil(wantedWidth);\r\n        wantedHeight = Math.ceil(wantedHeight);\r\n\r\n        if (texture.width !== wantedWidth || texture.height !== wantedHeight) {\r\n            this.gl.bindTexture(this.gl.TEXTURE_2D, texture.texture);\r\n\r\n            const format = this.gl.RGBA;\r\n            this.gl.texImage2D(this.gl.TEXTURE_2D, 0, format, wantedWidth, wantedHeight, 0, format, this.gl.UNSIGNED_BYTE, null);\r\n            this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\r\n            this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\r\n            this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\r\n\r\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, texture.framebuffer);\r\n            this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, texture.texture, 0);\r\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\r\n\r\n            this.gl.bindTexture(this.gl.TEXTURE_2D, null);\r\n\r\n            texture.width = wantedWidth;\r\n            texture.height = wantedHeight;\r\n        }\r\n    }\r\n\r\n    private createTexture(): ITexture {\r\n        return {\r\n            texture: this.gl.createTexture(),\r\n            framebuffer: this.gl.createFramebuffer(),\r\n            width: -1,\r\n            height: -1,\r\n        };\r\n    }\r\n\r\n    // private static buildGlowInstructions2D(radius: number): string {\r\n    //     const sigma = 2;\r\n    //     function factor(x: number, y: number): number {\r\n    //         return Math.exp(-(x * x + y * y) / (2 * sigma * sigma)) / (2 * Math.PI * sigma * sigma);\r\n    //     }\r\n\r\n    //     let total = factor(0, 0);\r\n    //     for (let iY = -radius; iY <= radius; iY++) {\r\n    //         for (let iX = -radius; iX <= radius; iX++) {\r\n    //             if (iX !== 0 || iY !== 0) {\r\n    //                 total += factor(iX, iY);\r\n    //             }\r\n    //         }\r\n    //     }\r\n\r\n    //     const instructions: string[] = [];\r\n    //     instructions.push(`glow += ${factor(0, 0) / total} * contribution(vSamplingPosition);`);\r\n    //     for (let iY = -radius; iY <= radius; iY++) {\r\n    //         for (let iX = -radius; iX <= radius; iX++) {\r\n    //             if (iX !== 0 || iY !== 0) {\r\n    //                 instructions.push(`glow += ${factor(iX, iY) / total} * contribution(vSamplingPosition + vec2(${iX}, ${iY}) * uTexelSize);`);\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     return instructions.join(\"\\n\\t\");\r\n    // }\r\n\r\n    private static buildGlowInstructions1D(radius: number): string {\r\n        const sigma = 8;\r\n        function factor(x: number): number {\r\n            return Math.exp(-(x * x) / (2 * sigma * sigma)) / Math.sqrt(2 * Math.PI * sigma * sigma);\r\n        }\r\n\r\n        let total = 0;\r\n        for (let i = -radius - 0.5; i <= radius; i++) {\r\n            total += factor(i);\r\n        }\r\n\r\n        const instructions: string[] = [];\r\n        for (let i = -radius - 0.5; i <= radius + 0.5; i++) {\r\n            instructions.push(`blurred += ${factor(i) / total} * contribution(vec2(${i}, ${i}));`);\r\n            instructions.push(`blurred += ${factor(i) / total} * contribution(vec2(${i}, ${-i}));`);\r\n        }\r\n        instructions.push(`blurred *= 0.5;`); // normalize\r\n        instructions.push(`blurred *= 0.5;`);\r\n        return instructions.join(\"\\n\\t\");\r\n    }\r\n}\r\n\r\nexport { PostProcessing };\r\n","function traceRegistration(name: string): void {\r\n    console.log(`Registering polyfill for '${name}'.`);\r\n}\r\n\r\nfunction registerStringStartsWithPolyfill(): void {\r\n    if (typeof String.prototype.startsWith !== \"function\") {\r\n        traceRegistration(\"String.startsWith\");\r\n        String.prototype.startsWith = function (tested: string): boolean {\r\n            return this.indexOf(tested) === 0;\r\n        };\r\n    }\r\n}\r\n\r\nfunction registerPolyfills(): void {\r\n    registerStringStartsWithPolyfill();\r\n}\r\n\r\nexport {\r\n    registerPolyfills,\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/ts/main.ts\");\n"],"sourceRoot":""}