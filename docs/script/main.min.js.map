{"version":3,"sources":["webpack://diamond-webgl/./src/ts/drawer.ts","webpack://diamond-webgl/./src/ts/fps-indicator.ts","webpack://diamond-webgl/./src/ts/gemstone.ts","webpack://diamond-webgl/./src/ts/geometry.ts","webpack://diamond-webgl/./src/ts/gl-utils/gl-canvas.ts","webpack://diamond-webgl/./src/ts/gl-utils/gl-resource.ts","webpack://diamond-webgl/./src/ts/gl-utils/shader-manager.ts","webpack://diamond-webgl/./src/ts/gl-utils/shader-sources.ts","webpack://diamond-webgl/./src/ts/gl-utils/shader.ts","webpack://diamond-webgl/./src/ts/gl-utils/vbo.ts","webpack://diamond-webgl/./src/ts/gl-utils/viewport.ts","webpack://diamond-webgl/./src/ts/lazy-shader.ts","webpack://diamond-webgl/./src/ts/main.ts","webpack://diamond-webgl/./src/ts/orbital-camera.ts","webpack://diamond-webgl/./src/ts/parameters.ts","webpack://diamond-webgl/./src/ts/post-processing.ts","webpack://diamond-webgl/./src/ts/utils.ts","webpack://diamond-webgl/webpack/bootstrap","webpack://diamond-webgl/webpack/startup"],"names":["UNIT_CUBE","Float32Array","gl","Page","Canvas","showLoader","this","cubeVBO","VBO","FLOAT","geometryVBO","createBuffer","shader","LazyShader","shaderMulticolor","raytracedVolumeShader","normalsShader","shadersSkybox","pMatrix","mat4","create","mvpMatrix","camera","OrbitalCamera","phi","theta","maxPhi","Math","PI","updateBackgroundColor","backgroundColor","Parameters","clearColor","r","g","b","Observers","mouseDrag","push","dX","dY","min","max","EPSILON","updateMVPMatrix","mouseWheel","delta","d","distance","canvasResize","addCameraChangeObservers","enable","CULL_FACE","frontFace","CCW","cullFace","BACK","disable","DEPTH_TEST","BLEND","addBackgroundColorObserver","addRecomputeShaderObservers","injectedForGemstone","computeInjectedInstructions","reset","setGemstone","gemstone","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","setIndicatorText","nbTriangles","toString","facets","length","CONVEXITY_ERROR_KEY","isConvex","Demopage","setErrorMessage","rotate","deltaAngle","draw","clear","COLOR_BUFFER_BIT","displaySkybox","drawSkybox","geometryOnly","isASETSkybox","lightType","ELightType","ASET","baseRefractionIndex","refractionIndex","wantedDispersion","dispersion","displayNormals","u","value","eyePos","projection","EProjection","ORTHOGRAPHIC","lightDirection","ELightDirection","DOWNWARD","displayReflection","gemAbsorption","absorption","gemColor","use","aPositionLoc","a","loc","enableVertexAttribArray","vertexAttribPointer","aNormalLoc","bindUniformsAndAttributes","drawArrays","TRIANGLES","drawDebugVolume","skyboxShader","aspectRatio","getAspectRatio","PERSPECTIVE","perspective","ortho","multiply","viewMatrix","facetsDefinitionInstructions","computeEntryPointInstructions","checkIfInsideInstructions","computeInternalIntersectionInstructions","i","facet","facetPointName","facetNormalName","point","x","y","z","normal","FACETS_DEFINITION","join","COMPUTE_ENTRY_POINT","CHECK_IF_INSIDE","COMPUTE_INTERNAL_INTERSECTION","RAY_DEPTH","rayDepth","Drawer","framesSinceLastFPSUpdate","timeOfLastFPSUpdate","performance","now","setInterval","fps","round","registerFrame","logParsingInfo","message","verbose","console","log","knownGemstones","triangles","Gemstone","mutualizeTrianglesVertices","buildBufferFromTriangles","buildFacetsFromTriangles","vertices","triangle","p1","p2","p3","checkConvexity","loadGemstone","name","callback","customCut","XMLHttpRequest","addEventListener","status","fromObj","responseText","open","version","send","input","lines","split","line","trim","lineItems","command","parseFloat","iV","indices","indice","computeBrilliantCut","computeTriangleNormal","result","knownFacet","registeredPlane","isInPlane","computePlaneFromTriangle","vertice","isInsideVolume","HALF_CROWN_SIZE","PAVILION_HEIGHT","customCutPavillionHeight","PAVILION_STEP","customCutPavillionRati","GIRDLE_THICKNESS","customCutGirdleThickness","GIRDLE_ROUNDNESS","customCutGirdleRoundess","CROWN_DEPTH","customCutCrownHeight","CROWN_RATIO","customCutCrownRatio","TABLE_SIZE","customCutCrownTable","CROWN_HEIGHT","vertex0","vertex1","cylindric","cos","vertex2","rotateZ","vertex3","vertex4","vertex5","vertex6","vertex7","vertex8","vertex9","vertex10","vertex11","vertex12","vertex13","lowerFacet1","lowerFacet2","higherFacet1","higherFacet2","iSide","lowerFacet","higherFacet","lowerBaseVertex","upperBaseVertex","nbPoints","sideBaseAngle","iP","angle","lowerN","computeIntersection","lowerNplus","upperN","upperNplus","nbTrianglesForOneEighth","iT","nbPointsSaved","knownVerticesStore","precision","pow","getSimilarVerticeFromStore","hash","Object","keys","v1","v2","v","v12","substraction","sqrt","dotProduct","averagePoint","points","plane","localCoords","abs","planes","sin","radius","direction","initGL","flags","setError","canvas","getCanvas","getContext","adjustSize","hidpi","cssPixel","window","devicePixelRatio","width","floor","clientWidth","height","clientHeight","_gl","GLResource","cachedShaders","buildShader","infos","sourcesPending","sourcesFailed","loadedSource","success","processSource","source","replace","match","injected","vert","ShaderSources","getSource","vertexFilename","frag","fragmentFilename","processedVert","processedFrag","Shader","loadSource","getShader","registerShader","callAndClearCallbacks","cached","callbacks","cachedCallback","failed","pending","builtShader","deleteShader","freeGLResources","cachedSources","filename","text","url","onload","readyState","error","statusText","onerror","notImplemented","alert","types","str","binder","location","uniform2fv","uniform3fv","uniform4fv","uniform2iv","uniform3iv","uniform4iv","uniform1i","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","unitNb","activeTexture","bindTexture","TEXTURE_2D","TEXTURE_CUBE_MAP","Array","isArray","uniform1iv","uniform1fv","uniform1f","vertexSource","fragmentSource","createShader","type","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","id","uCount","aCount","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","introspection","getProgramInfoLog","deleteProgram","useProgram","bindUniforms","currTextureUnitNb","forEach","uName","uniform","bindAttributes","aName","attribute","bind","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","size","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","Usage","array","staticUsage","DYNAMIC_DRAW","normalize","stride","offset","usage","STATIC","DYNAMIC","createQuad","minX","minY","maxX","maxY","deleteBuffer","setData","left","lower","setFullCanvas","viewport","drawingBufferWidth","drawingBufferHeight","set","Viewport","ELoadingState","shaderIndex","fragmentShaderName","vertexShaderName","errorKey","errorMessage","loadingState","NOT_LOADED","requestLoading","_shader","newInjected","LOADING","ShaderManager","LOADED","registerPolyfills","GLCanvas","alpha","antialias","depth","stencil","preserveDrawingBuffer","needToAdjustCanvasSize","addCanvasResizeObservers","drawer","postProcessing","PostProcessing","addCutChangeObserver","lastLoopUpdate","mainLoop","dt","FPSIndicator","highDPI","autoRotate","isMouseDown","displayRaytracedVolume","isReady","prepare","apply","requestAnimationFrame","cut","loadedGemstone","main","focusPoint","_focus","_distance","_theta","_phi","_eyePos","_viewMatrix","recompute","newFocus","newDistance","newTheta","newPhi","lookAt","controlId","callObservers","observers","observer","cutChangeObservers","callCutChangeObservers","Picker","addObserver","Range","addLazyObserver","recomputeShaderObservers","canvasResizeObservers","callCanvasResizeObservers","Checkbox","cameraChangeObservers","Tabs","backgroundColorChangeObservers","rgb","ColorPicker","getValue","updateGemColor","isChecked","ceil","getValues","updateCustomCutSection","Sections","setVisibility","updateIndicatorsVisibility","visible","setIndicatorsVisibility","updateBackgroundVisibility","Controls","isInDebug","URLSearchParams","search","get","SQUARE","squareVBO","downsizingShader","blurShader","BLUR_INSTRUCTIONS","buildGlowInstructions1D","compositingShader","fullSizeTexture","createTexture","downsizedTexture","downsizedBlurredTexture","downsizingIsReady","blurIsReady","compositingIsReady","smallerTextureScaling","initializeTexture","bindFramebuffer","FRAMEBUFFER","framebuffer","texture","TRIANGLE_STRIP","wantedWidth","wantedHeight","format","RGBA","texImage2D","UNSIGNED_BYTE","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","createFramebuffer","factor","exp","total","instructions","String","prototype","startsWith","tested","indexOf","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call"],"mappings":"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","file":"main.min.js","sourcesContent":["import { VBO } from \"./gl-utils/vbo\";\r\nimport { Shader } from \"./gl-utils/shader\";\r\n\r\nimport { Gemstone } from \"./gemstone\";\r\nimport { OrbitalCamera } from \"./orbital-camera\";\r\nimport { ELightDirection, ELightType, EProjection, Parameters } from \"./parameters\";\r\nimport { LazyShader } from \"./lazy-shader\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\n\r\ndeclare const mat4: any;\r\n\r\n\r\nconst UNIT_CUBE = new Float32Array([\r\n    -.5, -.5, -.5,\r\n    -.5, -.5, +.5,\r\n    +.5, -.5, -.5,\r\n    +.5, -.5, -.5,\r\n    -.5, -.5, +.5,\r\n    +.5, -.5, +.5,\r\n\r\n    +.5, -.5, -.5,\r\n    +.5, -.5, +.5,\r\n    +.5, +.5, -.5,\r\n    +.5, +.5, -.5,\r\n    +.5, -.5, +.5,\r\n    +.5, +.5, +.5,\r\n\r\n    -.5, -.5, +.5,\r\n    -.5, +.5, +.5,\r\n    +.5, -.5, +.5,\r\n    +.5, -.5, +.5,\r\n    -.5, +.5, +.5,\r\n    +.5, +.5, +.5,\r\n\r\n    -.5, +.5, -.5,\r\n    +.5, +.5, -.5,\r\n    -.5, +.5, +.5,\r\n    +.5, +.5, -.5,\r\n    +.5, +.5, +.5,\r\n    -.5, +.5, +.5,\r\n\r\n    -.5, -.5, -.5,\r\n    -.5, +.5, -.5,\r\n    -.5, -.5, +.5,\r\n    -.5, +.5, -.5,\r\n    -.5, +.5, +.5,\r\n    -.5, -.5, +.5,\r\n\r\n    -.5, -.5, -.5,\r\n    +.5, -.5, -.5,\r\n    -.5, +.5, -.5,\r\n    +.5, -.5, -.5,\r\n    +.5, +.5, -.5,\r\n    -.5, +.5, -.5,\r\n]);\r\n\r\nclass Drawer {\r\n    private readonly gl: WebGLRenderingContext;\r\n    private readonly cubeVBO: VBO;\r\n    private readonly pMatrix: number[];\r\n    private readonly mvpMatrix: number[];\r\n\r\n    private readonly camera: OrbitalCamera;\r\n\r\n    private readonly shader: LazyShader;\r\n    private readonly shaderMulticolor: LazyShader;\r\n    private readonly raytracedVolumeShader: LazyShader;\r\n    private readonly normalsShader: LazyShader;\r\n    private readonly shadersSkybox: LazyShader;\r\n\r\n    private readonly geometryVBO: WebGLBuffer;\r\n\r\n    private gemstone: Gemstone;\r\n\r\n    public constructor(gl: WebGLRenderingContext) {\r\n        Page.Canvas.showLoader(true);\r\n\r\n        this.gl = gl;\r\n        this.cubeVBO = new VBO(gl, UNIT_CUBE, 3, gl.FLOAT, true);\r\n\r\n        this.geometryVBO = gl.createBuffer();\r\n\r\n        this.shader = new LazyShader(\"shader.frag\", \"shader.vert\", \"default shader\");\r\n        this.shaderMulticolor = new LazyShader(\"shader-multicolor.frag\", \"shader.vert\", \"shader with dispersion\");\r\n        this.raytracedVolumeShader = new LazyShader(\"raytracedVolume.frag\", \"raytracedVolume.vert\", \"debug raytraced shader\");\r\n        this.normalsShader = new LazyShader(\"normals.frag\", \"shader.vert\", \"normals shader\");\r\n        this.shadersSkybox = new LazyShader(\"skybox.frag\", \"skybox.vert\", \"skybox shader\");\r\n\r\n        this.pMatrix = mat4.create();\r\n        this.mvpMatrix = mat4.create();\r\n        this.camera = new OrbitalCamera([0, 0, 0], 1.5);\r\n        this.camera.phi = 1;\r\n        this.camera.theta = 2;\r\n\r\n        const EPSILON = 0.0001;\r\n        const minPhi = EPSILON;\r\n        const maxPhi = Math.PI - EPSILON;\r\n        Page.Canvas.Observers.mouseDrag.push((dX: number, dY: number) => {\r\n            this.camera.theta -= 0.5 * 2 * 3.14159 * dX;\r\n            this.camera.phi -= 0.5 * 2 * 3 * dY;\r\n            this.camera.phi = Math.min(maxPhi, Math.max(minPhi, this.camera.phi));\r\n            this.updateMVPMatrix();\r\n        });\r\n\r\n        const minDist = 0.8;\r\n        const maxDist = 8;\r\n        Page.Canvas.Observers.mouseWheel.push((delta: number) => {\r\n            let d = this.camera.distance + 0.2 * delta;\r\n            d = Math.min(maxDist, Math.max(minDist, d));\r\n            this.camera.distance = d;\r\n            this.updateMVPMatrix();\r\n        });\r\n\r\n        Page.Canvas.Observers.canvasResize.push(() => {\r\n            this.updateMVPMatrix();\r\n        });\r\n\r\n        Parameters.addCameraChangeObservers(() => {\r\n            this.updateMVPMatrix();\r\n        });\r\n\r\n        this.updateMVPMatrix();\r\n\r\n        gl.enable(gl.CULL_FACE);\r\n        gl.frontFace(gl.CCW);\r\n        gl.cullFace(gl.BACK);\r\n        gl.disable(gl.DEPTH_TEST);\r\n        gl.disable(gl.BLEND);\r\n\r\n        function updateBackgroundColor(): void {\r\n            const backgroundColor = Parameters.backgroundColor;\r\n            gl.clearColor(backgroundColor.r / 255, backgroundColor.g / 255, backgroundColor.b / 255, 0.1);\r\n        }\r\n        Parameters.addBackgroundColorObserver(updateBackgroundColor);\r\n        updateBackgroundColor();\r\n\r\n        const recomputeShader = () => {\r\n            const injectedForGemstone = this.computeInjectedInstructions();\r\n            this.shader.reset(injectedForGemstone);\r\n        };\r\n        Parameters.addRecomputeShaderObservers(recomputeShader);\r\n    }\r\n\r\n    public setGemstone(gemstone: Gemstone): void {\r\n        if (this.gemstone !== gemstone) {\r\n            this.gemstone = gemstone;\r\n\r\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.geometryVBO);\r\n            this.gl.bufferData(this.gl.ARRAY_BUFFER, gemstone.bufferData, this.gl.STATIC_DRAW);\r\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\r\n\r\n            const injectedForGemstone = this.computeInjectedInstructions();\r\n            this.shader.reset(injectedForGemstone);\r\n            this.shaderMulticolor.reset(injectedForGemstone);\r\n            this.raytracedVolumeShader.reset(injectedForGemstone);\r\n\r\n            Page.Canvas.setIndicatorText(\"triangles-count-indicator\", gemstone.nbTriangles.toString());\r\n            Page.Canvas.setIndicatorText(\"facets-count-indicator\", gemstone.facets.length.toString());\r\n\r\n            const CONVEXITY_ERROR_KEY = \"shape_not_convex\";\r\n            if (this.gemstone.isConvex) {\r\n                Page.Demopage.setErrorMessage(CONVEXITY_ERROR_KEY, \"\");\r\n            } else {\r\n                Page.Demopage.setErrorMessage(CONVEXITY_ERROR_KEY, \"The current geometry is not supported. The simulation will not look as expected.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    public rotate(deltaAngle: number): void {\r\n        this.camera.theta += deltaAngle;\r\n        this.updateMVPMatrix();\r\n    }\r\n\r\n    public draw(): void {\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\r\n\r\n        if (Parameters.displaySkybox) {\r\n            this.drawSkybox();\r\n        }\r\n\r\n        if (!this.gemstone) {\r\n            return; // nothing to draw\r\n        }\r\n\r\n        let shader: Shader;\r\n\r\n        if (Parameters.geometryOnly) {\r\n            shader = this.normalsShader.shader;\r\n            if (!shader) {\r\n                return; // not ready\r\n            }\r\n        } else {\r\n            const isASETSkybox = (Parameters.lightType === ELightType.ASET);\r\n\r\n            const baseRefractionIndex = Parameters.refractionIndex;\r\n            const wantedDispersion = Parameters.dispersion;\r\n            const dispersion = Math.min(wantedDispersion, baseRefractionIndex - 1);\r\n\r\n            const useSimpleShader = (dispersion <= 0) || isASETSkybox || Parameters.displayNormals;\r\n            if (useSimpleShader) {\r\n                shader = this.shader.shader;\r\n                if (!shader) {\r\n                    return; // not ready\r\n                }\r\n\r\n                shader.u[\"uRefractionIndex\"].value = Parameters.refractionIndex;\r\n                shader.u[\"uASETSkybox\"].value = isASETSkybox ? 1 : 0;\r\n                shader.u[\"uDisplayNormals\"].value = Parameters.displayNormals ? 1 : 0;\r\n            } else {\r\n                shader = this.shaderMulticolor.shader;\r\n                if (!shader) {\r\n                    return; // not ready\r\n                }\r\n\r\n                shader.u[\"uRefractionIndices\"].value = [\r\n                    baseRefractionIndex - 0.5 * dispersion,\r\n                    baseRefractionIndex,\r\n                    baseRefractionIndex + 0.5 * dispersion,\r\n                ];\r\n            }\r\n\r\n            shader.u[\"uEyePosition\"].value = this.camera.eyePos;\r\n            shader.u[\"uOrthographic\"].value = (Parameters.projection === EProjection.ORTHOGRAPHIC) ? 1 : 0;\r\n            shader.u[\"uLightDirection\"].value = (Parameters.lightDirection === ELightDirection.DOWNWARD) ? 1 : -1;\r\n            shader.u[\"uDisplayReflection\"].value = Parameters.displayReflection ? 1 : 0;\r\n\r\n            if (typeof shader.u[\"uAbsorption\"] !== \"undefined\") {\r\n                // when ray depth = 0, this uniform is unused and some drivers delete it, so protect this access\r\n                const gemAbsorption = Parameters.absorption;\r\n                const gemColor = isASETSkybox ? { r: 250, g: 250, b: 250 } : Parameters.gemColor;\r\n                shader.u[\"uAbsorption\"].value = [\r\n                    gemAbsorption * (1 - gemColor.r / 255),\r\n                    gemAbsorption * (1 - gemColor.g / 255),\r\n                    gemAbsorption * (1 - gemColor.b / 255),\r\n                ];\r\n            }\r\n        }\r\n\r\n        Page.Canvas.showLoader(false);\r\n\r\n        shader.u[\"uMVPMatrix\"].value = this.mvpMatrix;\r\n        shader.use();\r\n\r\n        const BYTES_PER_FLOAT = 4;\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.geometryVBO);\r\n        const aPositionLoc = shader.a[\"aPosition\"].loc;\r\n        this.gl.enableVertexAttribArray(aPositionLoc);\r\n        this.gl.vertexAttribPointer(aPositionLoc, 3, this.gl.FLOAT, false, 2 * 3 * BYTES_PER_FLOAT, 0);\r\n\r\n        const aNormalLoc = shader.a[\"aNormal\"].loc;\r\n        this.gl.enableVertexAttribArray(aNormalLoc);\r\n        this.gl.vertexAttribPointer(aNormalLoc, 3, this.gl.FLOAT, false, 2 * 3 * BYTES_PER_FLOAT, 3 * BYTES_PER_FLOAT);\r\n\r\n        shader.bindUniformsAndAttributes();\r\n        this.gl.drawArrays(this.gl.TRIANGLES, 0, 3 * this.gemstone.nbTriangles);\r\n    }\r\n\r\n    public drawDebugVolume(): void {\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\r\n\r\n        if (this.gemstone) {\r\n            const shader = this.raytracedVolumeShader.shader;\r\n\r\n            if (shader) {\r\n                Page.Canvas.showLoader(false);\r\n\r\n                shader.a[\"aPosition\"].VBO = this.cubeVBO;\r\n                shader.u[\"uMVPMatrix\"].value = this.mvpMatrix;\r\n                shader.u[\"uEyePosition\"].value = this.camera.eyePos;\r\n                shader.u[\"uOrthographic\"].value = (Parameters.projection === EProjection.ORTHOGRAPHIC) ? 1 : 0;\r\n                shader.use();\r\n                shader.bindUniformsAndAttributes();\r\n                this.gl.drawArrays(this.gl.TRIANGLES, 0, 3 * 2 * 6);\r\n            }\r\n        }\r\n    }\r\n\r\n    private drawSkybox(): void {\r\n        const skyboxShader = this.shadersSkybox.shader;\r\n        if (skyboxShader) {\r\n            skyboxShader.a[\"aPosition\"].VBO = this.cubeVBO;\r\n            skyboxShader.u[\"uMVPMatrix\"].value = this.mvpMatrix;\r\n            skyboxShader.u[\"uEyePosition\"].value = this.camera.eyePos;\r\n            skyboxShader.u[\"uOrthographic\"].value = (Parameters.projection === EProjection.ORTHOGRAPHIC) ? 1 : 0;\r\n            skyboxShader.u[\"uASETSkybox\"].value = (Parameters.lightType === ELightType.ASET) ? 1 : 0;\r\n            skyboxShader.u[\"uLightDirection\"].value = (Parameters.lightDirection === ELightDirection.DOWNWARD) ? 1 : -1;\r\n            skyboxShader.use();\r\n            skyboxShader.bindUniformsAndAttributes();\r\n            this.gl.drawArrays(this.gl.TRIANGLES, 0, 3 * 2 * 6);\r\n        }\r\n    }\r\n\r\n    private updateMVPMatrix(): void {\r\n        const zNear = 0.1;\r\n        const zFar = 50.0;\r\n        const aspectRatio = Page.Canvas.getAspectRatio();\r\n\r\n        if (Parameters.projection === EProjection.PERSPECTIVE) {\r\n            mat4.perspective(this.pMatrix, 45, aspectRatio, zNear, zFar);\r\n        } else {\r\n            const distance = 0.5 * this.camera.distance;\r\n            mat4.ortho(this.pMatrix, -distance * aspectRatio, distance * aspectRatio, -distance, distance, zNear, zFar);\r\n        }\r\n\r\n        mat4.multiply(this.mvpMatrix, this.pMatrix, this.camera.viewMatrix);\r\n    }\r\n\r\n    private computeInjectedInstructions(): { [name: string]: string } {\r\n        const facetsDefinitionInstructions: string[] = [];\r\n        const computeEntryPointInstructions: string[] = [];\r\n        const checkIfInsideInstructions: string[] = [];\r\n        const computeInternalIntersectionInstructions: string[] = [];\r\n        for (let i = 0; i < this.gemstone.facets.length; i++) {\r\n            const facet = this.gemstone.facets[i];\r\n            const facetPointName = `FACET_${i}_POINT`;\r\n            const facetNormalName = `FACET_${i}_NORMAL`;\r\n\r\n            facetsDefinitionInstructions.push(`const vec3 ${facetPointName} = vec3(${facet.point.x},${facet.point.y},${facet.point.z});`);\r\n            facetsDefinitionInstructions.push(`const vec3 ${facetNormalName} = vec3(${facet.normal.x},${facet.normal.y},${facet.normal.z});`);\r\n\r\n            computeEntryPointInstructions.push(`computeIntersectionWithPlane(${facetPointName}, ${facetNormalName}, eyePosition, fromEyeNormalized, theta, facetNormal);`);\r\n            checkIfInsideInstructions.push(`isInside(${facetPointName}, ${facetNormalName}, entryPoint)`);\r\n\r\n            computeInternalIntersectionInstructions.push(`checkNextInternalIntersection(${facetPointName}, ${facetNormalName}, position, direction, theta, facetNormal);`);\r\n        }\r\n\r\n        return {\r\n            FACETS_DEFINITION: facetsDefinitionInstructions.join(\"\\n\"),\r\n            COMPUTE_ENTRY_POINT: computeEntryPointInstructions.join(\"\\n\\t\"),\r\n            CHECK_IF_INSIDE: checkIfInsideInstructions.join(\" && \"),\r\n            COMPUTE_INTERNAL_INTERSECTION: computeInternalIntersectionInstructions.join(\"\\n\\t\"),\r\n            RAY_DEPTH: Parameters.rayDepth.toString(),\r\n        };\r\n    }\r\n}\r\n\r\nexport { Drawer };\r\n","import \"./page-interface-generated\";\r\n\r\n\r\nlet framesSinceLastFPSUpdate = 0;\r\nlet timeOfLastFPSUpdate = performance.now();\r\n\r\nsetInterval(() => {\r\n    const now = performance.now();\r\n    const fps = 1000 * framesSinceLastFPSUpdate / (now - timeOfLastFPSUpdate);\r\n    timeOfLastFPSUpdate = now;\r\n    framesSinceLastFPSUpdate = 0;\r\n\r\n    Page.Canvas.setIndicatorText(\"fps-indicator\", Math.round(fps).toString());\r\n}, 500);\r\n\r\nfunction registerFrame(): void {\r\n    framesSinceLastFPSUpdate++;\r\n}\r\n\r\nexport { registerFrame };\r\n","import { computeIntersection, computePlaneFromTriangle, computeTriangleNormal, cylindric, IOrientedPlane, IPoint, isInPlane, isInsideVolume, ITriangle, rotateZ } from \"./geometry\";\r\nimport { Parameters } from \"./parameters\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\n\r\nfunction logParsingInfo(message: string): void {\r\n    if (Parameters.verbose) {\r\n        console.log(`OBJ parsing:  ${message}`);\r\n    }\r\n}\r\n\r\nconst knownGemstones: {\r\n    [name: string]: Gemstone | null; // null when requested but not loaded yet\r\n} = {};\r\n\r\nclass Gemstone {\r\n    public static loadGemstone(name: string, callback: (gemstone: Gemstone | null) => unknown): void {\r\n        if (name === \"CUSTOM CUT\") {\r\n            callback(Gemstone.customCut());\r\n        } else if (typeof knownGemstones[name] !== \"undefined\") {\r\n            callback(knownGemstones[name]);\r\n        } else {\r\n            const request = new XMLHttpRequest();\r\n            request.addEventListener(\"load\", () => {\r\n                if (request.status === 200) {\r\n                    if (typeof knownGemstones[name] === \"undefined\") { // maybe it was loaded in the meantime\r\n                        knownGemstones[name] = Gemstone.fromObj(request.responseText);\r\n                    }\r\n                    callback(knownGemstones[name]);\r\n                } else {\r\n                    callback(null);\r\n                }\r\n            });\r\n            request.open(\"GET\", `models/${name}?v=${Page.version}`);\r\n            request.send();\r\n        }\r\n    }\r\n\r\n    public static fromObj(input: string): Gemstone {\r\n        const lines = input.split(\"\\n\");\r\n\r\n        const vertices: IPoint[] = [];\r\n        const triangles: ITriangle[] = [];\r\n\r\n        for (let i = 0; i < lines.length; i++) {\r\n            const line = lines[i].trim();\r\n            const lineItems = line.split(/\\s+/);\r\n            const command = lineItems[0];\r\n\r\n            if (command === \"v\") { // declare vertex\r\n                if (lineItems.length >= 4) {\r\n                    vertices.push({\r\n                        x: parseFloat(lineItems[1]),\r\n                        y: parseFloat(lineItems[2]),\r\n                        z: parseFloat(lineItems[3]),\r\n                    });\r\n                } else {\r\n                    logParsingInfo(`Ignoring line ${i} because it does not have enough items: '${line}'.`);\r\n                    continue;\r\n                }\r\n            } else if (command === \"f\") { // declare face\r\n                if (lineItems.length >= 4) {\r\n                    // faces with more that 3 vertices are interpreted as TRIANGLE_FAN\r\n                    for (let iV = 3; iV < lineItems.length; iV++) {\r\n                        const indices: number[] = [\r\n                            +(lineItems[1].split(\"/\")[0]),\r\n                            +(lineItems[iV - 1].split(\"/\")[0]),\r\n                            +(lineItems[iV].split(\"/\")[0]),\r\n                        ];\r\n\r\n                        for (const indice of indices) {\r\n                            if (indice < 1 || indice >= vertices.length) {\r\n                                logParsingInfo(`Ignoring line ${i} because vertex index ${indice} is out of range: '${line}'.`);\r\n                                continue;\r\n                            }\r\n                        }\r\n\r\n                        triangles.push({\r\n                            p1: vertices[indices[0] - 1],\r\n                            p2: vertices[indices[1] - 1],\r\n                            p3: vertices[indices[2] - 1],\r\n                        });\r\n                    }\r\n                } else {\r\n                    logParsingInfo(`Ignoring line ${i} because only triangular faces are supported: '${line}'.`);\r\n                    continue;\r\n                }\r\n            } else {\r\n                logParsingInfo(`Ignoring line ${i}: '${line}'.`);\r\n                continue;\r\n            }\r\n        }\r\n\r\n        return new Gemstone(triangles);\r\n    }\r\n\r\n    public static customCut(): Gemstone {\r\n        const triangles = Gemstone.computeBrilliantCut();\r\n        return new Gemstone(triangles);\r\n    }\r\n\r\n    public readonly facets: IOrientedPlane[];\r\n    public readonly bufferData: Float32Array;\r\n    public readonly nbTriangles: number;\r\n    public readonly isConvex: boolean;\r\n\r\n    private constructor(triangles: ITriangle[]) {\r\n        Gemstone.mutualizeTrianglesVertices(triangles);\r\n\r\n        this.nbTriangles = triangles.length;\r\n        this.bufferData = Gemstone.buildBufferFromTriangles(triangles);\r\n        this.facets = Gemstone.buildFacetsFromTriangles(triangles);\r\n\r\n        const vertices: IPoint[] = [];\r\n        for (const triangle of triangles) {\r\n            vertices.push(triangle.p1);\r\n            vertices.push(triangle.p2);\r\n            vertices.push(triangle.p3);\r\n        }\r\n        this.isConvex = Gemstone.checkConvexity(vertices, this.facets);\r\n\r\n        if (!this.isConvex) {\r\n            console.log(\"This shape is not convex :(.\");\r\n        }\r\n    }\r\n\r\n    // private static exportAsObj(triangles: ITriangle[]): string {\r\n    //     const verticesDeclarations: string[] = [];\r\n    //     const facesDeclarations: string[] = [];\r\n\r\n    //     const verticesOrdered: IPoint[] = [];\r\n    //     for (const triangle of triangles) {\r\n    //         let indexOf1 = verticesOrdered.indexOf(triangle.p1);\r\n    //         let indexOf2 = verticesOrdered.indexOf(triangle.p2);\r\n    //         let indexOf3 = verticesOrdered.indexOf(triangle.p3);\r\n\r\n    //         if (indexOf1 < 0) {\r\n    //             indexOf1 = verticesOrdered.length;\r\n    //             verticesOrdered.push(triangle.p1);\r\n    //         }\r\n    //         if (indexOf2 < 0) {\r\n    //             indexOf2 = verticesOrdered.length;\r\n    //             verticesOrdered.push(triangle.p2);\r\n    //         }\r\n    //         if (indexOf3 < 0) {\r\n    //             indexOf3 = verticesOrdered.length;\r\n    //             verticesOrdered.push(triangle.p3);\r\n    //         }\r\n\r\n    //         facesDeclarations.push(`f ${indexOf1 + 1} ${indexOf2 + 1} ${indexOf3 + 1}`);\r\n    //     }\r\n\r\n    //     for (const vertice of verticesOrdered) {\r\n    //         verticesDeclarations.push(`v ${vertice.x} ${vertice.y} ${vertice.z}`);\r\n    //     }\r\n\r\n    //     return `${verticesDeclarations.join(\"\\n\")}\\n\\n${facesDeclarations.join(\"\\n\")}`;\r\n    // }\r\n\r\n    private static buildBufferFromTriangles(triangles: ITriangle[]): Float32Array {\r\n        const nbFloatsPerTriangle = (3 + 3) * 3;\r\n        const bufferData = new Float32Array(nbFloatsPerTriangle * triangles.length);\r\n        let i = 0;\r\n        for (const triangle of triangles) {\r\n            const normal = computeTriangleNormal(triangle);\r\n\r\n            bufferData[i++] = triangle.p1.x;\r\n            bufferData[i++] = triangle.p1.y;\r\n            bufferData[i++] = triangle.p1.z;\r\n            bufferData[i++] = normal.x;\r\n            bufferData[i++] = normal.y;\r\n            bufferData[i++] = normal.z;\r\n            bufferData[i++] = triangle.p2.x;\r\n            bufferData[i++] = triangle.p2.y;\r\n            bufferData[i++] = triangle.p2.z;\r\n            bufferData[i++] = normal.x;\r\n            bufferData[i++] = normal.y;\r\n            bufferData[i++] = normal.z;\r\n            bufferData[i++] = triangle.p3.x;\r\n            bufferData[i++] = triangle.p3.y;\r\n            bufferData[i++] = triangle.p3.z;\r\n            bufferData[i++] = normal.x;\r\n            bufferData[i++] = normal.y;\r\n            bufferData[i++] = normal.z;\r\n        }\r\n        return bufferData;\r\n    }\r\n\r\n    private static buildFacetsFromTriangles(triangles: ITriangle[]): IOrientedPlane[] {\r\n        const result: IOrientedPlane[] = [];\r\n        for (const triangle of triangles) {\r\n            let knownFacet = false;\r\n\r\n            for (const registeredPlane of result) {\r\n                if (isInPlane(registeredPlane, triangle.p1) && isInPlane(registeredPlane, triangle.p2) && isInPlane(registeredPlane, triangle.p3)) {\r\n                    knownFacet = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!knownFacet) {\r\n                result.push(computePlaneFromTriangle(triangle));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private static checkConvexity(vertices: IPoint[], facets: IOrientedPlane[]): boolean {\r\n        for (const vertice of vertices) {\r\n            if (!isInsideVolume(facets, vertice)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private static computeBrilliantCut(): ITriangle[] {\r\n        const CROWN_SIZE = 1;\r\n        const HALF_CROWN_SIZE = 0.5 * CROWN_SIZE;\r\n        const PAVILION_HEIGHT = Parameters.customCutPavillionHeight;\r\n        const PAVILION_STEP = Parameters.customCutPavillionRati;\r\n        const GIRDLE_THICKNESS = Parameters.customCutGirdleThickness;\r\n        const GIRDLE_ROUNDNESS = Parameters.customCutGirdleRoundess;\r\n        const CROWN_DEPTH = Parameters.customCutCrownHeight;\r\n        const CROWN_RATIO = Parameters.customCutCrownRatio;\r\n        const TABLE_SIZE = Parameters.customCutCrownTable;\r\n        const CROWN_HEIGHT = GIRDLE_THICKNESS + CROWN_DEPTH;\r\n\r\n        const vertex0: IPoint = { x: 0, y: 0, z: -PAVILION_HEIGHT };\r\n\r\n        const vertex1: IPoint = cylindric((1 - PAVILION_STEP) * HALF_CROWN_SIZE / Math.cos(2 * Math.PI / 16), 2 * Math.PI / 8, -PAVILION_HEIGHT * PAVILION_STEP);\r\n        const vertex2: IPoint = rotateZ(vertex1, -2 * Math.PI / 8);\r\n        const vertex3: IPoint = cylindric(HALF_CROWN_SIZE, 2 * 2 * Math.PI / 16, 0);\r\n        const vertex4: IPoint = cylindric(HALF_CROWN_SIZE, 1 * 2 * Math.PI / 16, 0);\r\n        const vertex5: IPoint = cylindric(HALF_CROWN_SIZE, 0 * 2 * Math.PI / 16, 0);\r\n\r\n        const vertex6: IPoint = { x: vertex3.x, y: vertex3.y, z: GIRDLE_THICKNESS };\r\n        const vertex7: IPoint = { x: vertex4.x, y: vertex4.y, z: GIRDLE_THICKNESS };\r\n        const vertex8: IPoint = { x: vertex5.x, y: vertex5.y, z: GIRDLE_THICKNESS };\r\n\r\n        const vertex9: IPoint = cylindric(0.5 * ((1 - CROWN_RATIO) * CROWN_SIZE + CROWN_RATIO * TABLE_SIZE) / Math.cos(2 * Math.PI / 16), 2 * Math.PI / 8, GIRDLE_THICKNESS + CROWN_RATIO * CROWN_DEPTH);\r\n        const vertex10: IPoint = rotateZ(vertex9, -2 * Math.PI / 8);\r\n        const vertex11: IPoint = cylindric(0.5 * TABLE_SIZE, 1 * 2 * Math.PI / 16, CROWN_HEIGHT);\r\n        const vertex12: IPoint = cylindric(0.5 * TABLE_SIZE, -1 * 2 * Math.PI / 16, CROWN_HEIGHT);\r\n        const vertex13: IPoint = { x: 0, y: 0, z: CROWN_HEIGHT };\r\n\r\n        const lowerFacet1 = computePlaneFromTriangle({ p1: vertex2, p3: vertex5, p2: vertex4 });\r\n        const lowerFacet2 = computePlaneFromTriangle({ p1: vertex1, p3: vertex4, p2: vertex3 });\r\n\r\n        const higherFacet1 = computePlaneFromTriangle({ p1: vertex7, p3: vertex8, p2: vertex10 });\r\n        const higherFacet2 = computePlaneFromTriangle({ p1: vertex6, p3: vertex7, p2: vertex9 });\r\n\r\n        // compute one eighth\r\n        const triangles: ITriangle[] = [];\r\n\r\n        for (let iSide = 0; iSide < 2; iSide++) {\r\n            const lowerFacet = (iSide === 0) ? lowerFacet1 : lowerFacet2;\r\n            const higherFacet = (iSide === 0) ? higherFacet1 : higherFacet2;\r\n            const lowerBaseVertex = (iSide === 0) ? vertex2 : vertex1;\r\n            const upperBaseVertex = (iSide === 0) ? vertex10 : vertex9;\r\n\r\n            const nbPoints = GIRDLE_ROUNDNESS + 2;\r\n            const deltaAngle = 2 * Math.PI / 16 / (nbPoints - 1);\r\n            const sideBaseAngle = iSide * 2 * Math.PI / 16;\r\n            for (let iP = 0; iP < nbPoints - 1; iP++) {\r\n                const angle = sideBaseAngle + iP * deltaAngle;\r\n\r\n                const lowerN = computeIntersection(cylindric(HALF_CROWN_SIZE, angle, 0), { x: 0, y: 0, z: 1 }, lowerFacet);\r\n                const lowerNplus = computeIntersection(cylindric(HALF_CROWN_SIZE, angle + deltaAngle, 0), { x: 0, y: 0, z: 1 }, lowerFacet);\r\n\r\n                const upperN = computeIntersection(cylindric(HALF_CROWN_SIZE, angle, 0), { x: 0, y: 0, z: 1 }, higherFacet);\r\n                const upperNplus = computeIntersection(cylindric(HALF_CROWN_SIZE, angle + deltaAngle, 0), { x: 0, y: 0, z: 1 }, higherFacet);\r\n\r\n                triangles.push({ p1: lowerBaseVertex, p3: lowerN, p2: lowerNplus });\r\n                triangles.push({ p1: lowerNplus, p3: lowerN, p2: upperN });\r\n                triangles.push({ p1: lowerNplus, p3: upperN, p2: upperNplus });\r\n                triangles.push({ p1: upperBaseVertex, p3: upperNplus, p2: upperN });\r\n            }\r\n        }\r\n\r\n\r\n        // PAVILION\r\n        triangles.push({ p1: vertex0, p3: vertex2, p2: vertex4 });\r\n        triangles.push({ p1: vertex0, p3: vertex4, p2: vertex1 });\r\n\r\n        // CROWN\r\n        triangles.push({ p1: vertex11, p3: vertex12, p2: vertex13 });\r\n        triangles.push({ p1: vertex11, p3: vertex10, p2: vertex12 });\r\n        triangles.push({ p1: vertex7, p3: vertex10, p2: vertex11 });\r\n        triangles.push({ p1: vertex7, p3: vertex11, p2: vertex9 });\r\n\r\n        // apply symetry\r\n        const nbTrianglesForOneEighth = triangles.length;\r\n        for (let i = 1; i < 8; i++) {\r\n            for (let iT = 0; iT < nbTrianglesForOneEighth; iT++) {\r\n                triangles.push({\r\n                    p1: rotateZ(triangles[iT].p1, i * 2 * Math.PI / 8),\r\n                    p2: rotateZ(triangles[iT].p2, i * 2 * Math.PI / 8),\r\n                    p3: rotateZ(triangles[iT].p3, i * 2 * Math.PI / 8),\r\n                });\r\n            }\r\n        }\r\n\r\n        return triangles;\r\n    }\r\n\r\n    private static mutualizeTrianglesVertices(triangles: ITriangle[]): void {\r\n        let nbPointsSaved = 0;\r\n\r\n        const knownVerticesStore: { [hash: string]: IPoint } = {};\r\n\r\n        const precision = Math.pow(10, 8);\r\n        function round(x: number): number {\r\n            return Math.round(precision * x);\r\n        }\r\n\r\n        function getSimilarVerticeFromStore(point: IPoint): IPoint {\r\n            const hash = `${round(point.x)}_${round(point.y)}_${round(point.z)}`;\r\n            if (typeof knownVerticesStore[hash] === \"undefined\") {\r\n                knownVerticesStore[hash] = point;\r\n            } else {\r\n                nbPointsSaved++;\r\n            }\r\n            return knownVerticesStore[hash];\r\n        }\r\n\r\n        for (const triangle of triangles) {\r\n            triangle.p1 = getSimilarVerticeFromStore(triangle.p1);\r\n            triangle.p2 = getSimilarVerticeFromStore(triangle.p2);\r\n            triangle.p3 = getSimilarVerticeFromStore(triangle.p3);\r\n        }\r\n\r\n        logParsingInfo(`After mutualization: ${Object.keys(knownVerticesStore).length} vertices (saved ${nbPointsSaved} vertices).`);\r\n    }\r\n}\r\n\r\nexport { Gemstone };\r\n","interface IPoint {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n}\r\n\r\ninterface IVector {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n}\r\n\r\ninterface IOrientedPlane {\r\n    point: IPoint;\r\n    normal: IVector;\r\n}\r\n\r\ninterface ITriangle {\r\n    p1: IPoint;\r\n    p2: IPoint;\r\n    p3: IPoint;\r\n}\r\n\r\nfunction computeTriangleNormal(triangle: ITriangle): IVector {\r\n    const v12 = substraction(triangle.p2, triangle.p1);\r\n    const v13 = substraction(triangle.p3, triangle.p1);\r\n    const normal = crossProduct(v12, v13);\r\n    normalize(normal);\r\n    return normal;\r\n}\r\n\r\nfunction dotProduct(v1: IVector, v2: IVector): number {\r\n    return v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;\r\n}\r\n\r\nfunction crossProduct(v1: IVector, v2: IVector): IVector {\r\n    return {\r\n        x: v1.y * v2.z - v1.z * v2.y,\r\n        y: v1.z * v2.x - v1.x * v2.z,\r\n        z: v1.x * v2.y - v1.y * v2.x,\r\n    };\r\n}\r\n\r\nfunction substraction(v1: IPoint, v2: IPoint): IVector {\r\n    return {\r\n        x: v1.x - v2.x,\r\n        y: v1.y - v2.y,\r\n        z: v1.z - v2.z,\r\n    };\r\n}\r\n\r\nfunction normalize(v: IVector): void {\r\n    const length = Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z);\r\n    if (length > 0) {\r\n        v.x /= length;\r\n        v.y /= length;\r\n        v.z /= length;\r\n    } else {\r\n        v.x = 1;\r\n        v.y = 0;\r\n        v.z = 0;\r\n    }\r\n}\r\n\r\nfunction averagePoint(...points: IPoint[]): IPoint {\r\n    const result: IPoint = { x: 0, y: 0, z: 0 };\r\n    for (const point of points) {\r\n        result.x += point.x;\r\n        result.y += point.y;\r\n        result.z += point.z;\r\n    }\r\n    const nbPoints = points.length;\r\n    result.x /= nbPoints;\r\n    result.y /= nbPoints;\r\n    result.z /= nbPoints;\r\n    return result;\r\n}\r\n\r\nfunction isInPlane(plane: IOrientedPlane, point: IPoint): boolean {\r\n    const localCoords = substraction(point, plane.point);\r\n    return Math.abs(dotProduct(plane.normal, localCoords)) < 0.001;\r\n}\r\n\r\nfunction isInsideVolume(planes: IOrientedPlane[], point: IPoint): boolean {\r\n    for (const plane of planes) {\r\n        const localCoords = substraction(point, plane.point);\r\n        if (dotProduct(plane.normal, localCoords) > 0.001) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction rotateZ(point: IPoint, angle: number): IPoint {\r\n    const cos = Math.cos(angle);\r\n    const sin = Math.sin(angle);\r\n    return {\r\n        x: cos * point.x - sin * point.y,\r\n        y: sin * point.x + cos * point.y,\r\n        z: point.z,\r\n    };\r\n}\r\n\r\nfunction cylindric(radius: number, angle: number, z: number): IPoint {\r\n    return {\r\n        x: radius * Math.cos(angle),\r\n        y: radius * Math.sin(angle),\r\n        z,\r\n    };\r\n}\r\n\r\nfunction computeIntersection(point: IPoint, direction: IVector, plane: IOrientedPlane): IPoint {\r\n    const b = dotProduct(direction, plane.normal);\r\n    if (b !== 0) {\r\n        const a = dotProduct(substraction(plane.point, point), plane.normal);\r\n        const theta = a / b;\r\n        return {\r\n            x: point.x + theta * direction.x,\r\n            y: point.y + theta * direction.y,\r\n            z: point.z + theta * direction.z,\r\n        };\r\n    } else {\r\n        return point;\r\n    }\r\n}\r\n\r\nfunction computePlaneFromTriangle(triangle: ITriangle): IOrientedPlane {\r\n    return {\r\n        point: averagePoint(triangle.p1, triangle.p2, triangle.p3),\r\n        normal: computeTriangleNormal(triangle),\r\n    };\r\n}\r\n\r\nexport {\r\n    averagePoint,\r\n    computeIntersection,\r\n    computePlaneFromTriangle,\r\n    computeTriangleNormal,\r\n    cylindric,\r\n    isInPlane,\r\n    isInsideVolume,\r\n    rotateZ,\r\n    IOrientedPlane,\r\n    IPoint,\r\n    IVector,\r\n    ITriangle,\r\n};\r\n","import \"../page-interface-generated\";\r\n\r\nlet gl: WebGLRenderingContext = null;\r\n\r\n/** Initializes a WebGL context */\r\nfunction initGL(flags?: object): boolean {\r\n    function setError(message: string): void {\r\n        Page.Demopage.setErrorMessage(\"webgl-support\", message);\r\n    }\r\n\r\n    const canvas = Page.Canvas.getCanvas();\r\n\r\n    gl = canvas.getContext(\"webgl\", flags) as WebGLRenderingContext;\r\n    if (gl == null) {\r\n        gl = canvas.getContext(\"experimental-webgl\", flags) as WebGLRenderingContext;\r\n        if (gl == null) {\r\n            setError(\"Your browser or device does not seem to support WebGL.\");\r\n            return false;\r\n        }\r\n\r\n        setError(`Your browser or device only supports experimental WebGL.\r\nThe simulation may not run as expected.`);\r\n    }\r\n\r\n    gl.disable(gl.CULL_FACE);\r\n    gl.disable(gl.DEPTH_TEST);\r\n    gl.disable(gl.BLEND);\r\n    gl.clearColor(0, 0, 0, 1);\r\n\r\n    return true;\r\n}\r\n\r\n/* Adjusts the GL canvas size to the actual canvas element size on the page */\r\nfunction adjustSize(hidpi: boolean = false): void {\r\n    const cssPixel: number = (hidpi) ? window.devicePixelRatio : 1;\r\n\r\n    const canvas = gl.canvas as HTMLCanvasElement;\r\n\r\n    const width: number = Math.floor(canvas.clientWidth * cssPixel);\r\n    const height: number = Math.floor(canvas.clientHeight * cssPixel);\r\n    if (canvas.width !== width || canvas.height !== height) {\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n    }\r\n}\r\n\r\nexport {\r\n    adjustSize,\r\n    initGL,\r\n    gl,\r\n};\r\n","abstract class GLResource {\r\n    private _gl: WebGLRenderingContext;\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this._gl = gl;\r\n    }\r\n\r\n    public gl(): WebGLRenderingContext {\r\n        return this._gl;\r\n    }\r\n\r\n    public abstract freeGLResources(): void;\r\n}\r\n\r\nexport { GLResource };\r\n","import { gl } from \"./gl-canvas\";\r\nimport { Shader } from \"./shader\";\r\nimport * as ShaderSources from \"./shader-sources\";\r\n\r\ntype RegisterCallback = (success: boolean, shader: Shader | null) => void;\r\n\r\ninterface IShaderInfos {\r\n    fragmentFilename: string;\r\n    vertexFilename: string;\r\n    injected: { [id: string]: string };\r\n}\r\n\r\ninterface ICachedShader {\r\n    shader: Shader | null;\r\n    infos: IShaderInfos;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: RegisterCallback[];\r\n}\r\n\r\nconst cachedShaders: { [id: string]: ICachedShader } = {};\r\n\r\nfunction getShader(name: string): Shader | null {\r\n    return cachedShaders[name].shader;\r\n}\r\n\r\ntype BuildCallback = (builtShader: Shader | null) => void;\r\n\r\nfunction buildShader(infos: IShaderInfos, callback: BuildCallback): void {\r\n    let sourcesPending = 2;\r\n    let sourcesFailed = 0;\r\n\r\n    function loadedSource(success: boolean): void {\r\n        function processSource(source: string): string {\r\n            return source.replace(/#INJECT\\(([^)]*)\\)/mg, (match: string, name: string) => {\r\n                if (infos.injected[name]) {\r\n                    return infos.injected[name];\r\n                }\r\n                return match;\r\n            });\r\n        }\r\n\r\n        sourcesPending--;\r\n        if (!success) {\r\n            sourcesFailed++;\r\n        }\r\n\r\n        if (sourcesPending === 0) {\r\n            let shader = null;\r\n\r\n            if (sourcesFailed === 0) {\r\n                const vert = ShaderSources.getSource(infos.vertexFilename);\r\n                const frag = ShaderSources.getSource(infos.fragmentFilename);\r\n\r\n                const processedVert = processSource(vert);\r\n                const processedFrag = processSource(frag);\r\n                shader = new Shader(gl, processedVert, processedFrag);\r\n            }\r\n\r\n            callback(shader);\r\n        }\r\n    }\r\n\r\n    ShaderSources.loadSource(infos.vertexFilename, loadedSource);\r\n    ShaderSources.loadSource(infos.fragmentFilename, loadedSource);\r\n}\r\n\r\nfunction registerShader(name: string, infos: IShaderInfos, callback: RegisterCallback): void {\r\n    function callAndClearCallbacks(cached: ICachedShader): void {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed, cached.shader);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedShaders[name] === \"undefined\") {\r\n        cachedShaders[name] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            infos,\r\n            pending: true,\r\n            shader: null,\r\n        };\r\n        const cached = cachedShaders[name];\r\n\r\n        buildShader(infos, (builtShader: Shader | null) => {\r\n            cached.pending = false;\r\n            cached.failed = builtShader === null;\r\n            cached.shader = builtShader;\r\n\r\n            callAndClearCallbacks(cached);\r\n        });\r\n    } else {\r\n        const cached = cachedShaders[name];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction deleteShader(name: string): void {\r\n    if (typeof cachedShaders[name] !== \"undefined\") {\r\n        if (cachedShaders[name].shader !== null) {\r\n            cachedShaders[name].shader.freeGLResources();\r\n        }\r\n        delete cachedShaders[name];\r\n    }\r\n}\r\n\r\nexport {\r\n    buildShader,\r\n    getShader,\r\n    IShaderInfos,\r\n    registerShader,\r\n    deleteShader,\r\n};\r\n","type LoadCallback = (success: boolean) => void;\r\n\r\ninterface ICachedSource {\r\n    text: string;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: LoadCallback[];\r\n}\r\n\r\nconst cachedSources: { [id: string]: ICachedSource } = {};\r\n\r\n/* Fetches asynchronously the shader source from server and stores it in cache. */\r\nfunction loadSource(filename: string, callback: LoadCallback): void {\r\n    function callAndClearCallbacks(cached: ICachedSource): void {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedSources[filename] === \"undefined\") {\r\n        cachedSources[filename] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            pending: true,\r\n            text: null,\r\n        };\r\n        const cached = cachedSources[filename];\r\n\r\n        let url = \"./shaders/\" + filename;\r\n        if (typeof Page.version !== \"undefined\") {\r\n            url += `?v=${Page.version}`;\r\n        }\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", url, true);\r\n        xhr.onload = () => {\r\n            if (xhr.readyState === 4) {\r\n                cached.pending = false;\r\n\r\n                if (xhr.status === 200) {\r\n                    cached.text = xhr.responseText;\r\n                    cached.failed = false;\r\n                } else {\r\n                    console.error(`Cannot load '${filename}' shader source: ${xhr.statusText}`);\r\n                    cached.failed = true;\r\n                }\r\n\r\n                callAndClearCallbacks(cached);\r\n            }\r\n        };\r\n        xhr.onerror = () => {\r\n            console.error(`Cannot load '${filename}' shader source: ${xhr.statusText}`);\r\n            cached.pending = false;\r\n            cached.failed = true;\r\n            callAndClearCallbacks(cached);\r\n        };\r\n\r\n        xhr.send(null);\r\n    } else {\r\n        const cached = cachedSources[filename];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            cached.callbacks = [callback];\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getSource(filename: string): string {\r\n    return cachedSources[filename].text;\r\n}\r\n\r\nexport {\r\n    getSource,\r\n    loadSource,\r\n};\r\n","import { GLResource } from \"./gl-resource\";\r\nimport { VBO } from \"./vbo\";\r\n\r\nfunction notImplemented(): void {\r\n    alert(\"NOT IMPLEMENTED YET\");\r\n}\r\n\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1fv(location, value);\r\n    } else {\r\n        gl.uniform1f(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformFloat2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4fv(location, value);\r\n}\r\n\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1iv(location, value);\r\n    } else {\r\n        gl.uniform1iv(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformInt2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: boolean | number): void {\r\n    gl.uniform1i(location, +value);\r\n}\r\n\r\nfunction bindUniformBool2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformFloatMat2(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix2fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat3(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix3fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat4(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix4fv(location, false, value);\r\n}\r\n\r\nfunction bindSampler2D(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n    value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture((gl as any)[\"TEXTURE\" + unitNb] as number);\r\n    gl.bindTexture(gl.TEXTURE_2D, value);\r\n}\r\n\r\nfunction bindSamplerCube(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n    value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture((gl as any)[\"TEXTURE\" + unitNb] as number);\r\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, value);\r\n}\r\n\r\n/* From WebGL spec:\r\n* http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14 */\r\ninterface IBindingType {\r\n    str: string;\r\n    binder: (...args: any[]) => unknown;\r\n}\r\nconst types: { [index: string]: IBindingType } = {\r\n    0x8B50: { str: \"FLOAT_VEC2\", binder: bindUniformFloat2v },\r\n    0x8B51: { str: \"FLOAT_VEC3\", binder: bindUniformFloat3v },\r\n    0x8B52: { str: \"FLOAT_VEC4\", binder: bindUniformFloat4v },\r\n    0x8B53: { str: \"INT_VEC2\", binder: bindUniformInt2v },\r\n    0x8B54: { str: \"INT_VEC3\", binder: bindUniformInt3v },\r\n    0x8B55: { str: \"INT_VEC4\", binder: bindUniformInt4v },\r\n    0x8B56: { str: \"BOOL\", binder: bindUniformBool },\r\n    0x8B57: { str: \"BOOL_VEC2\", binder: bindUniformBool2v },\r\n    0x8B58: { str: \"BOOL_VEC3\", binder: bindUniformBool3v },\r\n    0x8B59: { str: \"BOOL_VEC4\", binder: bindUniformBool4v },\r\n    0x8B5A: { str: \"FLOAT_MAT2\", binder: bindUniformFloatMat2 },\r\n    0x8B5B: { str: \"FLOAT_MAT3\", binder: bindUniformFloatMat3 },\r\n    0x8B5C: { str: \"FLOAT_MAT4\", binder: bindUniformFloatMat4 },\r\n    0x8B5E: { str: \"SAMPLER_2D\", binder: bindSampler2D },\r\n    0x8B60: { str: \"SAMPLER_CUBE\", binder: bindSamplerCube },\r\n    0x1400: { str: \"BYTE\", binder: notImplemented },\r\n    0x1401: { str: \"UNSIGNED_BYTE\", binder: notImplemented },\r\n    0x1402: { str: \"SHORT\", binder: notImplemented },\r\n    0x1403: { str: \"UNSIGNED_SHORT\", binder: notImplemented },\r\n    0x1404: { str: \"INT\", binder: bindUniformInt },\r\n    0x1405: { str: \"UNSIGNED_INT\", binder: notImplemented },\r\n    0x1406: { str: \"FLOAT\", binder: bindUniformFloat },\r\n};\r\n\r\ninterface IShaderUniform {\r\n    value: boolean | boolean[] | number | number[] | WebGLTexture | WebGLTexture[];\r\n    loc: WebGLUniformLocation;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\ninterface IShaderAttribute {\r\n    VBO: VBO;\r\n    loc: GLint;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\nclass ShaderProgram extends GLResource {\r\n    public u: { [name: string]: IShaderUniform };\r\n    public a: { [name: string]: IShaderAttribute };\r\n\r\n    private id: WebGLProgram;\r\n    private uCount: number;\r\n    private aCount: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string) {\r\n        function createShader(type: GLenum, source: string): WebGLShader {\r\n            const shader = gl.createShader(type);\r\n            gl.shaderSource(shader, source);\r\n            gl.compileShader(shader);\r\n\r\n            const compileSuccess = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n            if (!compileSuccess) {\r\n                console.error(gl.getShaderInfoLog(shader));\r\n                console.log(source);\r\n                gl.deleteShader(shader);\r\n                return null;\r\n            }\r\n\r\n            return shader;\r\n        }\r\n\r\n        super(gl);\r\n\r\n        this.id = null;\r\n        this.uCount = 0;\r\n        this.aCount = 0;\r\n\r\n        const vertexShader = createShader(gl.VERTEX_SHADER, vertexSource);\r\n        const fragmentShader = createShader(gl.FRAGMENT_SHADER, fragmentSource);\r\n\r\n        const id = gl.createProgram();\r\n        gl.attachShader(id, vertexShader);\r\n        gl.attachShader(id, fragmentShader);\r\n        gl.linkProgram(id);\r\n\r\n        const linkSuccess = gl.getProgramParameter(id, gl.LINK_STATUS);\r\n        if (!linkSuccess) {\r\n            console.error(gl.getProgramInfoLog(id));\r\n            gl.deleteProgram(id);\r\n        } else {\r\n            this.id = id;\r\n\r\n            this.introspection();\r\n        }\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        super.gl().deleteProgram(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public use(): void {\r\n        super.gl().useProgram(this.id);\r\n    }\r\n\r\n    public bindUniforms(): void {\r\n        const gl: WebGLRenderingContext = super.gl();\r\n        let currTextureUnitNb: number = 0;\r\n\r\n        Object.keys(this.u).forEach((uName: string) => {\r\n            const uniform = this.u[uName];\r\n            if (uniform.value !== null) {\r\n                if (uniform.type === 0x8B5E || uniform.type === 0x8B60) {\r\n                    const unitNb: number = currTextureUnitNb;\r\n                    types[uniform.type].binder(gl, uniform.loc, unitNb, uniform.value);\r\n                    currTextureUnitNb++;\r\n                } else {\r\n                    types[uniform.type].binder(gl, uniform.loc, uniform.value);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindAttributes(): void {\r\n        Object.keys(this.a).forEach((aName: string) => {\r\n            const attribute = this.a[aName];\r\n            if (attribute.VBO !== null) {\r\n                attribute.VBO.bind(attribute.loc);\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindUniformsAndAttributes(): void {\r\n        this.bindUniforms();\r\n        this.bindAttributes();\r\n    }\r\n\r\n    private introspection(): void {\r\n        const gl = super.gl();\r\n\r\n        this.uCount = gl.getProgramParameter(this.id, gl.ACTIVE_UNIFORMS);\r\n        this.u = {};\r\n        for (let i = 0; i < this.uCount; i++) {\r\n            const uniform = gl.getActiveUniform(this.id, i);\r\n            const name = uniform.name;\r\n\r\n            this.u[name] = {\r\n                loc: gl.getUniformLocation(this.id, name),\r\n                size: uniform.size,\r\n                type: uniform.type,\r\n                value: null,\r\n            };\r\n        }\r\n\r\n        this.aCount = gl.getProgramParameter(this.id, gl.ACTIVE_ATTRIBUTES);\r\n        this.a = {};\r\n        for (let i = 0; i < this.aCount; i++) {\r\n            const attribute = gl.getActiveAttrib(this.id, i);\r\n            const name = attribute.name;\r\n\r\n            this.a[name] = {\r\n                VBO: null,\r\n                loc: gl.getAttribLocation(this.id, name),\r\n                size: attribute.size,\r\n                type: attribute.type,\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport { ShaderProgram as Shader };\r\n","import { GLResource } from \"./gl-resource\";\r\n\r\nenum Usage {\r\n    DYNAMIC,\r\n    STATIC,\r\n}\r\n\r\nclass VBO extends GLResource {\r\n    public static createQuad(gl: WebGLRenderingContext, minX: number, minY: number, maxX: number, maxY: number): VBO {\r\n        const vert = [\r\n            minX, minY,\r\n            maxX, minY,\r\n            minX, maxY,\r\n            maxX, maxY,\r\n        ];\r\n\r\n        return new VBO(gl, new Float32Array(vert), 2, gl.FLOAT, true);\r\n    }\r\n\r\n    private id: WebGLBuffer;\r\n    private size: number;\r\n    private type: GLenum;\r\n    private normalize: GLboolean;\r\n    private stride: GLsizei;\r\n    private offset: GLintptr;\r\n    private usage: Usage;\r\n\r\n    constructor(gl: WebGLRenderingContext, array: any, size: number, type: GLenum, staticUsage: boolean = true) {\r\n        super(gl);\r\n\r\n        this.id = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (staticUsage) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n        this.size = size;\r\n        this.type = type;\r\n        this.normalize = false;\r\n        this.stride = 0;\r\n        this.offset = 0;\r\n        this.usage = (staticUsage) ? Usage.STATIC : Usage.DYNAMIC;\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        this.gl().deleteBuffer(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public bind(location: GLuint): void {\r\n        const gl = super.gl();\r\n        gl.enableVertexAttribArray(location);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        gl.vertexAttribPointer(location, this.size, this.type, this.normalize, this.stride, this.offset);\r\n    }\r\n\r\n    public setData(array: any): void {\r\n        const gl = super.gl();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (this.usage === Usage.STATIC) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    }\r\n}\r\n\r\nexport { VBO };\r\n","class Viewport {\r\n    public static setFullCanvas(gl: WebGLRenderingContext): void {\r\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n    }\r\n\r\n    public lower: number;\r\n    public left: number;\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(left: number, lower: number, width: number, height: number) {\r\n        this.left = left;\r\n        this.lower = lower;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    public set(gl: WebGLRenderingContext): void {\r\n        gl.viewport(this.lower, this.left, this.width, this.height);\r\n    }\r\n}\r\n\r\nexport { Viewport };\r\n","import { Shader } from \"./gl-utils/shader\";\r\nimport * as ShaderManager from \"./gl-utils/shader-manager\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\n\r\nenum ELoadingState {\r\n    NOT_LOADED,\r\n    LOADING,\r\n    LOADED,\r\n}\r\n\r\nlet shaderIndex = 0;\r\n\r\nclass LazyShader {\r\n    private readonly fragmentShaderName: string;\r\n    private readonly vertexShaderName: string;\r\n\r\n    private readonly errorKey: string;\r\n    private readonly errorMessage: string;\r\n\r\n    private _shader: Shader;\r\n    private loadingState: ELoadingState;\r\n\r\n    private injected: { [key: string]: string };\r\n\r\n    public constructor(fragmentShaderName: string, vertexShaderName: string, name: string) {\r\n        this.fragmentShaderName = fragmentShaderName;\r\n        this.vertexShaderName = vertexShaderName;\r\n        this.errorKey = `shader_fail_${shaderIndex++}`;\r\n        this.errorMessage = `Failed to load or build the shader '${name}'.`;\r\n\r\n        this.loadingState = ELoadingState.NOT_LOADED;\r\n        this.injected = {};\r\n    }\r\n\r\n    public get shader(): Shader | null {\r\n        if (this.loadingState === ELoadingState.NOT_LOADED) {\r\n            this.requestLoading();\r\n        }\r\n\r\n        if (this._shader) {\r\n            return this._shader;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public reset(newInjected: { [key: string]: string }): void {\r\n        this.loadingState = ELoadingState.NOT_LOADED;\r\n\r\n        this.injected = newInjected;\r\n\r\n        if (this._shader) {\r\n            this._shader.freeGLResources();\r\n            this._shader = null;\r\n        }\r\n    }\r\n\r\n    private requestLoading(): void {\r\n        this.loadingState = ELoadingState.LOADING;\r\n\r\n        ShaderManager.buildShader({\r\n            fragmentFilename: this.fragmentShaderName,\r\n            vertexFilename: this.vertexShaderName,\r\n            injected: this.injected,\r\n        }, (builtShader: Shader | null) => {\r\n            this.loadingState = ELoadingState.LOADED;\r\n\r\n            if (builtShader !== null) {\r\n                this._shader = builtShader;\r\n            } else {\r\n                Page.Demopage.setErrorMessage(this.errorKey, this.errorMessage);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    LazyShader,\r\n};\r\n","import * as GLCanvas from \"./gl-utils/gl-canvas\";\r\nimport { gl } from \"./gl-utils/gl-canvas\";\r\nimport { Viewport } from \"./gl-utils/viewport\";\r\n\r\nimport { Drawer } from \"./drawer\";\r\nimport * as FPSIndicator from \"./fps-indicator\";\r\nimport { Gemstone } from \"./gemstone\";\r\nimport { Parameters } from \"./parameters\";\r\nimport { registerPolyfills } from \"./utils\";\r\nimport { PostProcessing } from \"./post-processing\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\n\r\nfunction main(): void {\r\n    registerPolyfills();\r\n\r\n    const webglFlags = {\r\n        alpha: false,\r\n        antialias: false,\r\n        depth: false,\r\n        stencil: false,\r\n        preserveDrawingBuffer: false,\r\n    };\r\n    if (!GLCanvas.initGL(webglFlags)) {\r\n        return;\r\n    }\r\n\r\n    let needToAdjustCanvasSize = true;\r\n    Parameters.addCanvasResizeObservers(() => { needToAdjustCanvasSize = true; });\r\n\r\n    const drawer = new Drawer(gl);\r\n    const postProcessing = new PostProcessing(gl);\r\n\r\n    function loadGemstone(): void {\r\n        Gemstone.loadGemstone(Parameters.cut, (loadedGemstone: Gemstone) => {\r\n            drawer.setGemstone(loadedGemstone);\r\n        });\r\n    }\r\n    Parameters.addCutChangeObserver(loadGemstone);\r\n    loadGemstone();\r\n\r\n    let lastLoopUpdate = 0;\r\n    function mainLoop(): void {\r\n        const now = performance.now();\r\n        const dt = performance.now() - lastLoopUpdate;\r\n        lastLoopUpdate = now;\r\n\r\n        FPSIndicator.registerFrame();\r\n\r\n        if (needToAdjustCanvasSize) {\r\n            GLCanvas.adjustSize(Parameters.highDPI);\r\n            Viewport.setFullCanvas(gl);\r\n            needToAdjustCanvasSize = false;\r\n        }\r\n\r\n        if (Parameters.autoRotate && !Page.Canvas.isMouseDown()) {\r\n            drawer.rotate(dt * 0.0001);\r\n        }\r\n\r\n        if (Parameters.displayRaytracedVolume) {\r\n            drawer.drawDebugVolume();\r\n        } else {\r\n            if (Parameters.postProcessing && postProcessing.isReady()) {\r\n                postProcessing.prepare();\r\n                drawer.draw();\r\n                postProcessing.apply();\r\n            } else {\r\n                drawer.draw();\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(mainLoop);\r\n    }\r\n    mainLoop();\r\n}\r\n\r\nmain();\r\n","declare const mat4: any;\r\n\r\nclass OrbitalCamera {\r\n    private _focus: number[];\r\n    private _distance: number;\r\n    private _theta: number;\r\n    private _phi: number;\r\n\r\n    private _eyePos: number[];\r\n    private _viewMatrix: number[];\r\n\r\n    constructor(focusPoint: number[], distance: number) {\r\n        this._focus = focusPoint;\r\n        this._distance = distance;\r\n        this._theta = 0;\r\n        this._phi = 0.01;\r\n\r\n        this._eyePos = [0, 0, 0];\r\n        this._viewMatrix = mat4.create();\r\n        this.recompute();\r\n    }\r\n\r\n    public get focusPoint(): number[] {\r\n        return this._focus;\r\n    }\r\n    public set focusPoint(newFocus: number[]) {\r\n        this._focus = newFocus;\r\n        this.recompute();\r\n    }\r\n\r\n    public get distance(): number {\r\n        return this._distance;\r\n    }\r\n    public set distance(newDistance: number) {\r\n        this._distance = newDistance;\r\n        this.recompute();\r\n    }\r\n\r\n    public get theta(): number {\r\n        return this._theta;\r\n    }\r\n    public set theta(newTheta: number) {\r\n        this._theta = newTheta;\r\n        this.recompute();\r\n    }\r\n\r\n    public get phi(): number {\r\n        return this._phi;\r\n    }\r\n    public set phi(newPhi: number) {\r\n        this._phi = newPhi;\r\n        this.recompute();\r\n    }\r\n\r\n    public get eyePos(): number[] {\r\n        return this._eyePos;\r\n    }\r\n\r\n    public get viewMatrix(): number[] {\r\n        return this._viewMatrix;\r\n    }\r\n\r\n    private recompute(): void {\r\n        const sin = Math.sin;\r\n        const cos = Math.cos;\r\n\r\n        this._eyePos[0] = this.focusPoint[0] + this.distance * (sin(this.phi) * cos(this.theta));\r\n        this._eyePos[1] = this.focusPoint[1] + this.distance * (sin(this.phi) * sin(this.theta));\r\n        this._eyePos[2] = this.focusPoint[2] + this.distance * (cos(this.phi));\r\n\r\n        this._viewMatrix = mat4.lookAt(this._viewMatrix, this.eyePos, this.focusPoint, [0, 0, 1]);\r\n    }\r\n}\r\n\r\nexport { OrbitalCamera };\r\n","import \"./page-interface-generated\";\r\n\r\n\r\n/* === IDs ============================================================ */\r\nconst controlId = {\r\n    CUT_PICKER_ID: \"gem-cut-picker-id\",\r\n    REFRACTION_RANGE_ID: \"refraction-range-id\",\r\n    GEM_COLOR_PICKER: \"gem-color-picker-id\",\r\n    GEM_ABSOPTION_RANGE_ID: \"absorption-range-id\",\r\n    DISPERSION_RANGE_ID: \"dispersion-range-id\",\r\n    RAY_DEPTH_RANGE_ID: \"ray-depth-range-id\",\r\n    REFLECTION: \"reflection-checkbox-id\",\r\n\r\n    DISPLAY_SKYBOX_CHECKBOX_ID: \"display-skybox-checkbox-id\",\r\n    BACKGROUND_COLOR_PICKER: \"background-color-picker-id\",\r\n    PROJECTION_TABS_ID: \"projection-tabs-id\",\r\n    GEOMETRY_ONLY_CHECKBOX_ID: \"only-normals-checkbox-id\",\r\n    AUTO_ROTATE_CHECKBOX_ID: \"auto-rotate-checkbox-id\",\r\n    POST_PROCESSING_CHECKBOX_ID: \"post-processing-checkbox-id\",\r\n    HIGH_DPI_CHEKBOX_ID: \"high-dpi-checkbox-id\",\r\n\r\n    LIGHT_TYPE_TABS_ID: \"light-type-tabs-id\",\r\n    LIGHT_DIRECTION_TABS_ID: \"light-direction-tabs-id\",\r\n\r\n    DISPLAY_INDICATORS: \"display-indicators-checkbox-id\",\r\n    RAYTRACED_VOLUME: \"raytraced-volume-checkbox-id\",\r\n    DISPLAY_NORMALS: \"display-normals-checkbox-id\",\r\n    VERBOSE: \"verbose-checkbox-id\",\r\n\r\n    CUSTOM_CUT_CROWN_HEIGHT: \"custom-cut-crown-height-range-id\",\r\n    CUSTOM_CUT_CROWN_TABLE: \"custom-cut-crown-table-range-id\",\r\n    CUSTOM_CUT_CROWN_RATIO: \"custom-cut-crown-ratio-range-id\",\r\n    CUSTOM_CUT_GIRDLE_THICKNESS: \"custom-cut-girdle-thickness-range-id\",\r\n    CUSTOM_CUT_GIRDLE_ROUNDNESS: \"custom-cut-girdle-roundness-range-id\",\r\n    CUSTOM_CUT_PAVILLION_HEIGHT: \"custom-cut-pavillion-height-range-id\",\r\n    CUSTOM_CUT_PAVILLION_RATIO: \"custom-cut-pavillion-ratio-range-id\",\r\n};\r\n\r\nenum ELightType {\r\n    WHITE = \"white\",\r\n    ASET = \"aset\",\r\n}\r\n\r\nenum ELightDirection {\r\n    DOWNWARD = \"downward\",\r\n    UPWARD = \"upward\",\r\n}\r\n\r\nenum EProjection {\r\n    PERSPECTIVE = \"perspective\",\r\n    ORTHOGRAPHIC = \"orthographic\",\r\n}\r\n\r\ninterface IRGB {\r\n    r: number;\r\n    g: number;\r\n    b: number;\r\n}\r\n\r\ntype Observer = () => unknown;\r\n\r\nfunction callObservers(observers: Observer[]): void {\r\n    for (const observer of observers) {\r\n        observer();\r\n    }\r\n}\r\n\r\nconst cutChangeObservers: Observer[] = [];\r\nconst callCutChangeObservers = () => { callObservers(cutChangeObservers); };\r\nPage.Picker.addObserver(controlId.CUT_PICKER_ID, callCutChangeObservers);\r\nPage.Range.addLazyObserver(controlId.CUSTOM_CUT_CROWN_HEIGHT, callCutChangeObservers);\r\nPage.Range.addLazyObserver(controlId.CUSTOM_CUT_CROWN_TABLE, callCutChangeObservers);\r\nPage.Range.addLazyObserver(controlId.CUSTOM_CUT_CROWN_RATIO, callCutChangeObservers);\r\nPage.Range.addLazyObserver(controlId.CUSTOM_CUT_GIRDLE_THICKNESS, callCutChangeObservers);\r\nPage.Range.addLazyObserver(controlId.CUSTOM_CUT_GIRDLE_ROUNDNESS, callCutChangeObservers);\r\nPage.Range.addLazyObserver(controlId.CUSTOM_CUT_PAVILLION_HEIGHT, callCutChangeObservers);\r\nPage.Range.addLazyObserver(controlId.CUSTOM_CUT_PAVILLION_RATIO, callCutChangeObservers);\r\n\r\nconst recomputeShaderObservers: Observer[] = [];\r\nconst callRecomputeShaderObservers = () => { callObservers(recomputeShaderObservers); };\r\nPage.Range.addLazyObserver(controlId.RAY_DEPTH_RANGE_ID, callRecomputeShaderObservers);\r\n\r\nconst canvasResizeObservers: Observer[] = [];\r\nconst callCanvasResizeObservers = () => { callObservers(canvasResizeObservers); };\r\nPage.Canvas.Observers.canvasResize.push(callCanvasResizeObservers);\r\nPage.Checkbox.addObserver(controlId.HIGH_DPI_CHEKBOX_ID, callCanvasResizeObservers);\r\n\r\nconst cameraChangeObservers: Observer[] = [];\r\nconst callCameraChangeObservers = () => { callObservers(cameraChangeObservers); };\r\nPage.Tabs.addObserver(controlId.PROJECTION_TABS_ID, callCameraChangeObservers);\r\n\r\nconst backgroundColorChangeObservers: Observer[] = [];\r\nconst backgroundColor: IRGB = { r: 0, g: 0, b: 0 };\r\nfunction updateBackgroundColor(): void {\r\n    const rgb = Page.ColorPicker.getValue(controlId.BACKGROUND_COLOR_PICKER);\r\n    backgroundColor.r = rgb.r;\r\n    backgroundColor.g = rgb.g;\r\n    backgroundColor.b = rgb.b;\r\n\r\n    callObservers(backgroundColorChangeObservers);\r\n}\r\nPage.ColorPicker.addObserver(controlId.BACKGROUND_COLOR_PICKER, updateBackgroundColor);\r\nupdateBackgroundColor();\r\n\r\nconst gemColor: IRGB = { r: 0, g: 0, b: 0 };\r\nfunction updateGemColor(): void {\r\n    const rgb = Page.ColorPicker.getValue(controlId.GEM_COLOR_PICKER);\r\n    gemColor.r = rgb.r;\r\n    gemColor.g = rgb.g;\r\n    gemColor.b = rgb.b;\r\n}\r\nPage.ColorPicker.addObserver(controlId.GEM_COLOR_PICKER, updateGemColor);\r\nupdateGemColor();\r\n\r\nabstract class Parameters {\r\n    public static get cut(): string {\r\n        return Page.Picker.getValue(controlId.CUT_PICKER_ID);\r\n    }\r\n\r\n    public static get refractionIndex(): number {\r\n        return Page.Range.getValue(controlId.REFRACTION_RANGE_ID);\r\n    }\r\n\r\n    public static get displaySkybox(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.DISPLAY_SKYBOX_CHECKBOX_ID);\r\n    }\r\n\r\n    public static get backgroundColor(): IRGB {\r\n        return backgroundColor;\r\n    }\r\n\r\n    public static get gemColor(): IRGB {\r\n        return gemColor;\r\n    }\r\n\r\n    public static get absorption(): number {\r\n        return Page.Range.getValue(controlId.GEM_ABSOPTION_RANGE_ID);\r\n    }\r\n\r\n    public static get dispersion(): number {\r\n        return Page.Range.getValue(controlId.DISPERSION_RANGE_ID);\r\n    }\r\n\r\n    public static get rayDepth(): number {\r\n        return Math.ceil(Page.Range.getValue(controlId.RAY_DEPTH_RANGE_ID));\r\n    }\r\n\r\n    public static get displayReflection(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.REFLECTION);\r\n    }\r\n\r\n    public static get displayRaytracedVolume(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.RAYTRACED_VOLUME);\r\n    }\r\n\r\n    public static get displayNormals(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.DISPLAY_NORMALS);\r\n    }\r\n\r\n    public static get verbose(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.VERBOSE);\r\n    }\r\n\r\n    public static get projection(): EProjection {\r\n        return Page.Tabs.getValues(controlId.PROJECTION_TABS_ID)[0] as EProjection;\r\n    }\r\n\r\n    public static get geometryOnly(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.GEOMETRY_ONLY_CHECKBOX_ID);\r\n    }\r\n\r\n    public static get autoRotate(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.AUTO_ROTATE_CHECKBOX_ID);\r\n    }\r\n\r\n    public static get postProcessing(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.POST_PROCESSING_CHECKBOX_ID);\r\n    }\r\n\r\n    public static get highDPI(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.HIGH_DPI_CHEKBOX_ID);\r\n    }\r\n\r\n    public static get lightType(): ELightType {\r\n        return Page.Tabs.getValues(controlId.LIGHT_TYPE_TABS_ID)[0] as ELightType;\r\n    }\r\n    public static get lightDirection(): ELightDirection {\r\n        return Page.Tabs.getValues(controlId.LIGHT_DIRECTION_TABS_ID)[0] as ELightDirection;\r\n    }\r\n\r\n    public static get customCutCrownHeight(): number {\r\n        return Page.Range.getValue(controlId.CUSTOM_CUT_CROWN_HEIGHT);\r\n    }\r\n    public static get customCutCrownTable(): number {\r\n        return Page.Range.getValue(controlId.CUSTOM_CUT_CROWN_TABLE);\r\n    }\r\n    public static get customCutCrownRatio(): number {\r\n        return Page.Range.getValue(controlId.CUSTOM_CUT_CROWN_RATIO);\r\n    }\r\n    public static get customCutGirdleThickness(): number {\r\n        return Page.Range.getValue(controlId.CUSTOM_CUT_GIRDLE_THICKNESS);\r\n    }\r\n    public static get customCutGirdleRoundess(): number {\r\n        return Page.Range.getValue(controlId.CUSTOM_CUT_GIRDLE_ROUNDNESS);\r\n    }\r\n    public static get customCutPavillionHeight(): number {\r\n        return Page.Range.getValue(controlId.CUSTOM_CUT_PAVILLION_HEIGHT);\r\n    }\r\n    public static get customCutPavillionRati(): number {\r\n        return Page.Range.getValue(controlId.CUSTOM_CUT_PAVILLION_RATIO);\r\n    }\r\n\r\n    public static addCutChangeObserver(observer: Observer): void {\r\n        cutChangeObservers.push(observer);\r\n    }\r\n\r\n    public static addBackgroundColorObserver(observer: Observer): void {\r\n        backgroundColorChangeObservers.push(observer);\r\n    }\r\n\r\n    public static addRecomputeShaderObservers(observer: Observer): void {\r\n        recomputeShaderObservers.push(observer);\r\n    }\r\n\r\n    public static addCanvasResizeObservers(observer: Observer): void {\r\n        canvasResizeObservers.push(observer);\r\n    }\r\n\r\n    public static addCameraChangeObservers(observer: Observer): void {\r\n        cameraChangeObservers.push(observer);\r\n    }\r\n}\r\n\r\nfunction updateCustomCutSection(): void {\r\n    Page.Sections.setVisibility(\"custom-cut-section\", Parameters.cut === \"CUSTOM CUT\");\r\n}\r\nParameters.addCutChangeObserver(updateCustomCutSection);\r\nupdateCustomCutSection();\r\n\r\nPage.Controls.setVisibility(controlId.HIGH_DPI_CHEKBOX_ID, window.devicePixelRatio > 1);\r\n\r\nfunction updateIndicatorsVisibility(): void {\r\n    const visible = Page.Checkbox.isChecked(controlId.DISPLAY_INDICATORS);\r\n    Page.Canvas.setIndicatorsVisibility(visible);\r\n}\r\nPage.Checkbox.addObserver(controlId.DISPLAY_INDICATORS, updateIndicatorsVisibility);\r\nupdateIndicatorsVisibility();\r\n\r\nfunction updateBackgroundVisibility(): void {\r\n    Page.Controls.setVisibility(controlId.BACKGROUND_COLOR_PICKER, !Parameters.displaySkybox);\r\n}\r\nPage.Checkbox.addObserver(controlId.DISPLAY_SKYBOX_CHECKBOX_ID, updateBackgroundVisibility);\r\nupdateBackgroundVisibility();\r\n\r\n{\r\n    let isInDebug = false;\r\n    if (typeof URLSearchParams !== \"undefined\") {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        isInDebug = urlParams.get('debug') === \"1\";\r\n    }\r\n    Page.Sections.setVisibility(\"debug-section-id\", isInDebug);\r\n}\r\n\r\nexport {\r\n    ELightDirection,\r\n    ELightType,\r\n    EProjection,\r\n    Parameters,\r\n};\r\n","import { VBO } from \"./gl-utils/vbo\";\r\nimport { LazyShader } from \"./lazy-shader\";\r\nimport { Parameters } from \"./parameters\";\r\n\r\n\r\ninterface ITexture {\r\n    texture: WebGLTexture;\r\n    framebuffer: WebGLFramebuffer;\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nconst SQUARE = new Float32Array([\r\n    -1, -1,\r\n    +1, -1,\r\n    -1, +1,\r\n    +1, +1,\r\n]);\r\n\r\nclass PostProcessing {\r\n    private readonly gl: WebGLRenderingContext;\r\n    private readonly squareVBO: VBO;\r\n\r\n    private readonly downsizingShader: LazyShader;\r\n    private readonly downsizedTexture: ITexture;\r\n\r\n    private readonly blurShader: LazyShader;\r\n    private readonly downsizedBlurredTexture: ITexture;\r\n\r\n    private readonly compositingShader: LazyShader;\r\n    private readonly fullSizeTexture: ITexture;\r\n\r\n    public constructor(gl: WebGLRenderingContext) {\r\n        this.gl = gl;\r\n\r\n        this.squareVBO = new VBO(gl, SQUARE, 2, gl.FLOAT, true);\r\n\r\n        this.downsizingShader = new LazyShader(\"post-processing/downsizing.frag\", \"post-processing/fullscreen.vert\", \"post-processing downsizing\");\r\n        this.blurShader = new LazyShader(\"post-processing/blur.frag\", \"post-processing/fullscreen.vert\", \"post-processing blur\");\r\n        this.blurShader.reset({\r\n            BLUR_INSTRUCTIONS: PostProcessing.buildGlowInstructions1D(3), // || PostProcessing.buildGlowInstructions2D(10),\r\n        });\r\n        this.compositingShader = new LazyShader(\"post-processing/compositing.frag\", \"post-processing/fullscreen.vert\", \"post-processing downsizing\");\r\n\r\n        this.fullSizeTexture = this.createTexture();\r\n        this.downsizedTexture = this.createTexture();\r\n        this.downsizedBlurredTexture = this.createTexture();\r\n    }\r\n\r\n    public isReady(): boolean {\r\n        // avoid lazy evaluation to force shader loading asap\r\n        const downsizingIsReady = !!this.downsizingShader.shader;\r\n        const blurIsReady = !!this.blurShader.shader;\r\n        const compositingIsReady = !!this.compositingShader.shader;\r\n        return downsizingIsReady && blurIsReady && compositingIsReady;\r\n    }\r\n\r\n    public prepare(): void {\r\n        const dpiScaling = Parameters.highDPI ? window.devicePixelRatio : 1;\r\n        const smallerTextureScaling = 1 / (8 * dpiScaling);\r\n\r\n        this.initializeTexture(this.fullSizeTexture, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\r\n        this.initializeTexture(this.downsizedTexture, smallerTextureScaling * this.fullSizeTexture.width, smallerTextureScaling * this.fullSizeTexture.height);\r\n        this.initializeTexture(this.downsizedBlurredTexture, this.downsizedTexture.width, this.downsizedTexture.height);\r\n\r\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.fullSizeTexture.framebuffer);\r\n        this.gl.viewport(0, 0, this.fullSizeTexture.width, this.fullSizeTexture.height);\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\r\n    }\r\n\r\n    public apply(): void {\r\n        const downsizingShader = this.downsizingShader.shader;\r\n        const blurShader = this.blurShader.shader;\r\n        const compositingShader = this.compositingShader.shader;\r\n        if (downsizingShader && blurShader && compositingShader) {\r\n            // downsize\r\n            {\r\n                downsizingShader.a[\"aCorner\"].VBO = this.squareVBO;\r\n                downsizingShader.u[\"uTexture\"].value = this.fullSizeTexture.texture;\r\n\r\n                downsizingShader.use();\r\n                downsizingShader.bindUniformsAndAttributes();\r\n\r\n                this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.downsizedTexture.framebuffer);\r\n                this.gl.viewport(0, 0, this.downsizedTexture.width, this.downsizedTexture.height);\r\n                this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\r\n            }\r\n\r\n            // blur\r\n            {\r\n                blurShader.a[\"aCorner\"].VBO = this.squareVBO;\r\n                blurShader.u[\"uTexture\"].value = this.downsizedTexture.texture;\r\n                blurShader.u[\"uTexelSize\"].value = [1 / this.downsizedTexture.width, 1 / this.downsizedTexture.height];\r\n\r\n                blurShader.use();\r\n                blurShader.bindUniformsAndAttributes();\r\n\r\n                this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.downsizedBlurredTexture.framebuffer);\r\n                this.gl.viewport(0, 0, this.downsizedBlurredTexture.width, this.downsizedBlurredTexture.height);\r\n                this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\r\n            }\r\n\r\n            // compositing\r\n            {\r\n                compositingShader.a[\"aCorner\"].VBO = this.squareVBO;\r\n                compositingShader.u[\"uFullsizeTexture\"].value = this.fullSizeTexture.texture;\r\n                compositingShader.u[\"uFullsizeTextureTexelSize\"].value = [1 / this.fullSizeTexture.width, 1 / this.fullSizeTexture.height];\r\n                compositingShader.u[\"uBlurredTexture\"].value = this.downsizedBlurredTexture.texture;\r\n\r\n                compositingShader.use();\r\n                compositingShader.bindUniformsAndAttributes();\r\n\r\n                this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\r\n                this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\r\n                this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\r\n                this.gl.bindTexture(this.gl.TEXTURE_2D, null);\r\n            }\r\n        }\r\n    }\r\n\r\n    private initializeTexture(texture: ITexture, wantedWidth: number, wantedHeight: number): void {\r\n        wantedWidth = Math.ceil(wantedWidth);\r\n        wantedHeight = Math.ceil(wantedHeight);\r\n\r\n        if (texture.width !== wantedWidth || texture.height !== wantedHeight) {\r\n            this.gl.bindTexture(this.gl.TEXTURE_2D, texture.texture);\r\n\r\n            const format = this.gl.RGBA;\r\n            this.gl.texImage2D(this.gl.TEXTURE_2D, 0, format, wantedWidth, wantedHeight, 0, format, this.gl.UNSIGNED_BYTE, null);\r\n            this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\r\n            this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\r\n            this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\r\n\r\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, texture.framebuffer);\r\n            this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, texture.texture, 0);\r\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\r\n\r\n            this.gl.bindTexture(this.gl.TEXTURE_2D, null);\r\n\r\n            texture.width = wantedWidth;\r\n            texture.height = wantedHeight;\r\n        }\r\n    }\r\n\r\n    private createTexture(): ITexture {\r\n        return {\r\n            texture: this.gl.createTexture(),\r\n            framebuffer: this.gl.createFramebuffer(),\r\n            width: -1,\r\n            height: -1,\r\n        };\r\n    }\r\n\r\n    // private static buildGlowInstructions2D(radius: number): string {\r\n    //     const sigma = 2;\r\n    //     function factor(x: number, y: number): number {\r\n    //         return Math.exp(-(x * x + y * y) / (2 * sigma * sigma)) / (2 * Math.PI * sigma * sigma);\r\n    //     }\r\n\r\n    //     let total = factor(0, 0);\r\n    //     for (let iY = -radius; iY <= radius; iY++) {\r\n    //         for (let iX = -radius; iX <= radius; iX++) {\r\n    //             if (iX !== 0 || iY !== 0) {\r\n    //                 total += factor(iX, iY);\r\n    //             }\r\n    //         }\r\n    //     }\r\n\r\n    //     const instructions: string[] = [];\r\n    //     instructions.push(`glow += ${factor(0, 0) / total} * contribution(vSamplingPosition);`);\r\n    //     for (let iY = -radius; iY <= radius; iY++) {\r\n    //         for (let iX = -radius; iX <= radius; iX++) {\r\n    //             if (iX !== 0 || iY !== 0) {\r\n    //                 instructions.push(`glow += ${factor(iX, iY) / total} * contribution(vSamplingPosition + vec2(${iX}, ${iY}) * uTexelSize);`);\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     return instructions.join(\"\\n\\t\");\r\n    // }\r\n\r\n    private static buildGlowInstructions1D(radius: number): string {\r\n        const sigma = 8;\r\n        function factor(x: number): number {\r\n            return Math.exp(-(x * x) / (2 * sigma * sigma)) / Math.sqrt(2 * Math.PI * sigma * sigma);\r\n        }\r\n\r\n        let total = 0;\r\n        for (let i = -radius - 0.5; i <= radius; i++) {\r\n            total += factor(i);\r\n        }\r\n\r\n        const instructions: string[] = [];\r\n        for (let i = -radius - 0.5; i <= radius + 0.5; i++) {\r\n            instructions.push(`blurred += ${factor(i) / total} * contribution(vec2(${i}, ${i}));`);\r\n            instructions.push(`blurred += ${factor(i) / total} * contribution(vec2(${i}, ${-i}));`);\r\n        }\r\n        instructions.push(`blurred *= 0.5;`); // normalize\r\n        instructions.push(`blurred *= 0.5;`);\r\n        return instructions.join(\"\\n\\t\");\r\n    }\r\n}\r\n\r\nexport { PostProcessing };\r\n","function traceRegistration(name: string): void {\r\n    console.log(`Registering polyfill for '${name}'.`);\r\n}\r\n\r\nfunction registerStringStartsWithPolyfill(): void {\r\n    if (typeof String.prototype.startsWith !== \"function\") {\r\n        traceRegistration(\"String.startsWith\");\r\n        String.prototype.startsWith = function (tested: string): boolean {\r\n            return this.indexOf(tested) === 0;\r\n        };\r\n    }\r\n}\r\n\r\nfunction registerPolyfills(): void {\r\n    registerStringStartsWithPolyfill();\r\n}\r\n\r\nexport {\r\n    registerPolyfills,\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(633);\n"],"sourceRoot":""}