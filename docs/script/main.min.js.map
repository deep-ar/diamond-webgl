{"version":3,"file":"main.min.js","mappings":"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","sources":["webpack://diamond-webgl/./src/ts/cuts.ts","webpack://diamond-webgl/./src/ts/drawer.ts","webpack://diamond-webgl/./src/ts/fps-indicator.ts","webpack://diamond-webgl/./src/ts/gemstone.ts","webpack://diamond-webgl/./src/ts/geometry.ts","webpack://diamond-webgl/./src/ts/gl-utils/gl-canvas.ts","webpack://diamond-webgl/./src/ts/gl-utils/gl-resource.ts","webpack://diamond-webgl/./src/ts/gl-utils/shader-manager.ts","webpack://diamond-webgl/./src/ts/gl-utils/shader-sources.ts","webpack://diamond-webgl/./src/ts/gl-utils/shader.ts","webpack://diamond-webgl/./src/ts/gl-utils/vbo.ts","webpack://diamond-webgl/./src/ts/gl-utils/viewport.ts","webpack://diamond-webgl/./src/ts/lazy-shader.ts","webpack://diamond-webgl/./src/ts/main.ts","webpack://diamond-webgl/./src/ts/orbital-camera.ts","webpack://diamond-webgl/./src/ts/parameters.ts","webpack://diamond-webgl/./src/ts/post-processing.ts","webpack://diamond-webgl/./src/ts/utils.ts","webpack://diamond-webgl/webpack/bootstrap","webpack://diamond-webgl/webpack/startup"],"sourcesContent":["/// <reference types=\"./types\"/>\r\n\r\nimport BrilliantCut from \"../models/brilliant_cut.obj\";\r\nimport BrilliantCutTriangle from \"../models/brilliant_cut_triangle.obj\";\r\nimport Cube from \"../models/cube.obj\";\r\nimport OvalCut from \"../models/oval_cut.obj\";\r\nimport Pc40044 from \"../models/pc40044.obj\";\r\nimport Princess from \"../models/princess.obj\";\r\nimport Sphere from \"../models/sphere.obj\";\r\nimport StepCut from \"../models/step_cut.obj\";\r\n\r\nconst cuts: Record<string, string> = {\r\n    \"brilliant_cut.obj\": BrilliantCut,\r\n    \"brilliant_cut_triangle.obj\": BrilliantCutTriangle,\r\n    \"cube.obj\": Cube,\r\n    \"oval_cut.obj\": OvalCut,\r\n    \"pc40044.obj\": Pc40044,\r\n    \"princess.obj\": Princess,\r\n    \"sphere.obj\": Sphere,\r\n    \"step_cut.obj\": StepCut,\r\n};\r\n\r\nexport {\r\n     cuts as Cuts,\r\n};\r\n\r\n","import { VBO } from \"./gl-utils/vbo\";\r\nimport { Shader } from \"./gl-utils/shader\";\r\n\r\nimport { Gemstone } from \"./gemstone\";\r\nimport { OrbitalCamera } from \"./orbital-camera\";\r\nimport { ELightDirection, ELightType, EProjection, Parameters } from \"./parameters\";\r\nimport { LazyShader } from \"./lazy-shader\";\r\nimport * as ShaderSources from \"./gl-utils/shader-sources\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\n\r\ndeclare const mat4: any;\r\n\r\n\r\nconst UNIT_CUBE = new Float32Array([\r\n    -.5, -.5, -.5,\r\n    -.5, -.5, +.5,\r\n    +.5, -.5, -.5,\r\n    +.5, -.5, -.5,\r\n    -.5, -.5, +.5,\r\n    +.5, -.5, +.5,\r\n\r\n    +.5, -.5, -.5,\r\n    +.5, -.5, +.5,\r\n    +.5, +.5, -.5,\r\n    +.5, +.5, -.5,\r\n    +.5, -.5, +.5,\r\n    +.5, +.5, +.5,\r\n\r\n    -.5, -.5, +.5,\r\n    -.5, +.5, +.5,\r\n    +.5, -.5, +.5,\r\n    +.5, -.5, +.5,\r\n    -.5, +.5, +.5,\r\n    +.5, +.5, +.5,\r\n\r\n    -.5, +.5, -.5,\r\n    +.5, +.5, -.5,\r\n    -.5, +.5, +.5,\r\n    +.5, +.5, -.5,\r\n    +.5, +.5, +.5,\r\n    -.5, +.5, +.5,\r\n\r\n    -.5, -.5, -.5,\r\n    -.5, +.5, -.5,\r\n    -.5, -.5, +.5,\r\n    -.5, +.5, -.5,\r\n    -.5, +.5, +.5,\r\n    -.5, -.5, +.5,\r\n\r\n    -.5, -.5, -.5,\r\n    +.5, -.5, -.5,\r\n    -.5, +.5, -.5,\r\n    +.5, -.5, -.5,\r\n    +.5, +.5, -.5,\r\n    -.5, +.5, -.5,\r\n]);\r\n\r\nclass Drawer {\r\n    private readonly gl: WebGLRenderingContext;\r\n    private readonly cubeVBO: VBO;\r\n    private readonly pMatrix: number[];\r\n    private readonly mvpMatrix: number[];\r\n\r\n    private readonly camera: OrbitalCamera;\r\n\r\n    private readonly shader: LazyShader;\r\n    private readonly shaderMulticolor: LazyShader;\r\n    private readonly raytracedVolumeShader: LazyShader;\r\n    private readonly normalsShader: LazyShader;\r\n    private readonly shadersSkybox: LazyShader;\r\n\r\n    private readonly geometryVBO: WebGLBuffer;\r\n\r\n    private gemstone: Gemstone;\r\n\r\n    public constructor(gl: WebGLRenderingContext) {\r\n        Page.Canvas.showLoader(true);\r\n\r\n        this.gl = gl;\r\n        this.cubeVBO = new VBO(gl, UNIT_CUBE, 3, gl.FLOAT, true);\r\n\r\n        this.geometryVBO = gl.createBuffer();\r\n\r\n        this.shader = new LazyShader(ShaderSources.ShaderFrag, ShaderSources.ShaderVert, \"default shader\");\r\n        this.shaderMulticolor = new LazyShader(ShaderSources.ShaderMulticolorFrag, ShaderSources.ShaderVert, \"shader with dispersion\");\r\n        this.raytracedVolumeShader = new LazyShader(ShaderSources.RaytracedVolumeFrag, ShaderSources.RaytracedVolumeVert, \"debug raytraced shader\");\r\n        this.normalsShader = new LazyShader(ShaderSources.NormalsFrag, ShaderSources.ShaderVert, \"normals shader\");\r\n        this.shadersSkybox = new LazyShader(ShaderSources.SkyboxFrag, ShaderSources.SkyboxVert, \"skybox shader\");\r\n\r\n        this.pMatrix = mat4.create();\r\n        this.mvpMatrix = mat4.create();\r\n        this.camera = new OrbitalCamera([0, 0, 0], 1.5);\r\n        this.camera.phi = 1;\r\n        this.camera.theta = 2;\r\n\r\n        const EPSILON = 0.0001;\r\n        const minPhi = EPSILON;\r\n        const maxPhi = Math.PI - EPSILON;\r\n        Page.Canvas.Observers.mouseDrag.push((dX: number, dY: number) => {\r\n            this.camera.theta -= 0.5 * 2 * 3.14159 * dX;\r\n            this.camera.phi -= 0.5 * 2 * 3 * dY;\r\n            this.camera.phi = Math.min(maxPhi, Math.max(minPhi, this.camera.phi));\r\n            this.updateMVPMatrix();\r\n        });\r\n\r\n        const minDist = 0.8;\r\n        const maxDist = 8;\r\n        Page.Canvas.Observers.mouseWheel.push((delta: number) => {\r\n            let d = this.camera.distance + 0.2 * delta;\r\n            d = Math.min(maxDist, Math.max(minDist, d));\r\n            this.camera.distance = d;\r\n            this.updateMVPMatrix();\r\n        });\r\n\r\n        Page.Canvas.Observers.canvasResize.push(() => {\r\n            this.updateMVPMatrix();\r\n        });\r\n\r\n        Parameters.addCameraChangeObservers(() => {\r\n            this.updateMVPMatrix();\r\n        });\r\n\r\n        this.updateMVPMatrix();\r\n\r\n        gl.enable(gl.CULL_FACE);\r\n        gl.frontFace(gl.CCW);\r\n        gl.cullFace(gl.BACK);\r\n        gl.disable(gl.DEPTH_TEST);\r\n        gl.disable(gl.BLEND);\r\n\r\n        function updateBackgroundColor(): void {\r\n            const backgroundColor = Parameters.backgroundColor;\r\n            gl.clearColor(backgroundColor.r / 255, backgroundColor.g / 255, backgroundColor.b / 255, 0.1);\r\n        }\r\n        Parameters.addBackgroundColorObserver(updateBackgroundColor);\r\n        updateBackgroundColor();\r\n\r\n        const recomputeShader = () => {\r\n            const injectedForGemstone = this.computeInjectedInstructions();\r\n            this.shader.reset(injectedForGemstone);\r\n        };\r\n        Parameters.addRecomputeShaderObservers(recomputeShader);\r\n    }\r\n\r\n    public setGemstone(gemstone: Gemstone): void {\r\n        if (this.gemstone !== gemstone) {\r\n            this.gemstone = gemstone;\r\n\r\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.geometryVBO);\r\n            this.gl.bufferData(this.gl.ARRAY_BUFFER, gemstone.bufferData, this.gl.STATIC_DRAW);\r\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\r\n\r\n            const injectedForGemstone = this.computeInjectedInstructions();\r\n            this.shader.reset(injectedForGemstone);\r\n            this.shaderMulticolor.reset(injectedForGemstone);\r\n            this.raytracedVolumeShader.reset(injectedForGemstone);\r\n\r\n            Page.Canvas.setIndicatorText(\"triangles-count-indicator\", gemstone.nbTriangles.toString());\r\n            Page.Canvas.setIndicatorText(\"facets-count-indicator\", gemstone.facets.length.toString());\r\n\r\n            const CONVEXITY_ERROR_KEY = \"shape_not_convex\";\r\n            if (this.gemstone.isConvex) {\r\n                Page.Demopage.setErrorMessage(CONVEXITY_ERROR_KEY, \"\");\r\n            } else {\r\n                Page.Demopage.setErrorMessage(CONVEXITY_ERROR_KEY, \"The current geometry is not supported. The simulation will not look as expected.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    public rotate(deltaAngle: number): void {\r\n        this.camera.theta += deltaAngle;\r\n        this.updateMVPMatrix();\r\n    }\r\n\r\n    public draw(): void {\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\r\n\r\n        if (Parameters.displaySkybox) {\r\n            this.drawSkybox();\r\n        }\r\n\r\n        if (!this.gemstone) {\r\n            return; // nothing to draw\r\n        }\r\n\r\n        let shader: Shader;\r\n\r\n        if (Parameters.geometryOnly) {\r\n            shader = this.normalsShader.shader;\r\n            if (!shader) {\r\n                return; // not ready\r\n            }\r\n        } else {\r\n            const isASETSkybox = (Parameters.lightType === ELightType.ASET);\r\n\r\n            const baseRefractionIndex = Parameters.refractionIndex;\r\n            const wantedDispersion = Parameters.dispersion;\r\n            const dispersion = Math.min(wantedDispersion, baseRefractionIndex - 1);\r\n\r\n            const useSimpleShader = (dispersion <= 0) || isASETSkybox || Parameters.displayNormals;\r\n            if (useSimpleShader) {\r\n                shader = this.shader.shader;\r\n                if (!shader) {\r\n                    return; // not ready\r\n                }\r\n\r\n                shader.u[\"uRefractionIndex\"].value = Parameters.refractionIndex;\r\n                shader.u[\"uDisplayNormals\"].value = Parameters.displayNormals ? 1 : 0;\r\n            } else {\r\n                shader = this.shaderMulticolor.shader;\r\n                if (!shader) {\r\n                    return; // not ready\r\n                }\r\n\r\n                shader.u[\"uRefractionIndices\"].value = [\r\n                    baseRefractionIndex - 0.5 * dispersion,\r\n                    baseRefractionIndex,\r\n                    baseRefractionIndex + 0.5 * dispersion,\r\n                ];\r\n            }\r\n\r\n            shader.u[\"uEyePosition\"].value = this.camera.eyePos;\r\n            shader.u[\"uOrthographic\"].value = (Parameters.projection === EProjection.ORTHOGRAPHIC) ? 1 : 0;\r\n            shader.u[\"uLightType\"].value = Parameters.lightType;\r\n            shader.u[\"uLightDirection\"].value = (Parameters.lightDirection === ELightDirection.DOWNWARD) ? 1 : -1;\r\n            shader.u[\"uHeadShadow\"].value = Parameters.headShadow;\r\n            const angle = Math.atan2(this.camera.eyePos[1], this.camera.eyePos[0]);\r\n            shader.u[\"uSkyboxHorizontalCorrection\"].value = [Math.cos(-angle), Math.sin(-angle), -Math.sin(-angle), Math.cos(-angle)]; // inverse rotation\r\n            shader.u[\"uDisplayReflection\"].value = Parameters.displayReflection ? 1 : 0;\r\n\r\n            if (typeof shader.u[\"uAbsorption\"] !== \"undefined\") {\r\n                // when ray depth = 0, this uniform is unused and some drivers delete it, so protect this access\r\n                const gemAbsorption = Parameters.absorption;\r\n                const gemColor = isASETSkybox ? { r: 250, g: 250, b: 250 } : Parameters.gemColor;\r\n                shader.u[\"uAbsorption\"].value = [\r\n                    gemAbsorption * (1 - gemColor.r / 255),\r\n                    gemAbsorption * (1 - gemColor.g / 255),\r\n                    gemAbsorption * (1 - gemColor.b / 255),\r\n                ];\r\n            }\r\n        }\r\n\r\n        Page.Canvas.showLoader(false);\r\n\r\n        shader.u[\"uMVPMatrix\"].value = this.mvpMatrix;\r\n        shader.use();\r\n\r\n        const BYTES_PER_FLOAT = 4;\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.geometryVBO);\r\n        const aPositionLoc = shader.a[\"aPosition\"].loc;\r\n        this.gl.enableVertexAttribArray(aPositionLoc);\r\n        this.gl.vertexAttribPointer(aPositionLoc, 3, this.gl.FLOAT, false, 2 * 3 * BYTES_PER_FLOAT, 0);\r\n\r\n        const aNormalLoc = shader.a[\"aNormal\"].loc;\r\n        this.gl.enableVertexAttribArray(aNormalLoc);\r\n        this.gl.vertexAttribPointer(aNormalLoc, 3, this.gl.FLOAT, false, 2 * 3 * BYTES_PER_FLOAT, 3 * BYTES_PER_FLOAT);\r\n\r\n        shader.bindUniformsAndAttributes();\r\n        this.gl.drawArrays(this.gl.TRIANGLES, 0, 3 * this.gemstone.nbTriangles);\r\n    }\r\n\r\n    public drawDebugVolume(): void {\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\r\n\r\n        if (this.gemstone) {\r\n            const shader = this.raytracedVolumeShader.shader;\r\n\r\n            if (shader) {\r\n                Page.Canvas.showLoader(false);\r\n\r\n                shader.a[\"aPosition\"].VBO = this.cubeVBO;\r\n                shader.u[\"uMVPMatrix\"].value = this.mvpMatrix;\r\n                shader.u[\"uEyePosition\"].value = this.camera.eyePos;\r\n                shader.u[\"uOrthographic\"].value = (Parameters.projection === EProjection.ORTHOGRAPHIC) ? 1 : 0;\r\n                shader.use();\r\n                shader.bindUniformsAndAttributes();\r\n                this.gl.drawArrays(this.gl.TRIANGLES, 0, 3 * 2 * 6);\r\n            }\r\n        }\r\n    }\r\n\r\n    private drawSkybox(): void {\r\n        const skyboxShader = this.shadersSkybox.shader;\r\n        if (skyboxShader) {\r\n            skyboxShader.a[\"aPosition\"].VBO = this.cubeVBO;\r\n            skyboxShader.u[\"uMVPMatrix\"].value = this.mvpMatrix;\r\n            skyboxShader.u[\"uEyePosition\"].value = this.camera.eyePos;\r\n            skyboxShader.u[\"uOrthographic\"].value = (Parameters.projection === EProjection.ORTHOGRAPHIC) ? 1 : 0;\r\n            skyboxShader.u[\"uLightType\"].value = Parameters.lightType;\r\n            skyboxShader.u[\"uLightDirection\"].value = (Parameters.lightDirection === ELightDirection.DOWNWARD) ? 1 : -1;\r\n            skyboxShader.u[\"uHeadShadow\"].value = Parameters.headShadow;\r\n            skyboxShader.use();\r\n            skyboxShader.bindUniformsAndAttributes();\r\n            this.gl.drawArrays(this.gl.TRIANGLES, 0, 3 * 2 * 6);\r\n        }\r\n    }\r\n\r\n    private updateMVPMatrix(): void {\r\n        const zNear = 0.1;\r\n        const zFar = 50.0;\r\n        const aspectRatio = Page.Canvas.getAspectRatio();\r\n\r\n        if (Parameters.projection === EProjection.PERSPECTIVE) {\r\n            mat4.perspective(this.pMatrix, 45, aspectRatio, zNear, zFar);\r\n        } else {\r\n            const distance = 0.5 * this.camera.distance;\r\n            mat4.ortho(this.pMatrix, -distance * aspectRatio, distance * aspectRatio, -distance, distance, zNear, zFar);\r\n        }\r\n\r\n        mat4.multiply(this.mvpMatrix, this.pMatrix, this.camera.viewMatrix);\r\n    }\r\n\r\n    private computeInjectedInstructions(): { [name: string]: string } {\r\n        const facetsDefinitionInstructions: string[] = [];\r\n        const computeEntryPointInstructions: string[] = [];\r\n        const checkIfInsideInstructions: string[] = [];\r\n        const computeInternalIntersectionInstructions: string[] = [];\r\n        for (let i = 0; i < this.gemstone.facets.length; i++) {\r\n            const facet = this.gemstone.facets[i];\r\n            const facetPointName = `FACET_${i}_POINT`;\r\n            const facetNormalName = `FACET_${i}_NORMAL`;\r\n\r\n            facetsDefinitionInstructions.push(`const vec3 ${facetPointName} = vec3(${facet.point.x},${facet.point.y},${facet.point.z});`);\r\n            facetsDefinitionInstructions.push(`const vec3 ${facetNormalName} = vec3(${facet.normal.x},${facet.normal.y},${facet.normal.z});`);\r\n\r\n            computeEntryPointInstructions.push(`computeIntersectionWithPlane(${facetPointName}, ${facetNormalName}, eyePosition, fromEyeNormalized, theta, facetNormal);`);\r\n            checkIfInsideInstructions.push(`isInside(${facetPointName}, ${facetNormalName}, entryPoint)`);\r\n\r\n            computeInternalIntersectionInstructions.push(`checkNextInternalIntersection(${facetPointName}, ${facetNormalName}, position, direction, theta, facetNormal);`);\r\n        }\r\n\r\n        return {\r\n            FACETS_DEFINITION: facetsDefinitionInstructions.join(\"\\n\"),\r\n            COMPUTE_ENTRY_POINT: computeEntryPointInstructions.join(\"\\n\\t\"),\r\n            CHECK_IF_INSIDE: checkIfInsideInstructions.join(\" && \"),\r\n            COMPUTE_INTERNAL_INTERSECTION: computeInternalIntersectionInstructions.join(\"\\n\\t\"),\r\n            RAY_DEPTH: Parameters.rayDepth.toString(),\r\n        };\r\n    }\r\n}\r\n\r\nexport { Drawer };\r\n","import \"./page-interface-generated\";\r\n\r\n\r\nlet framesSinceLastFPSUpdate = 0;\r\nlet timeOfLastFPSUpdate = performance.now();\r\n\r\nsetInterval(() => {\r\n    const now = performance.now();\r\n    const fps = 1000 * framesSinceLastFPSUpdate / (now - timeOfLastFPSUpdate);\r\n    timeOfLastFPSUpdate = now;\r\n    framesSinceLastFPSUpdate = 0;\r\n\r\n    Page.Canvas.setIndicatorText(\"fps-indicator\", Math.round(fps).toString());\r\n}, 500);\r\n\r\nfunction registerFrame(): void {\r\n    framesSinceLastFPSUpdate++;\r\n}\r\n\r\nexport { registerFrame };\r\n","import { computeIntersection, computePlaneFromTriangle, computeTriangleNormal, cylindric, IOrientedPlane, IPoint, isInPlane, isInsideVolume, ITriangle, rotateZ } from \"./geometry\";\r\nimport { Parameters } from \"./parameters\";\r\n\r\nimport { Cuts } from \"./cuts\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\n\r\nfunction logParsingInfo(message: string): void {\r\n    if (Parameters.verbose) {\r\n        console.log(`OBJ parsing:  ${message}`);\r\n    }\r\n}\r\n\r\nconst knownGemstones: {\r\n    [name: string]: Gemstone | null; // null when requested but not loaded yet\r\n} = {};\r\n\r\nclass Gemstone {\r\n    public static loadGemstone(name: string): Gemstone {\r\n        if (name === \"CUSTOM CUT\") {\r\n            return Gemstone.customCut();\r\n        } else if (typeof knownGemstones[name] === \"undefined\") {\r\n            const objString = Cuts[name];\r\n            if (!objString) {\r\n                throw new Error(`Unknown cut name \"${name}\".`);\r\n            }\r\n            knownGemstones[name] = Gemstone.fromObj(objString);\r\n        }\r\n\r\n        const gemStone = knownGemstones[name];\r\n        if (!gemStone) {\r\n            throw new Error(`Unknown gemstone name \"${name}\".`);\r\n        }\r\n        return gemStone;\r\n    }\r\n\r\n    public static fromObj(input: string): Gemstone {\r\n        const lines = input.split(\"\\n\");\r\n\r\n        const vertices: IPoint[] = [];\r\n        const triangles: ITriangle[] = [];\r\n\r\n        for (let i = 0; i < lines.length; i++) {\r\n            const line = lines[i].trim();\r\n            const lineItems = line.split(/\\s+/);\r\n            const command = lineItems[0];\r\n\r\n            if (command === \"v\") { // declare vertex\r\n                if (lineItems.length >= 4) {\r\n                    vertices.push({\r\n                        x: parseFloat(lineItems[1]),\r\n                        y: parseFloat(lineItems[2]),\r\n                        z: parseFloat(lineItems[3]),\r\n                    });\r\n                } else {\r\n                    logParsingInfo(`Ignoring line ${i} because it does not have enough items: '${line}'.`);\r\n                    continue;\r\n                }\r\n            } else if (command === \"f\") { // declare face\r\n                if (lineItems.length >= 4) {\r\n                    // faces with more that 3 vertices are interpreted as TRIANGLE_FAN\r\n                    for (let iV = 3; iV < lineItems.length; iV++) {\r\n                        const indices: number[] = [\r\n                            +(lineItems[1].split(\"/\")[0]),\r\n                            +(lineItems[iV - 1].split(\"/\")[0]),\r\n                            +(lineItems[iV].split(\"/\")[0]),\r\n                        ];\r\n\r\n                        for (const indice of indices) {\r\n                            if (indice < 1 || indice >= vertices.length) {\r\n                                logParsingInfo(`Ignoring line ${i} because vertex index ${indice} is out of range: '${line}'.`);\r\n                                continue;\r\n                            }\r\n                        }\r\n\r\n                        triangles.push({\r\n                            p1: vertices[indices[0] - 1],\r\n                            p2: vertices[indices[1] - 1],\r\n                            p3: vertices[indices[2] - 1],\r\n                        });\r\n                    }\r\n                } else {\r\n                    logParsingInfo(`Ignoring line ${i} because only triangular faces are supported: '${line}'.`);\r\n                    continue;\r\n                }\r\n            } else {\r\n                logParsingInfo(`Ignoring line ${i}: '${line}'.`);\r\n                continue;\r\n            }\r\n        }\r\n\r\n        return new Gemstone(triangles);\r\n    }\r\n\r\n    public static customCut(): Gemstone {\r\n        const triangles = Gemstone.computeBrilliantCut();\r\n        return new Gemstone(triangles);\r\n    }\r\n\r\n    public readonly facets: IOrientedPlane[];\r\n    public readonly bufferData: Float32Array;\r\n    public readonly nbTriangles: number;\r\n    public readonly isConvex: boolean;\r\n\r\n    private constructor(triangles: ITriangle[]) {\r\n        Gemstone.mutualizeTrianglesVertices(triangles);\r\n\r\n        this.nbTriangles = triangles.length;\r\n        this.bufferData = Gemstone.buildBufferFromTriangles(triangles);\r\n        this.facets = Gemstone.buildFacetsFromTriangles(triangles);\r\n\r\n        const vertices: IPoint[] = [];\r\n        for (const triangle of triangles) {\r\n            vertices.push(triangle.p1);\r\n            vertices.push(triangle.p2);\r\n            vertices.push(triangle.p3);\r\n        }\r\n        this.isConvex = Gemstone.checkConvexity(vertices, this.facets);\r\n\r\n        if (!this.isConvex) {\r\n            console.log(\"This shape is not convex :(.\");\r\n        }\r\n    }\r\n\r\n    // private static exportAsObj(triangles: ITriangle[]): string {\r\n    //     const verticesDeclarations: string[] = [];\r\n    //     const facesDeclarations: string[] = [];\r\n\r\n    //     const verticesOrdered: IPoint[] = [];\r\n    //     for (const triangle of triangles) {\r\n    //         let indexOf1 = verticesOrdered.indexOf(triangle.p1);\r\n    //         let indexOf2 = verticesOrdered.indexOf(triangle.p2);\r\n    //         let indexOf3 = verticesOrdered.indexOf(triangle.p3);\r\n\r\n    //         if (indexOf1 < 0) {\r\n    //             indexOf1 = verticesOrdered.length;\r\n    //             verticesOrdered.push(triangle.p1);\r\n    //         }\r\n    //         if (indexOf2 < 0) {\r\n    //             indexOf2 = verticesOrdered.length;\r\n    //             verticesOrdered.push(triangle.p2);\r\n    //         }\r\n    //         if (indexOf3 < 0) {\r\n    //             indexOf3 = verticesOrdered.length;\r\n    //             verticesOrdered.push(triangle.p3);\r\n    //         }\r\n\r\n    //         facesDeclarations.push(`f ${indexOf1 + 1} ${indexOf2 + 1} ${indexOf3 + 1}`);\r\n    //     }\r\n\r\n    //     for (const vertice of verticesOrdered) {\r\n    //         verticesDeclarations.push(`v ${vertice.x} ${vertice.y} ${vertice.z}`);\r\n    //     }\r\n\r\n    //     return `${verticesDeclarations.join(\"\\n\")}\\n\\n${facesDeclarations.join(\"\\n\")}`;\r\n    // }\r\n\r\n    private static buildBufferFromTriangles(triangles: ITriangle[]): Float32Array {\r\n        const nbFloatsPerTriangle = (3 + 3) * 3;\r\n        const bufferData = new Float32Array(nbFloatsPerTriangle * triangles.length);\r\n        let i = 0;\r\n        for (const triangle of triangles) {\r\n            const normal = computeTriangleNormal(triangle);\r\n\r\n            bufferData[i++] = triangle.p1.x;\r\n            bufferData[i++] = triangle.p1.y;\r\n            bufferData[i++] = triangle.p1.z;\r\n            bufferData[i++] = normal.x;\r\n            bufferData[i++] = normal.y;\r\n            bufferData[i++] = normal.z;\r\n            bufferData[i++] = triangle.p2.x;\r\n            bufferData[i++] = triangle.p2.y;\r\n            bufferData[i++] = triangle.p2.z;\r\n            bufferData[i++] = normal.x;\r\n            bufferData[i++] = normal.y;\r\n            bufferData[i++] = normal.z;\r\n            bufferData[i++] = triangle.p3.x;\r\n            bufferData[i++] = triangle.p3.y;\r\n            bufferData[i++] = triangle.p3.z;\r\n            bufferData[i++] = normal.x;\r\n            bufferData[i++] = normal.y;\r\n            bufferData[i++] = normal.z;\r\n        }\r\n        return bufferData;\r\n    }\r\n\r\n    private static buildFacetsFromTriangles(triangles: ITriangle[]): IOrientedPlane[] {\r\n        const result: IOrientedPlane[] = [];\r\n        for (const triangle of triangles) {\r\n            let knownFacet = false;\r\n\r\n            for (const registeredPlane of result) {\r\n                if (isInPlane(registeredPlane, triangle.p1) && isInPlane(registeredPlane, triangle.p2) && isInPlane(registeredPlane, triangle.p3)) {\r\n                    knownFacet = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!knownFacet) {\r\n                result.push(computePlaneFromTriangle(triangle));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private static checkConvexity(vertices: IPoint[], facets: IOrientedPlane[]): boolean {\r\n        for (const vertice of vertices) {\r\n            if (!isInsideVolume(facets, vertice)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private static computeBrilliantCut(): ITriangle[] {\r\n        const CROWN_SIZE = 1;\r\n        const HALF_CROWN_SIZE = 0.5 * CROWN_SIZE;\r\n        const PAVILION_HEIGHT = Parameters.customCutPavillionHeight;\r\n        const PAVILION_STEP = Parameters.customCutPavillionRati;\r\n        const GIRDLE_THICKNESS = Parameters.customCutGirdleThickness;\r\n        const GIRDLE_ROUNDNESS = Parameters.customCutGirdleRoundess;\r\n        const CROWN_DEPTH = Parameters.customCutCrownHeight;\r\n        const CROWN_RATIO = Parameters.customCutCrownRatio;\r\n        const TABLE_SIZE = Parameters.customCutCrownTable;\r\n        const CROWN_HEIGHT = GIRDLE_THICKNESS + CROWN_DEPTH;\r\n\r\n        const vertex0: IPoint = { x: 0, y: 0, z: -PAVILION_HEIGHT };\r\n\r\n        const vertex1: IPoint = cylindric((1 - PAVILION_STEP) * HALF_CROWN_SIZE / Math.cos(2 * Math.PI / 16), 2 * Math.PI / 8, -PAVILION_HEIGHT * PAVILION_STEP);\r\n        const vertex2: IPoint = rotateZ(vertex1, -2 * Math.PI / 8);\r\n        const vertex3: IPoint = cylindric(HALF_CROWN_SIZE, 2 * 2 * Math.PI / 16, 0);\r\n        const vertex4: IPoint = cylindric(HALF_CROWN_SIZE, 1 * 2 * Math.PI / 16, 0);\r\n        const vertex5: IPoint = cylindric(HALF_CROWN_SIZE, 0 * 2 * Math.PI / 16, 0);\r\n\r\n        const vertex6: IPoint = { x: vertex3.x, y: vertex3.y, z: GIRDLE_THICKNESS };\r\n        const vertex7: IPoint = { x: vertex4.x, y: vertex4.y, z: GIRDLE_THICKNESS };\r\n        const vertex8: IPoint = { x: vertex5.x, y: vertex5.y, z: GIRDLE_THICKNESS };\r\n\r\n        const vertex9: IPoint = cylindric(0.5 * ((1 - CROWN_RATIO) * CROWN_SIZE + CROWN_RATIO * TABLE_SIZE) / Math.cos(2 * Math.PI / 16), 2 * Math.PI / 8, GIRDLE_THICKNESS + CROWN_RATIO * CROWN_DEPTH);\r\n        const vertex10: IPoint = rotateZ(vertex9, -2 * Math.PI / 8);\r\n        const vertex11: IPoint = cylindric(0.5 * TABLE_SIZE, 1 * 2 * Math.PI / 16, CROWN_HEIGHT);\r\n        const vertex12: IPoint = cylindric(0.5 * TABLE_SIZE, -1 * 2 * Math.PI / 16, CROWN_HEIGHT);\r\n        const vertex13: IPoint = { x: 0, y: 0, z: CROWN_HEIGHT };\r\n\r\n        const lowerFacet1 = computePlaneFromTriangle({ p1: vertex2, p3: vertex5, p2: vertex4 });\r\n        const lowerFacet2 = computePlaneFromTriangle({ p1: vertex1, p3: vertex4, p2: vertex3 });\r\n\r\n        const higherFacet1 = computePlaneFromTriangle({ p1: vertex7, p3: vertex8, p2: vertex10 });\r\n        const higherFacet2 = computePlaneFromTriangle({ p1: vertex6, p3: vertex7, p2: vertex9 });\r\n\r\n        // compute one eighth\r\n        const triangles: ITriangle[] = [];\r\n\r\n        for (let iSide = 0; iSide < 2; iSide++) {\r\n            const lowerFacet = (iSide === 0) ? lowerFacet1 : lowerFacet2;\r\n            const higherFacet = (iSide === 0) ? higherFacet1 : higherFacet2;\r\n            const lowerBaseVertex = (iSide === 0) ? vertex2 : vertex1;\r\n            const upperBaseVertex = (iSide === 0) ? vertex10 : vertex9;\r\n\r\n            const nbPoints = GIRDLE_ROUNDNESS + 2;\r\n            const deltaAngle = 2 * Math.PI / 16 / (nbPoints - 1);\r\n            const sideBaseAngle = iSide * 2 * Math.PI / 16;\r\n            for (let iP = 0; iP < nbPoints - 1; iP++) {\r\n                const angle = sideBaseAngle + iP * deltaAngle;\r\n\r\n                const lowerN = computeIntersection(cylindric(HALF_CROWN_SIZE, angle, 0), { x: 0, y: 0, z: 1 }, lowerFacet);\r\n                const lowerNplus = computeIntersection(cylindric(HALF_CROWN_SIZE, angle + deltaAngle, 0), { x: 0, y: 0, z: 1 }, lowerFacet);\r\n\r\n                const upperN = computeIntersection(cylindric(HALF_CROWN_SIZE, angle, 0), { x: 0, y: 0, z: 1 }, higherFacet);\r\n                const upperNplus = computeIntersection(cylindric(HALF_CROWN_SIZE, angle + deltaAngle, 0), { x: 0, y: 0, z: 1 }, higherFacet);\r\n\r\n                triangles.push({ p1: lowerBaseVertex, p3: lowerN, p2: lowerNplus });\r\n                triangles.push({ p1: lowerNplus, p3: lowerN, p2: upperN });\r\n                triangles.push({ p1: lowerNplus, p3: upperN, p2: upperNplus });\r\n                triangles.push({ p1: upperBaseVertex, p3: upperNplus, p2: upperN });\r\n            }\r\n        }\r\n\r\n\r\n        // PAVILION\r\n        triangles.push({ p1: vertex0, p3: vertex2, p2: vertex4 });\r\n        triangles.push({ p1: vertex0, p3: vertex4, p2: vertex1 });\r\n\r\n        // CROWN\r\n        triangles.push({ p1: vertex11, p3: vertex12, p2: vertex13 });\r\n        triangles.push({ p1: vertex11, p3: vertex10, p2: vertex12 });\r\n        triangles.push({ p1: vertex7, p3: vertex10, p2: vertex11 });\r\n        triangles.push({ p1: vertex7, p3: vertex11, p2: vertex9 });\r\n\r\n        // apply symetry\r\n        const nbTrianglesForOneEighth = triangles.length;\r\n        for (let i = 1; i < 8; i++) {\r\n            for (let iT = 0; iT < nbTrianglesForOneEighth; iT++) {\r\n                triangles.push({\r\n                    p1: rotateZ(triangles[iT].p1, i * 2 * Math.PI / 8),\r\n                    p2: rotateZ(triangles[iT].p2, i * 2 * Math.PI / 8),\r\n                    p3: rotateZ(triangles[iT].p3, i * 2 * Math.PI / 8),\r\n                });\r\n            }\r\n        }\r\n\r\n        return triangles;\r\n    }\r\n\r\n    private static mutualizeTrianglesVertices(triangles: ITriangle[]): void {\r\n        let nbPointsSaved = 0;\r\n\r\n        const knownVerticesStore: { [hash: string]: IPoint } = {};\r\n\r\n        const precision = Math.pow(10, 8);\r\n        function round(x: number): number {\r\n            return Math.round(precision * x);\r\n        }\r\n\r\n        function getSimilarVerticeFromStore(point: IPoint): IPoint {\r\n            const hash = `${round(point.x)}_${round(point.y)}_${round(point.z)}`;\r\n            if (typeof knownVerticesStore[hash] === \"undefined\") {\r\n                knownVerticesStore[hash] = point;\r\n            } else {\r\n                nbPointsSaved++;\r\n            }\r\n            return knownVerticesStore[hash];\r\n        }\r\n\r\n        for (const triangle of triangles) {\r\n            triangle.p1 = getSimilarVerticeFromStore(triangle.p1);\r\n            triangle.p2 = getSimilarVerticeFromStore(triangle.p2);\r\n            triangle.p3 = getSimilarVerticeFromStore(triangle.p3);\r\n        }\r\n\r\n        logParsingInfo(`After mutualization: ${Object.keys(knownVerticesStore).length} vertices (saved ${nbPointsSaved} vertices).`);\r\n    }\r\n}\r\n\r\nexport { Gemstone };\r\n\r\n","interface IPoint {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n}\r\n\r\ninterface IVector {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n}\r\n\r\ninterface IOrientedPlane {\r\n    point: IPoint;\r\n    normal: IVector;\r\n}\r\n\r\ninterface ITriangle {\r\n    p1: IPoint;\r\n    p2: IPoint;\r\n    p3: IPoint;\r\n}\r\n\r\nfunction computeTriangleNormal(triangle: ITriangle): IVector {\r\n    const v12 = substraction(triangle.p2, triangle.p1);\r\n    const v13 = substraction(triangle.p3, triangle.p1);\r\n    const normal = crossProduct(v12, v13);\r\n    normalize(normal);\r\n    return normal;\r\n}\r\n\r\nfunction dotProduct(v1: IVector, v2: IVector): number {\r\n    return v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;\r\n}\r\n\r\nfunction crossProduct(v1: IVector, v2: IVector): IVector {\r\n    return {\r\n        x: v1.y * v2.z - v1.z * v2.y,\r\n        y: v1.z * v2.x - v1.x * v2.z,\r\n        z: v1.x * v2.y - v1.y * v2.x,\r\n    };\r\n}\r\n\r\nfunction substraction(v1: IPoint, v2: IPoint): IVector {\r\n    return {\r\n        x: v1.x - v2.x,\r\n        y: v1.y - v2.y,\r\n        z: v1.z - v2.z,\r\n    };\r\n}\r\n\r\nfunction normalize(v: IVector): void {\r\n    const length = Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z);\r\n    if (length > 0) {\r\n        v.x /= length;\r\n        v.y /= length;\r\n        v.z /= length;\r\n    } else {\r\n        v.x = 1;\r\n        v.y = 0;\r\n        v.z = 0;\r\n    }\r\n}\r\n\r\nfunction averagePoint(...points: IPoint[]): IPoint {\r\n    const result: IPoint = { x: 0, y: 0, z: 0 };\r\n    for (const point of points) {\r\n        result.x += point.x;\r\n        result.y += point.y;\r\n        result.z += point.z;\r\n    }\r\n    const nbPoints = points.length;\r\n    result.x /= nbPoints;\r\n    result.y /= nbPoints;\r\n    result.z /= nbPoints;\r\n    return result;\r\n}\r\n\r\nfunction isInPlane(plane: IOrientedPlane, point: IPoint): boolean {\r\n    const localCoords = substraction(point, plane.point);\r\n    return Math.abs(dotProduct(plane.normal, localCoords)) < 0.001;\r\n}\r\n\r\nfunction isInsideVolume(planes: IOrientedPlane[], point: IPoint): boolean {\r\n    for (const plane of planes) {\r\n        const localCoords = substraction(point, plane.point);\r\n        if (dotProduct(plane.normal, localCoords) > 0.001) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction rotateZ(point: IPoint, angle: number): IPoint {\r\n    const cos = Math.cos(angle);\r\n    const sin = Math.sin(angle);\r\n    return {\r\n        x: cos * point.x - sin * point.y,\r\n        y: sin * point.x + cos * point.y,\r\n        z: point.z,\r\n    };\r\n}\r\n\r\nfunction cylindric(radius: number, angle: number, z: number): IPoint {\r\n    return {\r\n        x: radius * Math.cos(angle),\r\n        y: radius * Math.sin(angle),\r\n        z,\r\n    };\r\n}\r\n\r\nfunction computeIntersection(point: IPoint, direction: IVector, plane: IOrientedPlane): IPoint {\r\n    const b = dotProduct(direction, plane.normal);\r\n    if (b !== 0) {\r\n        const a = dotProduct(substraction(plane.point, point), plane.normal);\r\n        const theta = a / b;\r\n        return {\r\n            x: point.x + theta * direction.x,\r\n            y: point.y + theta * direction.y,\r\n            z: point.z + theta * direction.z,\r\n        };\r\n    } else {\r\n        return point;\r\n    }\r\n}\r\n\r\nfunction computePlaneFromTriangle(triangle: ITriangle): IOrientedPlane {\r\n    return {\r\n        point: averagePoint(triangle.p1, triangle.p2, triangle.p3),\r\n        normal: computeTriangleNormal(triangle),\r\n    };\r\n}\r\n\r\nexport {\r\n    averagePoint,\r\n    computeIntersection,\r\n    computePlaneFromTriangle,\r\n    computeTriangleNormal,\r\n    cylindric,\r\n    isInPlane,\r\n    isInsideVolume,\r\n    rotateZ,\r\n    IOrientedPlane,\r\n    IPoint,\r\n    IVector,\r\n    ITriangle,\r\n};\r\n","import \"../page-interface-generated\";\r\n\r\nlet gl: WebGLRenderingContext = null;\r\n\r\n/** Initializes a WebGL context */\r\nfunction initGL(flags?: object): boolean {\r\n    function setError(message: string): void {\r\n        Page.Demopage.setErrorMessage(\"webgl-support\", message);\r\n    }\r\n\r\n    const canvas = Page.Canvas.getCanvas();\r\n\r\n    gl = canvas.getContext(\"webgl\", flags) as WebGLRenderingContext;\r\n    if (gl == null) {\r\n        gl = canvas.getContext(\"experimental-webgl\", flags) as WebGLRenderingContext;\r\n        if (gl == null) {\r\n            setError(\"Your browser or device does not seem to support WebGL.\");\r\n            return false;\r\n        }\r\n\r\n        setError(`Your browser or device only supports experimental WebGL.\r\nThe simulation may not run as expected.`);\r\n    }\r\n\r\n    gl.disable(gl.CULL_FACE);\r\n    gl.disable(gl.DEPTH_TEST);\r\n    gl.disable(gl.BLEND);\r\n    gl.clearColor(0, 0, 0, 1);\r\n\r\n    return true;\r\n}\r\n\r\n/* Adjusts the GL canvas size to the actual canvas element size on the page */\r\nfunction adjustSize(hidpi: boolean = false): void {\r\n    const cssPixel: number = (hidpi) ? window.devicePixelRatio : 1;\r\n\r\n    const canvas = gl.canvas as HTMLCanvasElement;\r\n\r\n    const width: number = Math.floor(canvas.clientWidth * cssPixel);\r\n    const height: number = Math.floor(canvas.clientHeight * cssPixel);\r\n    if (canvas.width !== width || canvas.height !== height) {\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n    }\r\n}\r\n\r\nexport {\r\n    adjustSize,\r\n    initGL,\r\n    gl,\r\n};\r\n","abstract class GLResource {\r\n    private _gl: WebGLRenderingContext;\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this._gl = gl;\r\n    }\r\n\r\n    public gl(): WebGLRenderingContext {\r\n        return this._gl;\r\n    }\r\n\r\n    public abstract freeGLResources(): void;\r\n}\r\n\r\nexport { GLResource };\r\n","import { gl } from \"./gl-canvas\";\r\nimport { Shader } from \"./shader\";\r\n\r\ntype RegisterCallback = (success: boolean, shader: Shader | null) => void;\r\n\r\ninterface IShaderInfos {\r\n    fragmentSource: string;\r\n    vertexSource: string;\r\n    injected: { [id: string]: string };\r\n}\r\n\r\ninterface ICachedShader {\r\n    shader: Shader | null;\r\n    infos: IShaderInfos;\r\n    failed: boolean;\r\n    callbacks: RegisterCallback[];\r\n}\r\n\r\nconst cachedShaders: { [id: string]: ICachedShader } = {};\r\n\r\nfunction getShader(name: string): Shader | null {\r\n    return cachedShaders[name].shader;\r\n}\r\n\r\nfunction buildShader(infos: IShaderInfos): Shader {\r\n    function processSource(source: string): string {\r\n        return source.replace(/#INJECT\\(([^)]*)\\)/mg, (match: string, name: string) => {\r\n            if (infos.injected[name]) {\r\n                return infos.injected[name];\r\n            }\r\n            return match;\r\n        });\r\n    }\r\n\r\n    const processedVert = processSource(infos.vertexSource);\r\n    const processedFrag = processSource(infos.fragmentSource);\r\n    return new Shader(gl, processedVert, processedFrag);\r\n}\r\n\r\nfunction deleteShader(name: string): void {\r\n    if (typeof cachedShaders[name] !== \"undefined\") {\r\n        const shader = cachedShaders[name].shader;\r\n        if (shader !== null) {\r\n            shader.freeGLResources();\r\n        }\r\n        delete cachedShaders[name];\r\n    }\r\n}\r\n\r\nexport {\r\n    buildShader,\r\n    getShader,\r\n    IShaderInfos,\r\n    deleteShader,\r\n};\r\n","/// <reference types=\"../types\"/>\r\n\r\nimport PostProcessingBlurFrag from \"../../shaders/post-processing/blur.frag\";\r\nimport PostProcessingCompositingFrag from \"../../shaders/post-processing/compositing.frag\";\r\nimport PostProcessingDownsizingFrag from \"../../shaders/post-processing/downsizing.frag\";\r\nimport PostProcessingFullscreenVert from \"../../shaders/post-processing/fullscreen.vert\";\r\n\r\nimport NormalsFrag from \"../../shaders/normals.frag\";\r\nimport RaytracedVolumeFrag from \"../../shaders/raytracedVolume.frag\";\r\nimport RaytracedVolumeVert from \"../../shaders/raytracedVolume.vert\";\r\nimport ShaderRawFrag from \"../../shaders/shader.frag\";\r\nimport ShaderVert from \"../../shaders/shader.vert\";\r\nimport ShaderMulticolorRawFrag from \"../../shaders/shader-multicolor.frag\";\r\nimport SkyboxRawFrag from \"../../shaders/skybox.frag\";\r\nimport SkyboxVert from \"../../shaders/skybox.vert\";\r\nimport SkyboxPartialFrag from \"../../shaders/_skybox.frag\";\r\n\r\nconst skyboxFrag = SkyboxRawFrag.replace(\"#include \\\"_skybox.frag\\\"\", SkyboxPartialFrag);\r\nconst shaderFrag = ShaderRawFrag.replace(\"#include \\\"_skybox.frag\\\"\", SkyboxPartialFrag);\r\nconst shaderMulticolorFrag = ShaderMulticolorRawFrag.replace(\"#include \\\"_skybox.frag\\\"\", SkyboxPartialFrag);\r\n\r\nexport {\r\n    PostProcessingBlurFrag,\r\n    PostProcessingCompositingFrag,\r\n    PostProcessingDownsizingFrag,\r\n    PostProcessingFullscreenVert,\r\n\r\n    NormalsFrag,\r\n    RaytracedVolumeFrag,\r\n    RaytracedVolumeVert,\r\n    shaderMulticolorFrag as ShaderMulticolorFrag,\r\n    shaderFrag as ShaderFrag,\r\n    ShaderVert,\r\n\r\n    skyboxFrag as SkyboxFrag,\r\n    SkyboxVert,\r\n};\r\n\r\n","import { GLResource } from \"./gl-resource\";\r\nimport { VBO } from \"./vbo\";\r\n\r\nfunction notImplemented(): void {\r\n    alert(\"NOT IMPLEMENTED YET\");\r\n}\r\n\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1fv(location, value);\r\n    } else {\r\n        gl.uniform1f(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformFloat2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4fv(location, value);\r\n}\r\n\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1iv(location, value);\r\n    } else {\r\n        gl.uniform1i(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformInt2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: boolean | number): void {\r\n    gl.uniform1i(location, +value);\r\n}\r\n\r\nfunction bindUniformBool2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformFloatMat2(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix2fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat3(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix3fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat4(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix4fv(location, false, value);\r\n}\r\n\r\nfunction bindSampler2D(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n    value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture((gl as any)[\"TEXTURE\" + unitNb] as number);\r\n    gl.bindTexture(gl.TEXTURE_2D, value);\r\n}\r\n\r\nfunction bindSamplerCube(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n    value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture((gl as any)[\"TEXTURE\" + unitNb] as number);\r\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, value);\r\n}\r\n\r\n/* From WebGL spec:\r\n* http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14 */\r\ninterface IBindingType {\r\n    str: string;\r\n    binder: (...args: any[]) => unknown;\r\n}\r\nconst types: { [index: string]: IBindingType } = {\r\n    0x8B50: { str: \"FLOAT_VEC2\", binder: bindUniformFloat2v },\r\n    0x8B51: { str: \"FLOAT_VEC3\", binder: bindUniformFloat3v },\r\n    0x8B52: { str: \"FLOAT_VEC4\", binder: bindUniformFloat4v },\r\n    0x8B53: { str: \"INT_VEC2\", binder: bindUniformInt2v },\r\n    0x8B54: { str: \"INT_VEC3\", binder: bindUniformInt3v },\r\n    0x8B55: { str: \"INT_VEC4\", binder: bindUniformInt4v },\r\n    0x8B56: { str: \"BOOL\", binder: bindUniformBool },\r\n    0x8B57: { str: \"BOOL_VEC2\", binder: bindUniformBool2v },\r\n    0x8B58: { str: \"BOOL_VEC3\", binder: bindUniformBool3v },\r\n    0x8B59: { str: \"BOOL_VEC4\", binder: bindUniformBool4v },\r\n    0x8B5A: { str: \"FLOAT_MAT2\", binder: bindUniformFloatMat2 },\r\n    0x8B5B: { str: \"FLOAT_MAT3\", binder: bindUniformFloatMat3 },\r\n    0x8B5C: { str: \"FLOAT_MAT4\", binder: bindUniformFloatMat4 },\r\n    0x8B5E: { str: \"SAMPLER_2D\", binder: bindSampler2D },\r\n    0x8B60: { str: \"SAMPLER_CUBE\", binder: bindSamplerCube },\r\n    0x1400: { str: \"BYTE\", binder: notImplemented },\r\n    0x1401: { str: \"UNSIGNED_BYTE\", binder: notImplemented },\r\n    0x1402: { str: \"SHORT\", binder: notImplemented },\r\n    0x1403: { str: \"UNSIGNED_SHORT\", binder: notImplemented },\r\n    0x1404: { str: \"INT\", binder: bindUniformInt },\r\n    0x1405: { str: \"UNSIGNED_INT\", binder: notImplemented },\r\n    0x1406: { str: \"FLOAT\", binder: bindUniformFloat },\r\n};\r\n\r\ninterface IShaderUniform {\r\n    value: boolean | boolean[] | number | number[] | WebGLTexture | WebGLTexture[];\r\n    loc: WebGLUniformLocation;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\ninterface IShaderAttribute {\r\n    VBO: VBO;\r\n    loc: GLint;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\nclass ShaderProgram extends GLResource {\r\n    public u: { [name: string]: IShaderUniform };\r\n    public a: { [name: string]: IShaderAttribute };\r\n\r\n    private id: WebGLProgram;\r\n    private uCount: number;\r\n    private aCount: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string) {\r\n        function createShader(type: GLenum, source: string): WebGLShader {\r\n            const shader = gl.createShader(type);\r\n            gl.shaderSource(shader, source);\r\n            gl.compileShader(shader);\r\n\r\n            const compileSuccess = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n            if (!compileSuccess) {\r\n                console.error(gl.getShaderInfoLog(shader));\r\n                console.log(source);\r\n                gl.deleteShader(shader);\r\n                return null;\r\n            }\r\n\r\n            return shader;\r\n        }\r\n\r\n        super(gl);\r\n\r\n        this.id = null;\r\n        this.uCount = 0;\r\n        this.aCount = 0;\r\n\r\n        const vertexShader = createShader(gl.VERTEX_SHADER, vertexSource);\r\n        const fragmentShader = createShader(gl.FRAGMENT_SHADER, fragmentSource);\r\n\r\n        const id = gl.createProgram();\r\n        gl.attachShader(id, vertexShader);\r\n        gl.attachShader(id, fragmentShader);\r\n        gl.linkProgram(id);\r\n\r\n        const linkSuccess = gl.getProgramParameter(id, gl.LINK_STATUS);\r\n        if (!linkSuccess) {\r\n            console.error(gl.getProgramInfoLog(id));\r\n            gl.deleteProgram(id);\r\n        } else {\r\n            this.id = id;\r\n\r\n            this.introspection();\r\n        }\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        super.gl().deleteProgram(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public use(): void {\r\n        super.gl().useProgram(this.id);\r\n    }\r\n\r\n    public bindUniforms(): void {\r\n        const gl: WebGLRenderingContext = super.gl();\r\n        let currTextureUnitNb: number = 0;\r\n\r\n        Object.keys(this.u).forEach((uName: string) => {\r\n            const uniform = this.u[uName];\r\n            if (uniform.value !== null) {\r\n                if (uniform.type === 0x8B5E || uniform.type === 0x8B60) {\r\n                    const unitNb: number = currTextureUnitNb;\r\n                    types[uniform.type].binder(gl, uniform.loc, unitNb, uniform.value);\r\n                    currTextureUnitNb++;\r\n                } else {\r\n                    types[uniform.type].binder(gl, uniform.loc, uniform.value);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindAttributes(): void {\r\n        Object.keys(this.a).forEach((aName: string) => {\r\n            const attribute = this.a[aName];\r\n            if (attribute.VBO !== null) {\r\n                attribute.VBO.bind(attribute.loc);\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindUniformsAndAttributes(): void {\r\n        this.bindUniforms();\r\n        this.bindAttributes();\r\n    }\r\n\r\n    private introspection(): void {\r\n        const gl = super.gl();\r\n\r\n        this.uCount = gl.getProgramParameter(this.id, gl.ACTIVE_UNIFORMS);\r\n        this.u = {};\r\n        for (let i = 0; i < this.uCount; i++) {\r\n            const uniform = gl.getActiveUniform(this.id, i);\r\n            const name = uniform.name;\r\n\r\n            this.u[name] = {\r\n                loc: gl.getUniformLocation(this.id, name),\r\n                size: uniform.size,\r\n                type: uniform.type,\r\n                value: null,\r\n            };\r\n        }\r\n\r\n        this.aCount = gl.getProgramParameter(this.id, gl.ACTIVE_ATTRIBUTES);\r\n        this.a = {};\r\n        for (let i = 0; i < this.aCount; i++) {\r\n            const attribute = gl.getActiveAttrib(this.id, i);\r\n            const name = attribute.name;\r\n\r\n            this.a[name] = {\r\n                VBO: null,\r\n                loc: gl.getAttribLocation(this.id, name),\r\n                size: attribute.size,\r\n                type: attribute.type,\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport { ShaderProgram as Shader };\r\n","import { GLResource } from \"./gl-resource\";\r\n\r\nenum Usage {\r\n    DYNAMIC,\r\n    STATIC,\r\n}\r\n\r\nclass VBO extends GLResource {\r\n    public static createQuad(gl: WebGLRenderingContext, minX: number, minY: number, maxX: number, maxY: number): VBO {\r\n        const vert = [\r\n            minX, minY,\r\n            maxX, minY,\r\n            minX, maxY,\r\n            maxX, maxY,\r\n        ];\r\n\r\n        return new VBO(gl, new Float32Array(vert), 2, gl.FLOAT, true);\r\n    }\r\n\r\n    private id: WebGLBuffer;\r\n    private size: number;\r\n    private type: GLenum;\r\n    private normalize: GLboolean;\r\n    private stride: GLsizei;\r\n    private offset: GLintptr;\r\n    private usage: Usage;\r\n\r\n    constructor(gl: WebGLRenderingContext, array: any, size: number, type: GLenum, staticUsage: boolean = true) {\r\n        super(gl);\r\n\r\n        this.id = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (staticUsage) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n        this.size = size;\r\n        this.type = type;\r\n        this.normalize = false;\r\n        this.stride = 0;\r\n        this.offset = 0;\r\n        this.usage = (staticUsage) ? Usage.STATIC : Usage.DYNAMIC;\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        this.gl().deleteBuffer(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public bind(location: GLuint): void {\r\n        const gl = super.gl();\r\n        gl.enableVertexAttribArray(location);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        gl.vertexAttribPointer(location, this.size, this.type, this.normalize, this.stride, this.offset);\r\n    }\r\n\r\n    public setData(array: any): void {\r\n        const gl = super.gl();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (this.usage === Usage.STATIC) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    }\r\n}\r\n\r\nexport { VBO };\r\n","class Viewport {\r\n    public static setFullCanvas(gl: WebGLRenderingContext): void {\r\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n    }\r\n\r\n    public lower: number;\r\n    public left: number;\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(left: number, lower: number, width: number, height: number) {\r\n        this.left = left;\r\n        this.lower = lower;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    public set(gl: WebGLRenderingContext): void {\r\n        gl.viewport(this.lower, this.left, this.width, this.height);\r\n    }\r\n}\r\n\r\nexport { Viewport };\r\n","import { Shader } from \"./gl-utils/shader\";\r\nimport * as ShaderManager from \"./gl-utils/shader-manager\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\n\r\nlet shaderIndex = 0;\r\n\r\nclass LazyShader {\r\n    private readonly fragmentShaderSource: string;\r\n    private readonly vertexShaderSource: string;\r\n\r\n    private readonly errorKey: string;\r\n    private readonly errorMessage: string;\r\n\r\n    private _shader: Shader | null = null;\r\n\r\n    private injected: Record<string, string>;\r\n\r\n    public constructor(fragmentShaderSource: string, vertexShaderSource: string, name: string) {\r\n        this.fragmentShaderSource = fragmentShaderSource;\r\n        this.vertexShaderSource = vertexShaderSource;\r\n        this.errorKey = `shader_fail_${shaderIndex++}`;\r\n        this.errorMessage = `Failed to build the shader '${name}'.`;\r\n        this.injected = {};\r\n    }\r\n\r\n    public get shader(): Shader | null {\r\n        if (!this._shader) {\r\n            this.build();\r\n        }\r\n\r\n        return this._shader;\r\n    }\r\n\r\n    public reset(newInjected: Record<string, string>): void {\r\n        this.injected = newInjected;\r\n\r\n        if (this._shader) {\r\n            this._shader.freeGLResources();\r\n            this._shader = null;\r\n        }\r\n    }\r\n\r\n    private build(): void {\r\n        const builtShader = ShaderManager.buildShader({\r\n            fragmentSource: this.fragmentShaderSource,\r\n            vertexSource: this.vertexShaderSource,\r\n            injected: this.injected,\r\n        });\r\n\r\n        if (builtShader !== null) {\r\n            this._shader = builtShader;\r\n        } else {\r\n            Page.Demopage.setErrorMessage(this.errorKey, this.errorMessage);\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    LazyShader,\r\n};\r\n","import * as GLCanvas from \"./gl-utils/gl-canvas\";\r\nimport { gl } from \"./gl-utils/gl-canvas\";\r\nimport { Viewport } from \"./gl-utils/viewport\";\r\n\r\nimport { Drawer } from \"./drawer\";\r\nimport * as FPSIndicator from \"./fps-indicator\";\r\nimport { Gemstone } from \"./gemstone\";\r\nimport { Parameters } from \"./parameters\";\r\nimport { registerPolyfills } from \"./utils\";\r\nimport { PostProcessing } from \"./post-processing\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\n\r\nfunction main(): void {\r\n    registerPolyfills();\r\n\r\n    const webglFlags = {\r\n        alpha: false,\r\n        antialias: false,\r\n        depth: false,\r\n        stencil: false,\r\n        preserveDrawingBuffer: false,\r\n    };\r\n    if (!GLCanvas.initGL(webglFlags)) {\r\n        return;\r\n    }\r\n\r\n    let needToAdjustCanvasSize = true;\r\n    Parameters.addCanvasResizeObservers(() => { needToAdjustCanvasSize = true; });\r\n\r\n    const drawer = new Drawer(gl);\r\n    const postProcessing = new PostProcessing(gl);\r\n\r\n    function loadGemstone(): void {\r\n        const loadedGemstone = Gemstone.loadGemstone(Parameters.cutName);\r\n        drawer.setGemstone(loadedGemstone);\r\n    }\r\n    Parameters.addCutChangeObserver(loadGemstone);\r\n    loadGemstone();\r\n\r\n    let lastLoopUpdate = 0;\r\n    function mainLoop(): void {\r\n        const now = performance.now();\r\n        const dt = performance.now() - lastLoopUpdate;\r\n        lastLoopUpdate = now;\r\n\r\n        FPSIndicator.registerFrame();\r\n\r\n        if (needToAdjustCanvasSize) {\r\n            GLCanvas.adjustSize(Parameters.highDPI);\r\n            Viewport.setFullCanvas(gl);\r\n            needToAdjustCanvasSize = false;\r\n        }\r\n\r\n        if (Parameters.autoRotate && !Page.Canvas.isMouseDown()) {\r\n            drawer.rotate(dt * 0.0001);\r\n        }\r\n\r\n        if (Parameters.displayRaytracedVolume) {\r\n            drawer.drawDebugVolume();\r\n        } else {\r\n            if (Parameters.postProcessing && postProcessing.isReady()) {\r\n                postProcessing.prepare();\r\n                drawer.draw();\r\n                postProcessing.apply();\r\n            } else {\r\n                drawer.draw();\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(mainLoop);\r\n    }\r\n    mainLoop();\r\n}\r\n\r\nmain();\r\n","declare const mat4: any;\r\n\r\nclass OrbitalCamera {\r\n    private _focus: number[];\r\n    private _distance: number;\r\n    private _theta: number;\r\n    private _phi: number;\r\n\r\n    private _eyePos: number[];\r\n    private _viewMatrix: number[];\r\n\r\n    constructor(focusPoint: number[], distance: number) {\r\n        this._focus = focusPoint;\r\n        this._distance = distance;\r\n        this._theta = 0;\r\n        this._phi = 0.01;\r\n\r\n        this._eyePos = [0, 0, 0];\r\n        this._viewMatrix = mat4.create();\r\n        this.recompute();\r\n    }\r\n\r\n    public get focusPoint(): number[] {\r\n        return this._focus;\r\n    }\r\n    public set focusPoint(newFocus: number[]) {\r\n        this._focus = newFocus;\r\n        this.recompute();\r\n    }\r\n\r\n    public get distance(): number {\r\n        return this._distance;\r\n    }\r\n    public set distance(newDistance: number) {\r\n        this._distance = newDistance;\r\n        this.recompute();\r\n    }\r\n\r\n    public get theta(): number {\r\n        return this._theta;\r\n    }\r\n    public set theta(newTheta: number) {\r\n        this._theta = newTheta;\r\n        this.recompute();\r\n    }\r\n\r\n    public get phi(): number {\r\n        return this._phi;\r\n    }\r\n    public set phi(newPhi: number) {\r\n        this._phi = newPhi;\r\n        this.recompute();\r\n    }\r\n\r\n    public get eyePos(): number[] {\r\n        return this._eyePos;\r\n    }\r\n\r\n    public get viewMatrix(): number[] {\r\n        return this._viewMatrix;\r\n    }\r\n\r\n    private recompute(): void {\r\n        const sin = Math.sin;\r\n        const cos = Math.cos;\r\n\r\n        this._eyePos[0] = this.focusPoint[0] + this.distance * (sin(this.phi) * cos(this.theta));\r\n        this._eyePos[1] = this.focusPoint[1] + this.distance * (sin(this.phi) * sin(this.theta));\r\n        this._eyePos[2] = this.focusPoint[2] + this.distance * (cos(this.phi));\r\n\r\n        this._viewMatrix = mat4.lookAt(this._viewMatrix, this.eyePos, this.focusPoint, [0, 0, 1]);\r\n    }\r\n}\r\n\r\nexport { OrbitalCamera };\r\n","import \"./page-interface-generated\";\r\n\r\n\r\n/* === IDs ============================================================ */\r\nconst controlId = {\r\n    CUT_PICKER_ID: \"gem-cut-picker-id\",\r\n    REFRACTION_RANGE_ID: \"refraction-range-id\",\r\n    GEM_COLOR_PICKER: \"gem-color-picker-id\",\r\n    GEM_ABSOPTION_RANGE_ID: \"absorption-range-id\",\r\n    DISPERSION_RANGE_ID: \"dispersion-range-id\",\r\n    RAY_DEPTH_RANGE_ID: \"ray-depth-range-id\",\r\n    REFLECTION: \"reflection-checkbox-id\",\r\n\r\n    DISPLAY_SKYBOX_CHECKBOX_ID: \"display-skybox-checkbox-id\",\r\n    HEAD_SHADOW_RANGE_ID: \"head-shadow-range-id\",\r\n    BACKGROUND_COLOR_PICKER: \"background-color-picker-id\",\r\n    PROJECTION_TABS_ID: \"projection-tabs-id\",\r\n    GEOMETRY_ONLY_CHECKBOX_ID: \"only-normals-checkbox-id\",\r\n    AUTO_ROTATE_CHECKBOX_ID: \"auto-rotate-checkbox-id\",\r\n    POST_PROCESSING_CHECKBOX_ID: \"post-processing-checkbox-id\",\r\n    HIGH_DPI_CHEKBOX_ID: \"high-dpi-checkbox-id\",\r\n\r\n    LIGHT_TYPE_TABS_ID: \"light-type-tabs-id\",\r\n    LIGHT_DIRECTION_TABS_ID: \"light-direction-tabs-id\",\r\n\r\n    DISPLAY_INDICATORS: \"display-indicators-checkbox-id\",\r\n    RAYTRACED_VOLUME: \"raytraced-volume-checkbox-id\",\r\n    DISPLAY_NORMALS: \"display-normals-checkbox-id\",\r\n    VERBOSE: \"verbose-checkbox-id\",\r\n\r\n    CUSTOM_CUT_CROWN_HEIGHT: \"custom-cut-crown-height-range-id\",\r\n    CUSTOM_CUT_CROWN_TABLE: \"custom-cut-crown-table-range-id\",\r\n    CUSTOM_CUT_CROWN_RATIO: \"custom-cut-crown-ratio-range-id\",\r\n    CUSTOM_CUT_GIRDLE_THICKNESS: \"custom-cut-girdle-thickness-range-id\",\r\n    CUSTOM_CUT_GIRDLE_ROUNDNESS: \"custom-cut-girdle-roundness-range-id\",\r\n    CUSTOM_CUT_PAVILLION_HEIGHT: \"custom-cut-pavillion-height-range-id\",\r\n    CUSTOM_CUT_PAVILLION_RATIO: \"custom-cut-pavillion-ratio-range-id\",\r\n};\r\n\r\nenum ELightType {\r\n    ASET = 0,\r\n    RINGS = 1,\r\n    RANDOM = 2,\r\n}\r\n\r\nenum ELightDirection {\r\n    DOWNWARD = \"downward\",\r\n    UPWARD = \"upward\",\r\n}\r\n\r\nenum EProjection {\r\n    PERSPECTIVE = \"perspective\",\r\n    ORTHOGRAPHIC = \"orthographic\",\r\n}\r\n\r\ninterface IRGB {\r\n    r: number;\r\n    g: number;\r\n    b: number;\r\n}\r\n\r\ntype Observer = () => unknown;\r\n\r\nfunction callObservers(observers: Observer[]): void {\r\n    for (const observer of observers) {\r\n        observer();\r\n    }\r\n}\r\n\r\nconst cutChangeObservers: Observer[] = [];\r\nconst callCutChangeObservers = () => { callObservers(cutChangeObservers); };\r\nPage.Picker.addObserver(controlId.CUT_PICKER_ID, callCutChangeObservers);\r\nPage.Range.addLazyObserver(controlId.CUSTOM_CUT_CROWN_HEIGHT, callCutChangeObservers);\r\nPage.Range.addLazyObserver(controlId.CUSTOM_CUT_CROWN_TABLE, callCutChangeObservers);\r\nPage.Range.addLazyObserver(controlId.CUSTOM_CUT_CROWN_RATIO, callCutChangeObservers);\r\nPage.Range.addLazyObserver(controlId.CUSTOM_CUT_GIRDLE_THICKNESS, callCutChangeObservers);\r\nPage.Range.addLazyObserver(controlId.CUSTOM_CUT_GIRDLE_ROUNDNESS, callCutChangeObservers);\r\nPage.Range.addLazyObserver(controlId.CUSTOM_CUT_PAVILLION_HEIGHT, callCutChangeObservers);\r\nPage.Range.addLazyObserver(controlId.CUSTOM_CUT_PAVILLION_RATIO, callCutChangeObservers);\r\n\r\nconst recomputeShaderObservers: Observer[] = [];\r\nconst callRecomputeShaderObservers = () => { callObservers(recomputeShaderObservers); };\r\nPage.Range.addLazyObserver(controlId.RAY_DEPTH_RANGE_ID, callRecomputeShaderObservers);\r\n\r\nconst canvasResizeObservers: Observer[] = [];\r\nconst callCanvasResizeObservers = () => { callObservers(canvasResizeObservers); };\r\nPage.Canvas.Observers.canvasResize.push(callCanvasResizeObservers);\r\nPage.Checkbox.addObserver(controlId.HIGH_DPI_CHEKBOX_ID, callCanvasResizeObservers);\r\n\r\nconst cameraChangeObservers: Observer[] = [];\r\nconst callCameraChangeObservers = () => { callObservers(cameraChangeObservers); };\r\nPage.Tabs.addObserver(controlId.PROJECTION_TABS_ID, callCameraChangeObservers);\r\n\r\nconst backgroundColorChangeObservers: Observer[] = [];\r\nconst backgroundColor: IRGB = { r: 0, g: 0, b: 0 };\r\nfunction updateBackgroundColor(): void {\r\n    const rgb = Page.ColorPicker.getValue(controlId.BACKGROUND_COLOR_PICKER);\r\n    backgroundColor.r = rgb.r;\r\n    backgroundColor.g = rgb.g;\r\n    backgroundColor.b = rgb.b;\r\n\r\n    callObservers(backgroundColorChangeObservers);\r\n}\r\nPage.ColorPicker.addObserver(controlId.BACKGROUND_COLOR_PICKER, updateBackgroundColor);\r\nupdateBackgroundColor();\r\n\r\nconst gemColor: IRGB = { r: 0, g: 0, b: 0 };\r\nfunction updateGemColor(): void {\r\n    const rgb = Page.ColorPicker.getValue(controlId.GEM_COLOR_PICKER);\r\n    gemColor.r = rgb.r;\r\n    gemColor.g = rgb.g;\r\n    gemColor.b = rgb.b;\r\n}\r\nPage.ColorPicker.addObserver(controlId.GEM_COLOR_PICKER, updateGemColor);\r\nupdateGemColor();\r\n\r\nabstract class Parameters {\r\n    public static get cutName(): string {\r\n        return Page.Picker.getValue(controlId.CUT_PICKER_ID);\r\n    }\r\n\r\n    public static get refractionIndex(): number {\r\n        return Page.Range.getValue(controlId.REFRACTION_RANGE_ID);\r\n    }\r\n\r\n    public static get displaySkybox(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.DISPLAY_SKYBOX_CHECKBOX_ID);\r\n    }\r\n\r\n    public static get headShadow(): number {\r\n        const value = Page.Range.getValue(controlId.HEAD_SHADOW_RANGE_ID);\r\n        return 1 - 0.02 * value;\r\n    }\r\n\r\n    public static get backgroundColor(): IRGB {\r\n        return backgroundColor;\r\n    }\r\n\r\n    public static get gemColor(): IRGB {\r\n        return gemColor;\r\n    }\r\n\r\n    public static get absorption(): number {\r\n        return Page.Range.getValue(controlId.GEM_ABSOPTION_RANGE_ID);\r\n    }\r\n\r\n    public static get dispersion(): number {\r\n        return Page.Range.getValue(controlId.DISPERSION_RANGE_ID);\r\n    }\r\n\r\n    public static get rayDepth(): number {\r\n        return Math.ceil(Page.Range.getValue(controlId.RAY_DEPTH_RANGE_ID));\r\n    }\r\n\r\n    public static get displayReflection(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.REFLECTION);\r\n    }\r\n\r\n    public static get displayRaytracedVolume(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.RAYTRACED_VOLUME);\r\n    }\r\n\r\n    public static get displayNormals(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.DISPLAY_NORMALS);\r\n    }\r\n\r\n    public static get verbose(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.VERBOSE);\r\n    }\r\n\r\n    public static get projection(): EProjection {\r\n        return Page.Tabs.getValues(controlId.PROJECTION_TABS_ID)[0] as EProjection;\r\n    }\r\n\r\n    public static get geometryOnly(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.GEOMETRY_ONLY_CHECKBOX_ID);\r\n    }\r\n\r\n    public static get autoRotate(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.AUTO_ROTATE_CHECKBOX_ID);\r\n    }\r\n\r\n    public static get postProcessing(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.POST_PROCESSING_CHECKBOX_ID);\r\n    }\r\n\r\n    public static get highDPI(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.HIGH_DPI_CHEKBOX_ID);\r\n    }\r\n\r\n    public static get lightType(): ELightType {\r\n        return +Page.Tabs.getValues(controlId.LIGHT_TYPE_TABS_ID)[0] as ELightType;\r\n    }\r\n    public static get lightDirection(): ELightDirection {\r\n        return Page.Tabs.getValues(controlId.LIGHT_DIRECTION_TABS_ID)[0] as ELightDirection;\r\n    }\r\n\r\n    public static get customCutCrownHeight(): number {\r\n        return Page.Range.getValue(controlId.CUSTOM_CUT_CROWN_HEIGHT);\r\n    }\r\n    public static get customCutCrownTable(): number {\r\n        return Page.Range.getValue(controlId.CUSTOM_CUT_CROWN_TABLE);\r\n    }\r\n    public static get customCutCrownRatio(): number {\r\n        return Page.Range.getValue(controlId.CUSTOM_CUT_CROWN_RATIO);\r\n    }\r\n    public static get customCutGirdleThickness(): number {\r\n        return Page.Range.getValue(controlId.CUSTOM_CUT_GIRDLE_THICKNESS);\r\n    }\r\n    public static get customCutGirdleRoundess(): number {\r\n        return Page.Range.getValue(controlId.CUSTOM_CUT_GIRDLE_ROUNDNESS);\r\n    }\r\n    public static get customCutPavillionHeight(): number {\r\n        return Page.Range.getValue(controlId.CUSTOM_CUT_PAVILLION_HEIGHT);\r\n    }\r\n    public static get customCutPavillionRati(): number {\r\n        return Page.Range.getValue(controlId.CUSTOM_CUT_PAVILLION_RATIO);\r\n    }\r\n\r\n    public static addCutChangeObserver(observer: Observer): void {\r\n        cutChangeObservers.push(observer);\r\n    }\r\n\r\n    public static addBackgroundColorObserver(observer: Observer): void {\r\n        backgroundColorChangeObservers.push(observer);\r\n    }\r\n\r\n    public static addRecomputeShaderObservers(observer: Observer): void {\r\n        recomputeShaderObservers.push(observer);\r\n    }\r\n\r\n    public static addCanvasResizeObservers(observer: Observer): void {\r\n        canvasResizeObservers.push(observer);\r\n    }\r\n\r\n    public static addCameraChangeObservers(observer: Observer): void {\r\n        cameraChangeObservers.push(observer);\r\n    }\r\n}\r\n\r\nfunction updateCustomCutSection(): void {\r\n    Page.Sections.setVisibility(\"custom-cut-section\", Parameters.cutName === \"CUSTOM CUT\");\r\n}\r\nParameters.addCutChangeObserver(updateCustomCutSection);\r\nupdateCustomCutSection();\r\n\r\nPage.Controls.setVisibility(controlId.HIGH_DPI_CHEKBOX_ID, window.devicePixelRatio > 1);\r\n\r\nfunction updateIndicatorsVisibility(): void {\r\n    const visible = Page.Checkbox.isChecked(controlId.DISPLAY_INDICATORS);\r\n    Page.Canvas.setIndicatorsVisibility(visible);\r\n}\r\nPage.Checkbox.addObserver(controlId.DISPLAY_INDICATORS, updateIndicatorsVisibility);\r\nupdateIndicatorsVisibility();\r\n\r\nfunction updateBackgroundVisibility(): void {\r\n    Page.Controls.setVisibility(controlId.BACKGROUND_COLOR_PICKER, !Parameters.displaySkybox);\r\n}\r\nPage.Checkbox.addObserver(controlId.DISPLAY_SKYBOX_CHECKBOX_ID, updateBackgroundVisibility);\r\nupdateBackgroundVisibility();\r\n\r\nfunction updateLightControlsVisibility(): void {\r\n    Page.Controls.setVisibility(controlId.HEAD_SHADOW_RANGE_ID, Parameters.lightType === ELightType.RANDOM);\r\n}\r\nPage.Tabs.addObserver(controlId.LIGHT_TYPE_TABS_ID, updateLightControlsVisibility);\r\nupdateLightControlsVisibility();\r\n\r\n{\r\n    let isInDebug = false;\r\n    if (typeof URLSearchParams !== \"undefined\") {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        isInDebug = urlParams.get('debug') === \"1\";\r\n    }\r\n    Page.Sections.setVisibility(\"debug-section-id\", isInDebug);\r\n}\r\n\r\nexport {\r\n    ELightDirection,\r\n    ELightType,\r\n    EProjection,\r\n    Parameters,\r\n};\r\n","import * as ShaderSources from \"./gl-utils/shader-sources\";\r\nimport { VBO } from \"./gl-utils/vbo\";\r\nimport { LazyShader } from \"./lazy-shader\";\r\nimport { Parameters } from \"./parameters\";\r\n\r\ninterface ITexture {\r\n    texture: WebGLTexture;\r\n    framebuffer: WebGLFramebuffer;\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nconst SQUARE = new Float32Array([\r\n    -1, -1,\r\n    +1, -1,\r\n    -1, +1,\r\n    +1, +1,\r\n]);\r\n\r\nclass PostProcessing {\r\n    private readonly gl: WebGLRenderingContext;\r\n    private readonly squareVBO: VBO;\r\n\r\n    private readonly downsizingShader: LazyShader;\r\n    private readonly downsizedTexture: ITexture;\r\n\r\n    private readonly blurShader: LazyShader;\r\n    private readonly downsizedBlurredTexture: ITexture;\r\n\r\n    private readonly compositingShader: LazyShader;\r\n    private readonly fullSizeTexture: ITexture;\r\n\r\n    public constructor(gl: WebGLRenderingContext) {\r\n        this.gl = gl;\r\n\r\n        this.squareVBO = new VBO(gl, SQUARE, 2, gl.FLOAT, true);\r\n\r\n        this.downsizingShader = new LazyShader(ShaderSources.PostProcessingDownsizingFrag, ShaderSources.PostProcessingFullscreenVert, \"post-processing downsizing\");\r\n        this.blurShader = new LazyShader(ShaderSources.PostProcessingBlurFrag, ShaderSources.PostProcessingFullscreenVert, \"post-processing blur\");\r\n        this.blurShader.reset({\r\n            BLUR_INSTRUCTIONS: PostProcessing.buildGlowInstructions1D(3), // || PostProcessing.buildGlowInstructions2D(10),\r\n        });\r\n        this.compositingShader = new LazyShader(ShaderSources.PostProcessingCompositingFrag, ShaderSources.PostProcessingFullscreenVert, \"post-processing downsizing\");\r\n\r\n        this.fullSizeTexture = this.createTexture();\r\n        this.downsizedTexture = this.createTexture();\r\n        this.downsizedBlurredTexture = this.createTexture();\r\n    }\r\n\r\n    public isReady(): boolean {\r\n        // avoid lazy evaluation to force shader loading asap\r\n        const downsizingIsReady = !!this.downsizingShader.shader;\r\n        const blurIsReady = !!this.blurShader.shader;\r\n        const compositingIsReady = !!this.compositingShader.shader;\r\n        return downsizingIsReady && blurIsReady && compositingIsReady;\r\n    }\r\n\r\n    public prepare(): void {\r\n        const dpiScaling = Parameters.highDPI ? window.devicePixelRatio : 1;\r\n        const smallerTextureScaling = 1 / (8 * dpiScaling);\r\n\r\n        this.initializeTexture(this.fullSizeTexture, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\r\n        this.initializeTexture(this.downsizedTexture, smallerTextureScaling * this.fullSizeTexture.width, smallerTextureScaling * this.fullSizeTexture.height);\r\n        this.initializeTexture(this.downsizedBlurredTexture, this.downsizedTexture.width, this.downsizedTexture.height);\r\n\r\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.fullSizeTexture.framebuffer);\r\n        this.gl.viewport(0, 0, this.fullSizeTexture.width, this.fullSizeTexture.height);\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\r\n    }\r\n\r\n    public apply(): void {\r\n        const downsizingShader = this.downsizingShader.shader;\r\n        const blurShader = this.blurShader.shader;\r\n        const compositingShader = this.compositingShader.shader;\r\n        if (downsizingShader && blurShader && compositingShader) {\r\n            // downsize\r\n            {\r\n                downsizingShader.a[\"aCorner\"].VBO = this.squareVBO;\r\n                downsizingShader.u[\"uTexture\"].value = this.fullSizeTexture.texture;\r\n\r\n                downsizingShader.use();\r\n                downsizingShader.bindUniformsAndAttributes();\r\n\r\n                this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.downsizedTexture.framebuffer);\r\n                this.gl.viewport(0, 0, this.downsizedTexture.width, this.downsizedTexture.height);\r\n                this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\r\n            }\r\n\r\n            // blur\r\n            {\r\n                blurShader.a[\"aCorner\"].VBO = this.squareVBO;\r\n                blurShader.u[\"uTexture\"].value = this.downsizedTexture.texture;\r\n                blurShader.u[\"uTexelSize\"].value = [1 / this.downsizedTexture.width, 1 / this.downsizedTexture.height];\r\n\r\n                blurShader.use();\r\n                blurShader.bindUniformsAndAttributes();\r\n\r\n                this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.downsizedBlurredTexture.framebuffer);\r\n                this.gl.viewport(0, 0, this.downsizedBlurredTexture.width, this.downsizedBlurredTexture.height);\r\n                this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\r\n            }\r\n\r\n            // compositing\r\n            {\r\n                compositingShader.a[\"aCorner\"].VBO = this.squareVBO;\r\n                compositingShader.u[\"uFullsizeTexture\"].value = this.fullSizeTexture.texture;\r\n                compositingShader.u[\"uFullsizeTextureTexelSize\"].value = [1 / this.fullSizeTexture.width, 1 / this.fullSizeTexture.height];\r\n                compositingShader.u[\"uBlurredTexture\"].value = this.downsizedBlurredTexture.texture;\r\n\r\n                compositingShader.use();\r\n                compositingShader.bindUniformsAndAttributes();\r\n\r\n                this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\r\n                this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\r\n                this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\r\n                this.gl.bindTexture(this.gl.TEXTURE_2D, null);\r\n            }\r\n        }\r\n    }\r\n\r\n    private initializeTexture(texture: ITexture, wantedWidth: number, wantedHeight: number): void {\r\n        wantedWidth = Math.ceil(wantedWidth);\r\n        wantedHeight = Math.ceil(wantedHeight);\r\n\r\n        if (texture.width !== wantedWidth || texture.height !== wantedHeight) {\r\n            this.gl.bindTexture(this.gl.TEXTURE_2D, texture.texture);\r\n\r\n            const format = this.gl.RGBA;\r\n            this.gl.texImage2D(this.gl.TEXTURE_2D, 0, format, wantedWidth, wantedHeight, 0, format, this.gl.UNSIGNED_BYTE, null);\r\n            this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\r\n            this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\r\n            this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\r\n\r\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, texture.framebuffer);\r\n            this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, texture.texture, 0);\r\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\r\n\r\n            this.gl.bindTexture(this.gl.TEXTURE_2D, null);\r\n\r\n            texture.width = wantedWidth;\r\n            texture.height = wantedHeight;\r\n        }\r\n    }\r\n\r\n    private createTexture(): ITexture {\r\n        return {\r\n            texture: this.gl.createTexture(),\r\n            framebuffer: this.gl.createFramebuffer(),\r\n            width: -1,\r\n            height: -1,\r\n        };\r\n    }\r\n\r\n    // private static buildGlowInstructions2D(radius: number): string {\r\n    //     const sigma = 2;\r\n    //     function factor(x: number, y: number): number {\r\n    //         return Math.exp(-(x * x + y * y) / (2 * sigma * sigma)) / (2 * Math.PI * sigma * sigma);\r\n    //     }\r\n\r\n    //     let total = factor(0, 0);\r\n    //     for (let iY = -radius; iY <= radius; iY++) {\r\n    //         for (let iX = -radius; iX <= radius; iX++) {\r\n    //             if (iX !== 0 || iY !== 0) {\r\n    //                 total += factor(iX, iY);\r\n    //             }\r\n    //         }\r\n    //     }\r\n\r\n    //     const instructions: string[] = [];\r\n    //     instructions.push(`glow += ${factor(0, 0) / total} * contribution(vSamplingPosition);`);\r\n    //     for (let iY = -radius; iY <= radius; iY++) {\r\n    //         for (let iX = -radius; iX <= radius; iX++) {\r\n    //             if (iX !== 0 || iY !== 0) {\r\n    //                 instructions.push(`glow += ${factor(iX, iY) / total} * contribution(vSamplingPosition + vec2(${iX}, ${iY}) * uTexelSize);`);\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     return instructions.join(\"\\n\\t\");\r\n    // }\r\n\r\n    private static buildGlowInstructions1D(radius: number): string {\r\n        const sigma = 8;\r\n        function factor(x: number): number {\r\n            return Math.exp(-(x * x) / (2 * sigma * sigma)) / Math.sqrt(2 * Math.PI * sigma * sigma);\r\n        }\r\n\r\n        let total = 0;\r\n        for (let i = -radius - 0.5; i <= radius; i++) {\r\n            total += factor(i);\r\n        }\r\n\r\n        const instructions: string[] = [];\r\n        for (let i = -radius - 0.5; i <= radius + 0.5; i++) {\r\n            instructions.push(`blurred += ${factor(i) / total} * contribution(vec2(${i}, ${i}));`);\r\n            instructions.push(`blurred += ${factor(i) / total} * contribution(vec2(${i}, ${-i}));`);\r\n        }\r\n        instructions.push(`blurred *= 0.5;`); // normalize\r\n        instructions.push(`blurred *= 0.5;`);\r\n        return instructions.join(\"\\n\\t\");\r\n    }\r\n}\r\n\r\nexport { PostProcessing };\r\n\r\n","function traceRegistration(name: string): void {\r\n    console.log(`Registering polyfill for '${name}'.`);\r\n}\r\n\r\nfunction registerStringStartsWithPolyfill(): void {\r\n    if (typeof String.prototype.startsWith !== \"function\") {\r\n        traceRegistration(\"String.startsWith\");\r\n        String.prototype.startsWith = function (tested: string): boolean {\r\n            return this.indexOf(tested) === 0;\r\n        };\r\n    }\r\n}\r\n\r\nfunction registerPolyfills(): void {\r\n    registerStringStartsWithPolyfill();\r\n}\r\n\r\nexport {\r\n    registerPolyfills,\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(633);\n"],"names":["cuts","Cuts","UNIT_CUBE","Float32Array","gl","Page","Canvas","showLoader","this","cubeVBO","VBO","FLOAT","geometryVBO","createBuffer","shader","LazyShader","ShaderSources","ShaderFrag","ShaderVert","shaderMulticolor","ShaderMulticolorFrag","raytracedVolumeShader","RaytracedVolumeFrag","RaytracedVolumeVert","normalsShader","NormalsFrag","shadersSkybox","SkyboxFrag","SkyboxVert","pMatrix","mat4","create","mvpMatrix","camera","OrbitalCamera","phi","theta","maxPhi","Math","PI","updateBackgroundColor","backgroundColor","Parameters","clearColor","r","g","b","Observers","mouseDrag","push","dX","dY","min","max","EPSILON","updateMVPMatrix","mouseWheel","delta","d","distance","canvasResize","addCameraChangeObservers","enable","CULL_FACE","frontFace","CCW","cullFace","BACK","disable","DEPTH_TEST","BLEND","addBackgroundColorObserver","addRecomputeShaderObservers","injectedForGemstone","computeInjectedInstructions","reset","setGemstone","gemstone","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","setIndicatorText","nbTriangles","toString","facets","length","CONVEXITY_ERROR_KEY","isConvex","Demopage","setErrorMessage","rotate","deltaAngle","draw","clear","COLOR_BUFFER_BIT","displaySkybox","drawSkybox","geometryOnly","isASETSkybox","lightType","ELightType","ASET","baseRefractionIndex","refractionIndex","wantedDispersion","dispersion","displayNormals","u","value","eyePos","projection","EProjection","ORTHOGRAPHIC","lightDirection","ELightDirection","DOWNWARD","headShadow","angle","atan2","cos","sin","displayReflection","gemAbsorption","absorption","gemColor","use","aPositionLoc","a","loc","enableVertexAttribArray","vertexAttribPointer","aNormalLoc","bindUniformsAndAttributes","drawArrays","TRIANGLES","drawDebugVolume","skyboxShader","aspectRatio","getAspectRatio","PERSPECTIVE","perspective","ortho","multiply","viewMatrix","facetsDefinitionInstructions","computeEntryPointInstructions","checkIfInsideInstructions","computeInternalIntersectionInstructions","i","facet","facetPointName","facetNormalName","point","x","y","z","normal","FACETS_DEFINITION","join","COMPUTE_ENTRY_POINT","CHECK_IF_INSIDE","COMPUTE_INTERNAL_INTERSECTION","RAY_DEPTH","rayDepth","Drawer","framesSinceLastFPSUpdate","timeOfLastFPSUpdate","performance","now","setInterval","fps","round","registerFrame","logParsingInfo","message","verbose","console","log","knownGemstones","triangles","Gemstone","mutualizeTrianglesVertices","buildBufferFromTriangles","buildFacetsFromTriangles","vertices","triangle","p1","p2","p3","checkConvexity","loadGemstone","name","customCut","objString","Error","fromObj","gemStone","input","lines","split","line","trim","lineItems","command","parseFloat","iV","indices","indice","computeBrilliantCut","computeTriangleNormal","result","knownFacet","registeredPlane","isInPlane","computePlaneFromTriangle","vertice","isInsideVolume","HALF_CROWN_SIZE","PAVILION_HEIGHT","customCutPavillionHeight","PAVILION_STEP","customCutPavillionRati","GIRDLE_THICKNESS","customCutGirdleThickness","GIRDLE_ROUNDNESS","customCutGirdleRoundess","CROWN_DEPTH","customCutCrownHeight","CROWN_RATIO","customCutCrownRatio","TABLE_SIZE","customCutCrownTable","CROWN_HEIGHT","vertex0","vertex1","cylindric","vertex2","rotateZ","vertex3","vertex4","vertex5","vertex6","vertex7","vertex8","vertex9","vertex10","vertex11","vertex12","vertex13","lowerFacet1","lowerFacet2","higherFacet1","higherFacet2","iSide","lowerFacet","higherFacet","lowerBaseVertex","upperBaseVertex","nbPoints","sideBaseAngle","iP","lowerN","computeIntersection","lowerNplus","upperN","upperNplus","nbTrianglesForOneEighth","iT","nbPointsSaved","knownVerticesStore","precision","pow","getSimilarVerticeFromStore","hash","Object","keys","v1","v2","v","v12","substraction","sqrt","dotProduct","averagePoint","points","plane","localCoords","abs","planes","radius","direction","initGL","flags","setError","canvas","getCanvas","getContext","adjustSize","hidpi","cssPixel","window","devicePixelRatio","width","floor","clientWidth","height","clientHeight","_gl","GLResource","cachedShaders","getShader","buildShader","infos","processSource","source","replace","match","injected","processedVert","vertexSource","processedFrag","fragmentSource","Shader","deleteShader","freeGLResources","PostProcessingBlurFrag","PostProcessingCompositingFrag","PostProcessingDownsizingFrag","PostProcessingFullscreenVert","skyboxFrag","shaderFrag","shaderMulticolorFrag","notImplemented","alert","types","str","binder","location","uniform2fv","uniform3fv","uniform4fv","uniform2iv","uniform3iv","uniform4iv","uniform1i","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","unitNb","activeTexture","bindTexture","TEXTURE_2D","TEXTURE_CUBE_MAP","Array","isArray","uniform1iv","uniform1fv","uniform1f","createShader","type","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","id","uCount","aCount","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","introspection","getProgramInfoLog","deleteProgram","useProgram","bindUniforms","currTextureUnitNb","forEach","uName","uniform","bindAttributes","aName","attribute","bind","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","size","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","Usage","array","staticUsage","DYNAMIC_DRAW","normalize","stride","offset","usage","STATIC","DYNAMIC","createQuad","minX","minY","maxX","maxY","deleteBuffer","setData","left","lower","setFullCanvas","viewport","drawingBufferWidth","drawingBufferHeight","set","Viewport","shaderIndex","fragmentShaderSource","vertexShaderSource","_shader","errorKey","errorMessage","build","newInjected","builtShader","ShaderManager","registerPolyfills","GLCanvas","alpha","antialias","depth","stencil","preserveDrawingBuffer","needToAdjustCanvasSize","addCanvasResizeObservers","drawer","postProcessing","PostProcessing","addCutChangeObserver","lastLoopUpdate","mainLoop","dt","FPSIndicator","highDPI","autoRotate","isMouseDown","displayRaytracedVolume","isReady","prepare","apply","requestAnimationFrame","loadedGemstone","cutName","main","focusPoint","_focus","_distance","_theta","_phi","_eyePos","_viewMatrix","recompute","newFocus","newDistance","newTheta","newPhi","lookAt","controlId","callObservers","observers","observer","cutChangeObservers","callCutChangeObservers","Picker","addObserver","Range","addLazyObserver","recomputeShaderObservers","canvasResizeObservers","callCanvasResizeObservers","Checkbox","cameraChangeObservers","Tabs","backgroundColorChangeObservers","rgb","ColorPicker","getValue","updateGemColor","isChecked","ceil","getValues","updateCustomCutSection","Sections","setVisibility","updateIndicatorsVisibility","visible","setIndicatorsVisibility","updateBackgroundVisibility","Controls","updateLightControlsVisibility","RANDOM","isInDebug","URLSearchParams","search","get","SQUARE","squareVBO","downsizingShader","blurShader","BLUR_INSTRUCTIONS","buildGlowInstructions1D","compositingShader","fullSizeTexture","createTexture","downsizedTexture","downsizedBlurredTexture","downsizingIsReady","blurIsReady","compositingIsReady","smallerTextureScaling","initializeTexture","bindFramebuffer","FRAMEBUFFER","framebuffer","texture","TRIANGLE_STRIP","wantedWidth","wantedHeight","format","RGBA","texImage2D","UNSIGNED_BYTE","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","createFramebuffer","factor","exp","total","instructions","String","prototype","startsWith","tested","indexOf","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call"],"sourceRoot":""}